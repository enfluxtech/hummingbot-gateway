{"version":3,"file":"mergeChannels.js","sources":["../../../src/utils/mergeChannels.ts"],"sourcesContent":["import { EventHandler } from \"../internal\"\nimport { Channel } from \"../internal/Channel\"\n\nexport function mergeChannels(channels: Channel[]) {\n    if (!channels.length) {\n        return null\n    }\n\n    return {\n        on: (eventName: string, handler: EventHandler) => {\n            const mergedOutput = Array.from({ length: channels.length })\n            const readyFlags = Array.from({ length: channels.length }, () => false)\n            const unsubscribeFns = channels.map((channel, idx) =>\n                channel.on(eventName, result => {\n                    const error = result?.error\n                    if (error) {\n                        handler({ error })\n                    } else {\n                        mergedOutput[idx] = result\n                        readyFlags[idx] = true\n                        if (readyFlags.every(flag => flag)) {\n                            handler(mergedOutput)\n                        }\n                    }\n                }),\n            )\n            return () => unsubscribeFns.forEach(fn => fn())\n        },\n    }\n}\n"],"names":["mergeChannels","channels","length","on","eventName","handler","mergedOutput","Array","from","readyFlags","unsubscribeFns","map","channel","idx","result","error","every","flag","forEach","fn"],"mappings":"AAGM,SAAUA,EAAcC,GAC1B,OAAKA,EAASC,OAIP,CACHC,GAAI,CAACC,EAAmBC,KACpB,MAAMC,EAAeC,MAAMC,KAAK,CAAEN,OAAQD,EAASC,SAC7CO,EAAaF,MAAMC,KAAK,CAAEN,OAAQD,EAASC,SAAU,KAAM,IAC3DQ,EAAiBT,EAASU,KAAI,CAACC,EAASC,IAC1CD,EAAQT,GAAGC,GAAWU,IAClB,MAAMC,EAAQD,aAAA,EAAAA,EAAQC,MAClBA,EACAV,EAAQ,CAAEU,WAEVT,EAAaO,GAAOC,EACpBL,EAAWI,IAAO,EACdJ,EAAWO,OAAMC,GAAQA,KACzBZ,EAAQC,GAEf,MAGT,MAAO,IAAMI,EAAeQ,SAAQC,GAAMA,KAAK,GArB5C,IAwBf"}