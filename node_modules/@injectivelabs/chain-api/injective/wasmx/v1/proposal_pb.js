// source: injective/wasmx/v1/proposal.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmwasm_wasm_v1_proposal_pb = require('../../../cosmwasm/wasm/v1/proposal_pb.js');
goog.object.extend(proto, cosmwasm_wasm_v1_proposal_pb);
goog.exportSymbol('proto.injective.wasmx.v1.BatchContractDeregistrationProposal', null, global);
goog.exportSymbol('proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal', null, global);
goog.exportSymbol('proto.injective.wasmx.v1.BatchStoreCodeProposal', null, global);
goog.exportSymbol('proto.injective.wasmx.v1.ContractRegistrationRequest', null, global);
goog.exportSymbol('proto.injective.wasmx.v1.ContractRegistrationRequestProposal', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.wasmx.v1.ContractRegistrationRequestProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.wasmx.v1.ContractRegistrationRequestProposal.displayName = 'proto.injective.wasmx.v1.ContractRegistrationRequestProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.displayName = 'proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.wasmx.v1.BatchContractDeregistrationProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.wasmx.v1.BatchContractDeregistrationProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.wasmx.v1.BatchContractDeregistrationProposal.displayName = 'proto.injective.wasmx.v1.BatchContractDeregistrationProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.wasmx.v1.ContractRegistrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.wasmx.v1.ContractRegistrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.wasmx.v1.ContractRegistrationRequest.displayName = 'proto.injective.wasmx.v1.ContractRegistrationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.wasmx.v1.BatchStoreCodeProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.wasmx.v1.BatchStoreCodeProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.wasmx.v1.BatchStoreCodeProposal.displayName = 'proto.injective.wasmx.v1.BatchStoreCodeProposal';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.wasmx.v1.ContractRegistrationRequestProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractRegistrationRequest: (f = msg.getContractRegistrationRequest()) && proto.injective.wasmx.v1.ContractRegistrationRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.wasmx.v1.ContractRegistrationRequestProposal;
  return proto.injective.wasmx.v1.ContractRegistrationRequestProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.injective.wasmx.v1.ContractRegistrationRequest;
      reader.readMessage(value,proto.injective.wasmx.v1.ContractRegistrationRequest.deserializeBinaryFromReader);
      msg.setContractRegistrationRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.wasmx.v1.ContractRegistrationRequestProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractRegistrationRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.injective.wasmx.v1.ContractRegistrationRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ContractRegistrationRequest contract_registration_request = 3;
 * @return {?proto.injective.wasmx.v1.ContractRegistrationRequest}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.getContractRegistrationRequest = function() {
  return /** @type{?proto.injective.wasmx.v1.ContractRegistrationRequest} */ (
    jspb.Message.getWrapperField(this, proto.injective.wasmx.v1.ContractRegistrationRequest, 3));
};


/**
 * @param {?proto.injective.wasmx.v1.ContractRegistrationRequest|undefined} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} returns this
*/
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.setContractRegistrationRequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequestProposal} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.clearContractRegistrationRequest = function() {
  return this.setContractRegistrationRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.wasmx.v1.ContractRegistrationRequestProposal.prototype.hasContractRegistrationRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractRegistrationRequestsList: jspb.Message.toObjectList(msg.getContractRegistrationRequestsList(),
    proto.injective.wasmx.v1.ContractRegistrationRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal;
  return proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.injective.wasmx.v1.ContractRegistrationRequest;
      reader.readMessage(value,proto.injective.wasmx.v1.ContractRegistrationRequest.deserializeBinaryFromReader);
      msg.addContractRegistrationRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractRegistrationRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.injective.wasmx.v1.ContractRegistrationRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ContractRegistrationRequest contract_registration_requests = 3;
 * @return {!Array<!proto.injective.wasmx.v1.ContractRegistrationRequest>}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.getContractRegistrationRequestsList = function() {
  return /** @type{!Array<!proto.injective.wasmx.v1.ContractRegistrationRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.wasmx.v1.ContractRegistrationRequest, 3));
};


/**
 * @param {!Array<!proto.injective.wasmx.v1.ContractRegistrationRequest>} value
 * @return {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} returns this
*/
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.setContractRegistrationRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest}
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.addContractRegistrationRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.wasmx.v1.ContractRegistrationRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractRegistrationRequestProposal.prototype.clearContractRegistrationRequestsList = function() {
  return this.setContractRegistrationRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.wasmx.v1.BatchContractDeregistrationProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.wasmx.v1.BatchContractDeregistrationProposal;
  return proto.injective.wasmx.v1.BatchContractDeregistrationProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addContracts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.wasmx.v1.BatchContractDeregistrationProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string contracts = 3;
 * @return {!Array<string>}
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.getContractsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.setContractsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.addContracts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.wasmx.v1.BatchContractDeregistrationProposal} returns this
 */
proto.injective.wasmx.v1.BatchContractDeregistrationProposal.prototype.clearContractsList = function() {
  return this.setContractsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.wasmx.v1.ContractRegistrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gasLimit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gasPrice: jspb.Message.getFieldWithDefault(msg, 3, 0),
    shouldPinContract: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isMigrationAllowed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    codeId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    adminAddress: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.wasmx.v1.ContractRegistrationRequest;
  return proto.injective.wasmx.v1.ContractRegistrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasPrice(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShouldPinContract(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMigrationAllowed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.wasmx.v1.ContractRegistrationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.wasmx.v1.ContractRegistrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGasLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getGasPrice();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getShouldPinContract();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsMigrationAllowed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAdminAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string contract_address = 1;
 * @return {string}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setContractAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 gas_limit = 2;
 * @return {number}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getGasLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setGasLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 gas_price = 3;
 * @return {number}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getGasPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setGasPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool should_pin_contract = 4;
 * @return {boolean}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getShouldPinContract = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setShouldPinContract = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_migration_allowed = 5;
 * @return {boolean}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getIsMigrationAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setIsMigrationAllowed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional uint64 code_id = 6;
 * @return {number}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string admin_address = 7;
 * @return {string}
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.getAdminAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.ContractRegistrationRequest} returns this
 */
proto.injective.wasmx.v1.ContractRegistrationRequest.prototype.setAdminAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.wasmx.v1.BatchStoreCodeProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.wasmx.v1.BatchStoreCodeProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    proposalsList: jspb.Message.toObjectList(msg.getProposalsList(),
    cosmwasm_wasm_v1_proposal_pb.StoreCodeProposal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.wasmx.v1.BatchStoreCodeProposal}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.wasmx.v1.BatchStoreCodeProposal;
  return proto.injective.wasmx.v1.BatchStoreCodeProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.wasmx.v1.BatchStoreCodeProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.wasmx.v1.BatchStoreCodeProposal}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new cosmwasm_wasm_v1_proposal_pb.StoreCodeProposal;
      reader.readMessage(value,cosmwasm_wasm_v1_proposal_pb.StoreCodeProposal.deserializeBinaryFromReader);
      msg.addProposals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.wasmx.v1.BatchStoreCodeProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.wasmx.v1.BatchStoreCodeProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmwasm_wasm_v1_proposal_pb.StoreCodeProposal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.BatchStoreCodeProposal} returns this
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.wasmx.v1.BatchStoreCodeProposal} returns this
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated cosmwasm.wasm.v1.StoreCodeProposal proposals = 3;
 * @return {!Array<!proto.cosmwasm.wasm.v1.StoreCodeProposal>}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.getProposalsList = function() {
  return /** @type{!Array<!proto.cosmwasm.wasm.v1.StoreCodeProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmwasm_wasm_v1_proposal_pb.StoreCodeProposal, 3));
};


/**
 * @param {!Array<!proto.cosmwasm.wasm.v1.StoreCodeProposal>} value
 * @return {!proto.injective.wasmx.v1.BatchStoreCodeProposal} returns this
*/
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.setProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmwasm.wasm.v1.StoreCodeProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmwasm.wasm.v1.StoreCodeProposal}
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.addProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmwasm.wasm.v1.StoreCodeProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.wasmx.v1.BatchStoreCodeProposal} returns this
 */
proto.injective.wasmx.v1.BatchStoreCodeProposal.prototype.clearProposalsList = function() {
  return this.setProposalsList([]);
};


goog.object.extend(exports, proto.injective.wasmx.v1);
