{"version":3,"file":"errorChecker.js","sources":["../../../src/utils/errorChecker.ts"],"sourcesContent":["// TODO: better to create errors only when is certain an error has occurred, instead of always create one and pass in as args.\nexport type ErrorFactory = (error?: Error) => void\n\nexport function invariant(expectedCondition: boolean, errorFactory: ErrorFactory): asserts expectedCondition {\n    if (!expectedCondition) {\n        throw errorFactory()\n    }\n}\n\nexport function errorGuard<T>(func: () => T, errorFactory: ErrorFactory) {\n    try {\n        return func()\n    } catch (rawError) {\n        throw errorFactory(rawError as Error)\n    }\n}\n\nexport async function errorGuardAsync<T>(func: () => Promise<T>, errorFactory: ErrorFactory) {\n    try {\n        return await func()\n    } catch (rawError) {\n        throw errorFactory(rawError as Error)\n    }\n}\n"],"names":["func","errorFactory","rawError","async","expectedCondition"],"mappings":"uFASgB,SAAcA,EAAeC,GACzC,IACI,OAAOD,GAGV,CAFC,MAAOE,GACL,MAAMD,EAAaC,EACtB,CACL,0BAEOC,eAAkCH,EAAwBC,GAC7D,IACI,aAAaD,GAGhB,CAFC,MAAOE,GACL,MAAMD,EAAaC,EACtB,CACL,oBApBgB,SAAUE,EAA4BH,GAClD,IAAKG,EACD,MAAMH,GAEd"}