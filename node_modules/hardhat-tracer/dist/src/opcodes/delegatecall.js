"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printDelegateCall = void 0;
const utils_1 = require("ethers/lib/utils");
const colors_1 = require("../colors");
const constants_1 = require("../constants");
const utils_2 = require("../utils");
const call_1 = require("../format/call");
const gas_cost_1 = require("../format/gas-cost");
async function printDelegateCall(structLog, index, structLogs, dependencies) {
    const stack = (0, utils_2.shallowCopyStack)(structLog.stack);
    if (stack.length < 6) {
        console.log("Faulty DELEGATECALL");
        return;
    }
    const gas = (0, utils_2.parseUint)(stack.pop());
    const to = (0, utils_2.parseAddress)(stack.pop());
    // hardhat console.log address
    if (to === "0x000000000000000000636f6e736f6c652e6c6f67") {
        return;
    }
    const argsOffset = (0, utils_2.parseNumber)(stack.pop());
    const argsSize = (0, utils_2.parseNumber)(stack.pop());
    const retOffset = (0, utils_2.parseNumber)(stack.pop());
    const retSize = (0, utils_2.parseNumber)(stack.pop());
    const memory = (0, utils_2.parseMemory)(structLog.memory);
    const input = (0, utils_1.hexlify)(memory.slice(argsOffset, argsOffset + argsSize));
    // return data
    const [structLogNext, structLogNextNext] = (0, utils_2.findNextStructLogInDepth)(structLogs, structLog.depth, index + 1 // find next structLog in the same depth
    );
    const ret = (0, utils_1.hexlify)((0, utils_2.parseMemory)(structLogNext.memory).slice(retOffset, retOffset + retSize));
    const str = await (0, call_1.formatCall)(to, input, ret, 0, gas, dependencies);
    console.log(constants_1.DEPTH_INDENTATION.repeat(structLog.depth) +
        (0, colors_1.colorLabel)("DELEGATECALL") +
        " " +
        str +
        (0, gas_cost_1.formatGasCost)(structLog, structLog.gas - structLogNextNext.gas, dependencies));
}
exports.printDelegateCall = printDelegateCall;
//# sourceMappingURL=delegatecall.js.map