"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./type/factories/AccountBalance__factory.js"),r=require("ethers"),t=require("./type/factories/BaseToken__factory.js"),a=require("./type/factories/ClearingHouse__factory.js"),o=require("./type/factories/ClearingHouseConfig__factory.js"),c=require("./type/factories/CollateralManager__factory.js"),s=require("./type/factories/DelegateApproval__factory.js"),i=require("./type/factories/Exchange__factory.js");require("./type/factories/InsuranceFund__factory.js");var n=require("./type/factories/IERC20Metadata__factory.js"),l=require("./type/factories/MarketRegistry__factory.js"),_=require("./type/factories/OrderBook__factory.js");require("./type/factories/QuoteToken__factory.js");var f=require("./type/factories/Vault__factory.js");require("./type/factories/VirtualToken__factory.js"),require("./type/factories/BandPriceFeed__factory.js");var y=require("./type/factories/ChainlinkPriceFeed__factory.js");require("./type/factories/ChainlinkPriceFeedV2__factory.js"),require("./type/factories/EmergencyPriceFeed__factory.js");var d=require("./type/factories/IPriceFeed__factory.js");require("./type/factories/PriceFeedUpdater__factory.js"),require("./type/factories/CumulativeTwap__factory.js");var u=require("./type/factories/Multicall2__factory.js"),p=require("./type/factories/PerpPortal__factory.js"),g=require("./type/factories/Quoter__factory.js"),h=require("./type/factories/LimitOrderBook__factory.js");require("./type/factories/LimitOrderRewardVault__factory.js"),require("./type/factories/MetaTxGateway__factory.js");var C,k=require("./type/factories/UniswapV3Pool__factory.js"),T=require("./type/factories/AggregatorV3Interface__factory.js");exports.ContractName=void 0,(C=exports.ContractName||(exports.ContractName={})).VAULT="Vault",C.CLEARINGHOUSE="ClearingHouse",C.ORDERBOOK="OrderBook",C.CLEARINGHOUSE_CONFIG="ClearingHouseConfig",C.COLLATERAL_MANAGER="CollateralManager",C.SETTLEMENT_TOKEN="SettlementToken",C.COLLATERAL_TOKENS="CollateralTokens",C.BASE_TOKEN="BaseToken",C.CHAINLINK_PRICE_FEED="ChainlinkPriceFeed",C.POOL="Pool",C.QUOTER="Quoter",C.EXCHANGE="Exchange",C.ACCOUNT_BALANCE="AccountBalance",C.MARKET_REGISTRY="MarketRegistry",C.MULTICALL2="Multicall2",C.PerpPortal="PerpPortal",C.Token0="Token0",C.Token1="Token1",C.LimitOrderBook="LimitOrderBook",C.DelegateApproval="DelegateApproval";exports.Contracts=class{constructor({metadata:d,provider:C}){this.hasSigner=!1,this.collateralTokenMap=new Map;const{ClearingHouse:A,ClearingHouseConfig:E,OrderBook:q,Vault:j,Quoter:M,Exchange:O,MarketRegistry:P,AccountBalance:B,Multicall2:v,PerpPortal:R,CollateralManager:L,LimitOrderBook:m,DelegateApproval:I}=d.contracts,{USDC:F}=d.externalContracts,H=d.collaterals;this._setCollateralTokenMap(H,C),this.vault=f.Vault__factory.connect(j.address,C),this.clearingHouse=a.ClearingHouse__factory.connect(A.address,C),this.clearingHouseConfig=o.ClearingHouseConfig__factory.connect(E.address,C),this.orderBook=_.OrderBook__factory.connect(q.address,C),this.collateralManager=c.CollateralManager__factory.connect(L.address,C),this.settlementToken=n.IERC20Metadata__factory.connect(F,C),this.baseToken=t.BaseToken__factory.connect(r.constants.AddressZero,C),this.baseTokenPriceFeed=y.ChainlinkPriceFeed__factory.connect(r.constants.AddressZero,C),this.baseTokenPriceFeedAggregator=T.AggregatorV3Interface__factory.connect(r.constants.AddressZero,C),this.pool=k.UniswapV3Pool__factory.connect(r.constants.AddressZero,C),this.quoter=g.Quoter__factory.connect(M.address,C),this.exchange=i.Exchange__factory.connect(O.address,C),this.marketRegistry=l.MarketRegistry__factory.connect(P.address,C),this.accountBalance=e.AccountBalance__factory.connect(B.address,C),this.multicall2=u.Multicall2__factory.connect(v.address,C),this.perpPortal=p.PerpPortal__factory.connect(R.address,C),this.limitOrderBook=h.LimitOrderBook__factory.connect(m.address,C),this.delegateApproval=s.DelegateApproval__factory.connect(I.address,C),this._provider=C}connect(e){this.hasSigner=!0,this.vault=this.vault.connect(e),this.clearingHouse=this.clearingHouse.connect(e),this.settlementToken=this.settlementToken.connect(e),this.collateralTokenMap.forEach(((r,t)=>{this.collateralTokenMap.set(t,{...r,contract:r.contract.connect(e)})})),this.delegateApproval=this.delegateApproval.connect(e),this.limitOrderBook=this.limitOrderBook.connect(e)}createIERC20Token(e){return n.IERC20Metadata__factory.connect(e,this._provider)}_setCollateralTokenMap(e,r){e.forEach((e=>this.collateralTokenMap.set(e.address,{contract:n.IERC20Metadata__factory.connect(e.address,r),priceFeedContract:d.IPriceFeed__factory.connect(e.priceFeedAddress,r)})))}};
//# sourceMappingURL=Contracts.js.map
