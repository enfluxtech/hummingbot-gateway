// package: injective.ocr.v1beta1
// file: injective/ocr/v1beta1/tx.proto

import * as injective_ocr_v1beta1_tx_pb from "../../../injective/ocr/v1beta1/tx_pb";
import {grpc} from "@improbable-eng/grpc-web";

type MsgCreateFeed = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgCreateFeed;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgCreateFeedResponse;
};

type MsgUpdateFeed = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgUpdateFeed;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgUpdateFeedResponse;
};

type MsgTransmit = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgTransmit;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgTransmitResponse;
};

type MsgFundFeedRewardPool = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgFundFeedRewardPool;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgFundFeedRewardPoolResponse;
};

type MsgWithdrawFeedRewardPool = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgWithdrawFeedRewardPool;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgWithdrawFeedRewardPoolResponse;
};

type MsgSetPayees = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgSetPayees;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgSetPayeesResponse;
};

type MsgTransferPayeeship = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgTransferPayeeship;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgTransferPayeeshipResponse;
};

type MsgAcceptPayeeship = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof injective_ocr_v1beta1_tx_pb.MsgAcceptPayeeship;
  readonly responseType: typeof injective_ocr_v1beta1_tx_pb.MsgAcceptPayeeshipResponse;
};

export class Msg {
  static readonly serviceName: string;
  static readonly CreateFeed: MsgCreateFeed;
  static readonly UpdateFeed: MsgUpdateFeed;
  static readonly Transmit: MsgTransmit;
  static readonly FundFeedRewardPool: MsgFundFeedRewardPool;
  static readonly WithdrawFeedRewardPool: MsgWithdrawFeedRewardPool;
  static readonly SetPayees: MsgSetPayees;
  static readonly TransferPayeeship: MsgTransferPayeeship;
  static readonly AcceptPayeeship: MsgAcceptPayeeship;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class MsgClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  createFeed(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgCreateFeed,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgCreateFeedResponse|null) => void
  ): UnaryResponse;
  createFeed(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgCreateFeed,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgCreateFeedResponse|null) => void
  ): UnaryResponse;
  updateFeed(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgUpdateFeed,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgUpdateFeedResponse|null) => void
  ): UnaryResponse;
  updateFeed(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgUpdateFeed,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgUpdateFeedResponse|null) => void
  ): UnaryResponse;
  transmit(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgTransmit,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgTransmitResponse|null) => void
  ): UnaryResponse;
  transmit(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgTransmit,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgTransmitResponse|null) => void
  ): UnaryResponse;
  fundFeedRewardPool(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgFundFeedRewardPool,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgFundFeedRewardPoolResponse|null) => void
  ): UnaryResponse;
  fundFeedRewardPool(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgFundFeedRewardPool,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgFundFeedRewardPoolResponse|null) => void
  ): UnaryResponse;
  withdrawFeedRewardPool(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgWithdrawFeedRewardPool,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgWithdrawFeedRewardPoolResponse|null) => void
  ): UnaryResponse;
  withdrawFeedRewardPool(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgWithdrawFeedRewardPool,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgWithdrawFeedRewardPoolResponse|null) => void
  ): UnaryResponse;
  setPayees(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgSetPayees,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgSetPayeesResponse|null) => void
  ): UnaryResponse;
  setPayees(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgSetPayees,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgSetPayeesResponse|null) => void
  ): UnaryResponse;
  transferPayeeship(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgTransferPayeeship,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgTransferPayeeshipResponse|null) => void
  ): UnaryResponse;
  transferPayeeship(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgTransferPayeeship,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgTransferPayeeshipResponse|null) => void
  ): UnaryResponse;
  acceptPayeeship(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgAcceptPayeeship,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgAcceptPayeeshipResponse|null) => void
  ): UnaryResponse;
  acceptPayeeship(
    requestMessage: injective_ocr_v1beta1_tx_pb.MsgAcceptPayeeship,
    callback: (error: ServiceError|null, responseMessage: injective_ocr_v1beta1_tx_pb.MsgAcceptPayeeshipResponse|null) => void
  ): UnaryResponse;
}

