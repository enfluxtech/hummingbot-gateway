"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../network/network.js");require("../network/constants.js"),require("../network/RetryProvider.js");var t=require("../network/utils.js"),r=require("../internal/ChannelRegistry.js");require("../constants/envVariables.js"),require("../constants/numbers.js"),require("big.js"),require("ethers");var i=require("./clearingHouse/ClearingHouse.js"),s=require("./clearingHouse/ClearingHouseConfig.js"),a=require("../errors/errors.js");require("./position/types.js");var n=require("../utils/errorChecker.js");require("../utils/tick.js");var o=require("./contractReader/ContractReader.js"),u=require("../contracts/Contracts.js");require("./liquidity/LiquidityDraft.js");var l=require("./liquidity/Liquidities.js");require("./liquidity/LiquidityBase.js");var h=require("./position/Positions.js");require("./position/Position.js");var c=require("./market/Markets.js");require("./market/Market.js");var d=require("../metadata/Metadata.js"),g=require("./vault/Vault.js"),p=require("./wallet/Wallet.js"),q=require("./clearingHouse/DelegateApproval.js"),_=require("./limitOrder/LimitOrderBook.js");exports.PerpetualProtocol=class{constructor({chainId:i,providerConfigs:s,moduleConfigs:n}){if(!t.isSupportedChainId(i))throw new a.UnsupportedChainError;this._chainId=i,this.providerConfigs=s,this.moduleConfigs=n,this._channelRegistry=new r.ChannelRegistry,this.provider=e.getRetryProvider(s)}get metadata(){return this._metadata}get contracts(){return this._contracts}get contractReader(){return this._contractReader}get wallet(){return this._wallet}get vault(){return this._vault}get markets(){return n.invariant(!!this._markets,(()=>new a.FailedPreconditionError({functionName:"markets",stateName:"perp",stateValue:"uninitialized"}))),this._markets}get clearingHouseConfig(){return n.invariant(!!this._clearingHouseConfig,(()=>new a.FailedPreconditionError({functionName:"clearingHouseConfig",stateName:"perp",stateValue:"uninitialized"}))),this._clearingHouseConfig}get clearingHouse(){return this._clearingHouse}get positions(){return this._positions}get liquidities(){return this._liquidities}get channelRegistry(){return this._channelRegistry}get delegateApproval(){return this._delegateApproval}get limitOrderBook(){return this._limitOrderBook}async init(){try{this._metadata=await d.Metadata.create(this._chainId),this._contracts=new u.Contracts({metadata:this.metadata,provider:this.provider}),this._contractReader=new o.ContractReader({metadata:this.metadata,provider:this.provider,contracts:this.contracts}),this._markets=new c.Markets(this),this._clearingHouseConfig=await s.ClearingHouseConfig.create(this.contractReader),this._clearingHouse=new i.ClearingHouse(this)}catch(e){throw new a.InitSDKError(e)}}async connect({signer:e}){var r;if(!t.isSupportedChainId(await e.getChainId()))throw new a.UnsupportedChainError;const i=await e.getAddress();this.contracts.connect(e),this._wallet=new p.Wallet(this,i),this._vault=new g.Vault(this,i),this.hasConnected()&&(this._delegateApproval=new q.DelegateApproval(this,null===(r=this.moduleConfigs)||void 0===r?void 0:r.delegateApproval),this._limitOrderBook=new _.LimitOrderBook(this),this._positions=new h.Positions(this),this._liquidities=new l.Liquidities(this))}hasInitialized(){return!!this._markets&&!!this._clearingHouse}hasConnected(){return this.hasInitialized()&&!!this._wallet}destroy(){this._channelRegistry.cleanUp()}};
//# sourceMappingURL=PerpetualProtocol.js.map
