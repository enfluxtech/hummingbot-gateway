"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../../internal/Channel.js"),t=require("../../internal/ChannelEventSource.js"),a=require("../../internal/createMemoizedFetcher.js"),i=require("../clearingHouse/utils.js");require("../../constants/envVariables.js");var s=require("../../constants/numbers.js"),r=require("big.js"),n=require("./types.js"),o=require("../../errors/errors.js"),c=require("../../utils/errorChecker.js");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("ethers"),require("../../utils/tick.js");var h=u(r);class l extends e.Channel{constructor(e,{market:t,side:a=n.PositionSide.LONG,amountInput:i=s.BIG_ZERO,isAmountInputBase:r=!1}){super(e.channelRegistry),this._perp=e,this._cache=new Map,this.market=t,this.side=a,this.amountInput=i,this.isAmountInputBase=r,this._feeRatio=e.clearingHouseConfig.marketExchangeFeeRatios[t.baseAddress],this._imRatio=e.clearingHouseConfig.imRatio,this._contractReader=e.contractReader}get isBaseToQuote(){return this.side===n.PositionSide.SHORT}get isExactInput(){return this.isBaseToQuote?this.isAmountInputBase:!this.isAmountInputBase}async getOppositeAmountBound(e){const{output:t}=await this._fetch("swap",{cache:!1});let a;return this.isExactInput?a=t.mul(new h.default(1).sub(e)):(a=t.mul(new h.default(1).add(e)),e.eq(0)&&!this.isBaseToQuote&&(a=a.add(new h.default(1).mul(1e-18)))),a}_getEventSourceMap(){const e=this._createFetchUpdateData();return{updated:new t.ChannelEventSource({eventSourceStarter:()=>this.market.on("updated",(async()=>{this._handleMarketUpdate()}))}),buyingPowerUpdated:new t.ChannelEventSource({eventSourceStarter:()=>{c.invariant(this._perp.hasConnected(),(()=>new o.UnauthorizedError({functionName:"_getEventSourceMap"})));const t=this._perp.vault.on("updated",(()=>{e(!1,!0)})),a=this._perp.positions.on("updated",(()=>{e(!1,!0)}));return()=>{t(),a()}}})}}_createFetchUpdateData(){const e=async()=>{try{return await this.getBuyingPower({cache:!1})}catch(e){this.emit("updateError",{error:e})}};return a.createMemoizedFetcher((()=>e()),(()=>{this.emit("buyingPowerUpdated",this)}),((e,t)=>!e||!t||a.hasNumberChange(e,t)))}async _handleMarketUpdate(){if(!this.amountInput.lte(0))try{await this._fetch("swap",{cache:!1}),this._perp.hasConnected()&&await this._fetch("relatedData",{cache:!1}),this.emit("updated",this)}catch(e){this.emit("updateError",{error:e})}}async getSwap({cache:e=!0}={}){return this._fetch("swap",{cache:e})}async getEntryPrice({cache:e=!0}={}){const{exchangedPositionSize:t,exchangedPositionNotional:a}=await this._fetch("swap",{cache:e});return i.getSwapRate({amountBase:t,amountQuote:a})}async getPriceImpact({cache:e=!0}={}){const t=await this.getEntryPrice({cache:e}),{markPrice:a}=await this.market.getPrices({cache:e});return i.getPriceImpact({price:t,markPrice:a})}async getTransactionFee({cache:e=!0}={}){const{deltaAvailableQuote:t,exchangedPositionNotional:a}=await this._fetch("swap",{cache:e});return i.getTransactionFee({isBaseToQuote:this.isBaseToQuote,exchangedPositionNotional:a,deltaAvailableQuote:t,feeRatio:this._feeRatio})}async getBuyingPower({cache:e=!0}={}){c.invariant(this._perp.hasConnected(),(()=>new o.UnauthorizedError({functionName:"getBuyingPower"})));const[{indexTwapPrice:t},a,r,u,l,d]=await Promise.all([this.market.getPrices({cache:e}),this._fetch("relatedData",{cache:e}),this._perp.clearingHouse.getAccountValue({cache:e}),this._perp.vault.getFreeCollateral({cache:e}),this._perp.positions.getTotalPositionValue(this.market.baseAddress,{cache:e}),this.getExistingPositionSize()]),{deltaAvailableBase:p=s.BIG_ZERO,deltaAvailableQuote:g=s.BIG_ZERO}=a.swap,m=this.side===n.PositionSide.LONG,_=p.mul(m?1:-1),w=g.mul(m?-1:1),P=i.getNextAccountValue({indexTwapPrice:t,accountValue:r,signedDeltaAvailableBase:_,signedDeltaAvailableQuote:w}),b=await this._perp.positions.getTotalUnrealizedPnlFromAllMarkets(),B=i.getNextTotalCollateralValue({nextAccountValue:P,signedDeltaAvailableBase:_,signedDeltaAvailableQuote:w,indexTwapPrice:t,totalUnrealizedPNLFromAllMarkets:b}),{otherBaseDebts:f,otherMarketIndexPrices:A,quoteDebts:x}=a,k=s.BIG_ZERO;for(let e=0;e<f.length;e++){const t=f[e],a=A[e];t.lt(0)&&k.add(t.mul(a))}const v=x.reduce(((e,t)=>e.add(t)),s.BIG_ZERO),E=i.getNextOpenOrderMarginReq({sumOfOtherBaseDebtValue:k,sumOfQuoteDebtValue:v,thisBaseBalance:d,signedDeltaAvailableBase:_,signedDeltaAvailableQuote:w,indexTwapPrice:t,imRatio:this._imRatio}),R=i.getNextFreeCollateral({nextTotalCollateralValue:B,nextAccountValue:P,nextOpenOrderMarginReq:E}),y=i.getBuyingPower({imRatio:this._imRatio,freeCollateral:u,existingPositionValue:l,side:this.side,nextFreeCollateral:R});return y.lt(0)?h.default(0):y}async getExistingPositionSize({cache:e=!0}={}){c.invariant(this._perp.hasConnected(),(()=>new o.UnauthorizedError({functionName:"getExistingPositionSize"})));const t=await this._perp.positions.getTakerPosition(this.market.baseAddress,{cache:e}),a=await this._perp.positions.getMakerPosition(this.market.baseAddress);return h.default((null==t?void 0:t.sizeAbs)||0).add((null==a?void 0:a.sizeAbs)||0)}async simulateOpenPosition(){return this._contractReader.simulateOpenPosition({baseTokenAddress:this.market.baseAddress,isBaseToQuote:this.isBaseToQuote,isExactInput:this.isExactInput,amount:this.amountInput,oppositeAmountBound:s.BIG_ZERO})}async getRelatedData({cache:e=!0}={}){return this._fetch("relatedData",{cache:e})}async _fetch(e,{cache:t=!0}={}){if(this._cache.has(e)&&t)return this._cache.get(e);let a;switch(e){case"swap":a=await this._perp.contractReader.getQuoterSwap({baseTokenAddress:this.market.baseAddress,amount:this.amountInput,isBaseToQuote:this.isBaseToQuote,isExactInput:this.isExactInput});break;case"relatedData":{c.invariant(this._perp.hasConnected(),(()=>new o.UnauthorizedError({functionName:"getRelatedData"})));const e=await this.getExistingPositionSize({cache:!1});a=await this._perp.contractReader.getPositionDraftRelatedData({trader:this._perp.wallet.account,marketBaseAddresses:Object.values(this._perp.markets.marketMap).map((e=>e.baseAddress)),currentMarketBaseSize:e,currentMarketBaseAddress:this.market.baseAddress})}}return this._cache.set(e,a),a}}exports.PositionDraft=l;
//# sourceMappingURL=PositionDraft.js.map
