"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("ethers"),t=require("../errors/errors.js");require("big.js");var e=require("../utils/errorChecker.js");require("../constants/envVariables.js"),require("../constants/numbers.js"),require("../utils/tick.js");var a=require("./errorFactory.js");exports.getTransaction=async function({value:s,account:n,contract:i,bypassGasEstimation:o=!1,...c}){const{contractFunctionName:u,args:m}=c,d={from:n,to:i.address,value:s,inputData:i.interface.encodeFunctionData(u,m)},l={...c,txPayload:d};let g;try{const a=i[u];e.invariant(!!a,(()=>new t.ArgumentError({functionName:"getTransaction",key:"contract[functionName]",value:{contractAddress:i.address,functionName:u}})));const c={from:n,value:s},v=()=>i.estimateGas[u](...m,c),f=o?r.BigNumber.from(16e6):await v();g=f.mul(r.BigNumber.from(11)).div(10).toString();return{transaction:await a(...m,{gasLimit:g,...c}),metadata:{txPayload:d,...l},gasLimit:g}}catch(r){throw a.getTransactionErrorFactory({error:r,metadata:l,...g&&{gasLimit:g}})}};
//# sourceMappingURL=index.js.map
