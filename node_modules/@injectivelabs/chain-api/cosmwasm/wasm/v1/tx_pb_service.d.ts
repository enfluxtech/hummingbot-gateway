// package: cosmwasm.wasm.v1
// file: cosmwasm/wasm/v1/tx.proto

import * as cosmwasm_wasm_v1_tx_pb from "../../../cosmwasm/wasm/v1/tx_pb";
import {grpc} from "@improbable-eng/grpc-web";

type MsgStoreCode = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof cosmwasm_wasm_v1_tx_pb.MsgStoreCode;
  readonly responseType: typeof cosmwasm_wasm_v1_tx_pb.MsgStoreCodeResponse;
};

type MsgInstantiateContract = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof cosmwasm_wasm_v1_tx_pb.MsgInstantiateContract;
  readonly responseType: typeof cosmwasm_wasm_v1_tx_pb.MsgInstantiateContractResponse;
};

type MsgExecuteContract = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof cosmwasm_wasm_v1_tx_pb.MsgExecuteContract;
  readonly responseType: typeof cosmwasm_wasm_v1_tx_pb.MsgExecuteContractResponse;
};

type MsgMigrateContract = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof cosmwasm_wasm_v1_tx_pb.MsgMigrateContract;
  readonly responseType: typeof cosmwasm_wasm_v1_tx_pb.MsgMigrateContractResponse;
};

type MsgUpdateAdmin = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof cosmwasm_wasm_v1_tx_pb.MsgUpdateAdmin;
  readonly responseType: typeof cosmwasm_wasm_v1_tx_pb.MsgUpdateAdminResponse;
};

type MsgClearAdmin = {
  readonly methodName: string;
  readonly service: typeof Msg;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof cosmwasm_wasm_v1_tx_pb.MsgClearAdmin;
  readonly responseType: typeof cosmwasm_wasm_v1_tx_pb.MsgClearAdminResponse;
};

export class Msg {
  static readonly serviceName: string;
  static readonly StoreCode: MsgStoreCode;
  static readonly InstantiateContract: MsgInstantiateContract;
  static readonly ExecuteContract: MsgExecuteContract;
  static readonly MigrateContract: MsgMigrateContract;
  static readonly UpdateAdmin: MsgUpdateAdmin;
  static readonly ClearAdmin: MsgClearAdmin;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class MsgClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  storeCode(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgStoreCode,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgStoreCodeResponse|null) => void
  ): UnaryResponse;
  storeCode(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgStoreCode,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgStoreCodeResponse|null) => void
  ): UnaryResponse;
  instantiateContract(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgInstantiateContract,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgInstantiateContractResponse|null) => void
  ): UnaryResponse;
  instantiateContract(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgInstantiateContract,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgInstantiateContractResponse|null) => void
  ): UnaryResponse;
  executeContract(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgExecuteContract,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgExecuteContractResponse|null) => void
  ): UnaryResponse;
  executeContract(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgExecuteContract,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgExecuteContractResponse|null) => void
  ): UnaryResponse;
  migrateContract(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgMigrateContract,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgMigrateContractResponse|null) => void
  ): UnaryResponse;
  migrateContract(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgMigrateContract,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgMigrateContractResponse|null) => void
  ): UnaryResponse;
  updateAdmin(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgUpdateAdmin,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgUpdateAdminResponse|null) => void
  ): UnaryResponse;
  updateAdmin(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgUpdateAdmin,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgUpdateAdminResponse|null) => void
  ): UnaryResponse;
  clearAdmin(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgClearAdmin,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgClearAdminResponse|null) => void
  ): UnaryResponse;
  clearAdmin(
    requestMessage: cosmwasm_wasm_v1_tx_pb.MsgClearAdmin,
    callback: (error: ServiceError|null, responseMessage: cosmwasm_wasm_v1_tx_pb.MsgClearAdminResponse|null) => void
  ): UnaryResponse;
}

