{"version":3,"file":"errorChecker.js","sources":["../../../src/utils/errorChecker.ts"],"sourcesContent":["// TODO: better to create errors only when is certain an error has occurred, instead of always create one and pass in as args.\nexport type ErrorFactory = (error?: Error) => void\n\nexport function invariant(expectedCondition: boolean, errorFactory: ErrorFactory): asserts expectedCondition {\n    if (!expectedCondition) {\n        throw errorFactory()\n    }\n}\n\nexport function errorGuard<T>(func: () => T, errorFactory: ErrorFactory) {\n    try {\n        return func()\n    } catch (rawError) {\n        throw errorFactory(rawError as Error)\n    }\n}\n\nexport async function errorGuardAsync<T>(func: () => Promise<T>, errorFactory: ErrorFactory) {\n    try {\n        return await func()\n    } catch (rawError) {\n        throw errorFactory(rawError as Error)\n    }\n}\n"],"names":["invariant","expectedCondition","errorFactory","errorGuard","func","rawError","async","errorGuardAsync"],"mappings":"AAGgB,SAAAA,EAAUC,EAA4BC,GAClD,IAAKD,EACD,MAAMC,GAEd,CAEgB,SAAAC,EAAcC,EAAeF,GACzC,IACI,OAAOE,GAGV,CAFC,MAAOC,GACL,MAAMH,EAAaG,EACtB,CACL,CAEOC,eAAeC,EAAmBH,EAAwBF,GAC7D,IACI,aAAaE,GAGhB,CAFC,MAAOC,GACL,MAAMH,EAAaG,EACtB,CACL"}