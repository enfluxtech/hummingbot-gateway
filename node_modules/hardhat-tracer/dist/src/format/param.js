"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatParam = void 0;
const ethers_1 = require("ethers");
const utils_1 = require("ethers/lib/utils");
const colors_1 = require("../colors");
const utils_2 = require("../utils");
function formatParam(value, dependencies) {
    if (value === null || value === void 0 ? void 0 : value._isBigNumber) {
        return ethers_1.BigNumber.from(value).toString();
    }
    else if (typeof value === "string" && value.slice(0, 2) !== "0x") {
        return `"${value}"`;
    }
    else if (typeof value === "string" &&
        value.slice(0, 2) === "0x" &&
        value.length === 42) {
        if ((0, utils_2.getFromNameTags)(value, dependencies)) {
            return (0, colors_1.colorNameTag)(`[${(0, utils_2.getFromNameTags)(value, dependencies)}]`);
        }
        else {
            if (dependencies.tracerEnv._internal.printNameTagTip === undefined) {
                dependencies.tracerEnv._internal.printNameTagTip = "print it";
            }
            return (0, utils_1.getAddress)(value);
        }
    }
    else if (Array.isArray(value)) {
        return ("[" + value.map((v) => formatParam(v, dependencies)).join(", ") + "]");
    }
    else if (value === null || value === void 0 ? void 0 : value._isIndexed) {
        return `${(0, colors_1.colorIndexed)("[Indexed]")}${formatParam(value.hash, dependencies)}`;
    }
    else if (typeof value === "object" && value !== null) {
        return ("{" +
            Object.entries(value)
                .map((entry) => {
                return `${entry[0]}:${formatParam(entry[1], dependencies)}`;
            })
                .join(", ") +
            "}");
    }
    else {
        return value;
    }
}
exports.formatParam = formatParam;
//# sourceMappingURL=param.js.map