export declare const LBFactoryABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_feeRecipient";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_flashLoanFee";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "bp";
        readonly type: "uint256";
    }];
    readonly name: "BinHelper__BinStepOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "BinHelper__IdOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBFactory__AddressZero";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "binStep";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__BinStepHasNoPreset";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "lowerBound";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint16";
        readonly name: "binStep";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint256";
        readonly name: "higherBound";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__BinStepRequirementsBreached";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "filterPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "decayPeriod";
        readonly type: "uint16";
    }];
    readonly name: "LBFactory__DecreasingPeriods";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBFactory__FactoryLockIsAlreadyInTheSameState";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "fees";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "maxFees";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__FeesAboveMax";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "fees";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "maxFees";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__FlashLoanFeeAboveMax";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "user";
        readonly type: "address";
    }];
    readonly name: "LBFactory__FunctionIsLockedForUsers";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "LBFactory__IdenticalAddresses";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBFactory__ImplementationNotSet";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "tokenY";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_binStep";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__LBPairAlreadyExists";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBFactory__LBPairIgnoredIsAlreadyInTheSameState";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "tokenY";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "binStep";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__LBPairNotCreated";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "LBPairImplementation";
        readonly type: "address";
    }];
    readonly name: "LBFactory__LBPairSafetyCheckFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "protocolShare";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint256";
        readonly name: "max";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__ProtocolShareOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "quoteAsset";
        readonly type: "address";
    }];
    readonly name: "LBFactory__QuoteAssetAlreadyWhitelisted";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "quoteAsset";
        readonly type: "address";
    }];
    readonly name: "LBFactory__QuoteAssetNotWhitelisted";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "reductionFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint256";
        readonly name: "max";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__ReductionFactorOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "feeRecipient";
        readonly type: "address";
    }];
    readonly name: "LBFactory__SameFeeRecipient";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "flashLoanFee";
        readonly type: "uint256";
    }];
    readonly name: "LBFactory__SameFlashLoanFee";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "LBPairImplementation";
        readonly type: "address";
    }];
    readonly name: "LBFactory__SameImplementation";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }, {
        readonly internalType: "int256";
        readonly name: "y";
        readonly type: "int256";
    }];
    readonly name: "Math128x128__PowerUnderflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PendingOwnable__AddressZero";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PendingOwnable__NoPendingOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PendingOwnable__NotOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PendingOwnable__NotPendingOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PendingOwnable__PendingOwnerAlreadySet";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }];
    readonly name: "SafeCast__Exceeds16Bits";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "unlocked";
        readonly type: "bool";
    }];
    readonly name: "FactoryLockedStatusUpdated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "contract ILBPair";
        readonly name: "LBPair";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "binStep";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "baseFactor";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "filterPeriod";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "decayPeriod";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "reductionFactor";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "variableFeeControl";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "protocolShare";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "maxVolatilityAccumulated";
        readonly type: "uint256";
    }];
    readonly name: "FeeParametersSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "oldRecipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "newRecipient";
        readonly type: "address";
    }];
    readonly name: "FeeRecipientSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "oldFlashLoanFee";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "newFlashLoanFee";
        readonly type: "uint256";
    }];
    readonly name: "FlashLoanFeeSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "contract IERC20";
        readonly name: "tokenX";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "contract IERC20";
        readonly name: "tokenY";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "binStep";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "contract ILBPair";
        readonly name: "LBPair";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "pid";
        readonly type: "uint256";
    }];
    readonly name: "LBPairCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "contract ILBPair";
        readonly name: "LBPair";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "ignored";
        readonly type: "bool";
    }];
    readonly name: "LBPairIgnoredStateChanged";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "oldLBPairImplementation";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "LBPairImplementation";
        readonly type: "address";
    }];
    readonly name: "LBPairImplementationSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "previousOwner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "OwnershipTransferred";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "pendingOwner";
        readonly type: "address";
    }];
    readonly name: "PendingOwnerSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "binStep";
        readonly type: "uint256";
    }];
    readonly name: "PresetRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "binStep";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "baseFactor";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "filterPeriod";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "decayPeriod";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "reductionFactor";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "variableFeeControl";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "protocolShare";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "maxVolatilityAccumulated";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "sampleLifetime";
        readonly type: "uint256";
    }];
    readonly name: "PresetSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "contract IERC20";
        readonly name: "quoteAsset";
        readonly type: "address";
    }];
    readonly name: "QuoteAssetAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "contract IERC20";
        readonly name: "quoteAsset";
        readonly type: "address";
    }];
    readonly name: "QuoteAssetRemoved";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPairImplementation";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "MAX_BIN_STEP";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "MAX_FEE";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "MAX_PROTOCOL_SHARE";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "MIN_BIN_STEP";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_quoteAsset";
        readonly type: "address";
    }];
    readonly name: "addQuoteAsset";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly name: "allLBPairs";
    readonly outputs: readonly [{
        readonly internalType: "contract ILBPair";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "becomeOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_tokenY";
        readonly type: "address";
    }, {
        readonly internalType: "uint24";
        readonly name: "_activeId";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "_binStep";
        readonly type: "uint16";
    }];
    readonly name: "createLBPair";
    readonly outputs: readonly [{
        readonly internalType: "contract ILBPair";
        readonly name: "_LBPair";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "creationUnlocked";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "feeRecipient";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "flashLoanFee";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract ILBPair";
        readonly name: "_LBPair";
        readonly type: "address";
    }];
    readonly name: "forceDecay";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getAllBinSteps";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "presetsBinStep";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_tokenY";
        readonly type: "address";
    }];
    readonly name: "getAllLBPairs";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint16";
            readonly name: "binStep";
            readonly type: "uint16";
        }, {
            readonly internalType: "contract ILBPair";
            readonly name: "LBPair";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "createdByOwner";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "ignoredForRouting";
            readonly type: "bool";
        }];
        readonly internalType: "struct ILBFactory.LBPairInformation[]";
        readonly name: "LBPairsAvailable";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_tokenA";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_tokenB";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_binStep";
        readonly type: "uint256";
    }];
    readonly name: "getLBPairInformation";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint16";
            readonly name: "binStep";
            readonly type: "uint16";
        }, {
            readonly internalType: "contract ILBPair";
            readonly name: "LBPair";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "createdByOwner";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "ignoredForRouting";
            readonly type: "bool";
        }];
        readonly internalType: "struct ILBFactory.LBPairInformation";
        readonly name: "";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getNumberOfLBPairs";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getNumberOfQuoteAssets";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "_binStep";
        readonly type: "uint16";
    }];
    readonly name: "getPreset";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "baseFactor";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "filterPeriod";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "decayPeriod";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "reductionFactor";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "variableFeeControl";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "protocolShare";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "maxVolatilityAccumulated";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "sampleLifetime";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_index";
        readonly type: "uint256";
    }];
    readonly name: "getQuoteAsset";
    readonly outputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_token";
        readonly type: "address";
    }];
    readonly name: "isQuoteAsset";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "pendingOwner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "_binStep";
        readonly type: "uint16";
    }];
    readonly name: "removePreset";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_quoteAsset";
        readonly type: "address";
    }];
    readonly name: "removeQuoteAsset";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "revokePendingOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bool";
        readonly name: "_locked";
        readonly type: "bool";
    }];
    readonly name: "setFactoryLockedState";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_feeRecipient";
        readonly type: "address";
    }];
    readonly name: "setFeeRecipient";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_tokenY";
        readonly type: "address";
    }, {
        readonly internalType: "uint16";
        readonly name: "_binStep";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_baseFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_filterPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_decayPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_reductionFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "_variableFeeControl";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "_protocolShare";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "_maxVolatilityAccumulated";
        readonly type: "uint24";
    }];
    readonly name: "setFeesParametersOnPair";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_flashLoanFee";
        readonly type: "uint256";
    }];
    readonly name: "setFlashLoanFee";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_tokenY";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_binStep";
        readonly type: "uint256";
    }, {
        readonly internalType: "bool";
        readonly name: "_ignored";
        readonly type: "bool";
    }];
    readonly name: "setLBPairIgnored";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_LBPairImplementation";
        readonly type: "address";
    }];
    readonly name: "setLBPairImplementation";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "pendingOwner_";
        readonly type: "address";
    }];
    readonly name: "setPendingOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "_binStep";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_baseFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_filterPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_decayPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "_reductionFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "_variableFeeControl";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "_protocolShare";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "_maxVolatilityAccumulated";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "_sampleLifetime";
        readonly type: "uint16";
    }];
    readonly name: "setPreset";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];
