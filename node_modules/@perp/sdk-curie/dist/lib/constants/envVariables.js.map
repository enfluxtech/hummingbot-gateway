{"version":3,"file":"envVariables.js","sources":["../../../src/constants/envVariables.ts"],"sourcesContent":["/**\n * TRACK: Development tracks, each correspond to a set of deployed smart contracts.\n * METADATA_URL_OVERRIDE_OPTIMISM_GOERLI: metadata url override for Optimism Goerli.\n * METADATA_URL_OVERRIDE_OPTIMISM: metadata url override for Optimism Mainnet.\n */\nconst LOGGER_ON = process.env.LOGGER_ON\nconst TRACK = process.env.TRACK\nconst METADATA_URL_CORE_OVERRIDE_OPTIMISM_GOERLI = process.env.METADATA_URL_CORE_OVERRIDE_OPTIMISM_GOERLI\nconst METADATA_URL_CORE_OVERRIDE_OPTIMISM = process.env.METADATA_URL_CORE_OVERRIDE_OPTIMISM\nconst METADATA_URL_PERIPHERY_OVERRIDE_OPTIMISM_GOERLI = process.env.METADATA_URL_PERIPHERY_OVERRIDE_OPTIMISM_GOERLI\nconst METADATA_URL_PERIPHERY_OVERRIDE_OPTIMISM = process.env.METADATA_URL_PERIPHERY_OVERRIDE_OPTIMISM\n\nexport enum Track {\n    DEV1 = \"dev1\",\n    DEV2 = \"dev2\",\n    CANARY = \"canary\",\n    RC = \"rc\",\n    PRODUCTION = \"production\",\n}\n\nfunction isTrack(track?: string): track is Track {\n    return Object.values(Track).includes(track as Track)\n}\n\n// NOTE: Default to PRODUCTION if no valid track is specified.\nconst TYPED_TRACK = isTrack(TRACK) ? TRACK : Track.PRODUCTION\n\nexport {\n    TYPED_TRACK as TRACK,\n    METADATA_URL_CORE_OVERRIDE_OPTIMISM_GOERLI,\n    METADATA_URL_CORE_OVERRIDE_OPTIMISM,\n    METADATA_URL_PERIPHERY_OVERRIDE_OPTIMISM_GOERLI,\n    METADATA_URL_PERIPHERY_OVERRIDE_OPTIMISM,\n    LOGGER_ON,\n}\n"],"names":["Track","TYPED_TRACK","track","Object","values","includes","PRODUCTION","undefined"],"mappings":"oEAYA,IAAYA,EAAAA,QAMXA,WAAA,GANWA,EAAAA,gBAAAA,QAAAA,MAMX,CAAA,IALG,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,GAAA,KACAA,EAAA,WAAA,aAQJ,MAAMC,GALWC,EAdH,aAeHC,OAAOC,OAAOJ,QAAAA,OAAOK,SAASH,GAf3B,aAmB+BF,QAAAA,MAAMM,YALnD,IAAiBJ,oBAfCK,sDAG0BA,6DADOA,2DAGFA,kEADOA"}