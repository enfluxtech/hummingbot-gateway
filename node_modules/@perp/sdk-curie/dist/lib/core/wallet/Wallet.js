"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("big.js");require("../../constants/envVariables.js");var t=require("../../constants/numbers.js"),a=require("../../contracts/Contracts.js"),c=require("../../internal/Channel.js"),n=require("../../internal/ChannelEventSource.js"),r=require("../../internal/createMemoizedFetcher.js"),l=require("../../internal/config.js"),o=require("../../utils/formatters.js");require("../../utils/tick.js");var i=require("../../utils/poll.js"),s=require("../../utils/logger.js");require("ethers"),require("../../errors/errors.js");var u=require("../contractReader/MulticallReader.js"),h=require("./NonSettlementCollateralToken.js"),d=require("./SettlementToken.js");function m(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var E=m(e);class p extends c.Channel{constructor(e,t){super(e.channelRegistry),this._perp=e,this.account=t,this._collateralTokenList=[],this._cache=new Map,this._contractVault=e.contracts.vault,this._contractReader=e.contractReader,this._settlementToken=new d.SettlementToken(e,e.contracts.settlementToken),this._collateralTokenList.push(this._settlementToken),e.contracts.collateralTokenMap.forEach((t=>{this._collateralTokenList.push(new h.NonSettlementCollateralToken(e,t.contract,t.priceFeedContract))}))}get settlementToken(){return this._settlementToken}get collateralTokenList(){return this._collateralTokenList}async getAllowanceList({cache:e=!0}={}){return this._fetch("allowanceList",{cache:e})}async getBalanceList({cache:e=!0}={}){return this._fetch("balanceList",{cache:e})}async getBalanceEth({cache:e=!0}={}){return this._fetch("balanceEth",{cache:e})}async getCollateralTokenPriceList({cache:e=!0}={}){return this._fetch("collateralTokenPriceList",{cache:e})}async approve(e,t){return e.approve(this.account,this._contractVault.address,t)}_getEventSourceMap(){const e=this._createFetchAndEmitAllowanceListUpdated(),t=new n.ChannelEventSource({eventSourceStarter:()=>{var t,a;return i.poll(e,(null===(a=null===(t=this._perp.moduleConfigs)||void 0===t?void 0:t.wallet)||void 0===a?void 0:a.period)||l.DEFAULT_PERIOD).cancel},initEventEmitter:()=>e(!0,!0)}),a=this._createFetchAndEmitBalanceListUpdated(),c=new n.ChannelEventSource({eventSourceStarter:()=>{var e,t;return i.poll(a,(null===(t=null===(e=this._perp.moduleConfigs)||void 0===e?void 0:e.wallet)||void 0===t?void 0:t.period)||l.DEFAULT_PERIOD).cancel},initEventEmitter:()=>a(!0,!0)}),r=this._createFetchAndEmitBalanceEthUpdated(),o=new n.ChannelEventSource({eventSourceStarter:()=>{var e,t;return i.poll(r,(null===(t=null===(e=this._perp.moduleConfigs)||void 0===e?void 0:e.wallet)||void 0===t?void 0:t.period)||l.DEFAULT_PERIOD).cancel},initEventEmitter:()=>r(!0,!0)}),s=this._createFetchAndEmitCollateralTokenPriceListUpdated(),u=new n.ChannelEventSource({eventSourceStarter:()=>{var e,t;return i.poll(s,(null===(t=null===(e=this._perp.moduleConfigs)||void 0===e?void 0:e.wallet)||void 0===t?void 0:t.period)||l.DEFAULT_PERIOD).cancel},initEventEmitter:()=>s(!0,!0)}),h=this.getWalletDataAll.bind(this);return{allowanceListUpdated:t,balanceListUpdated:c,balanceEthUpdated:o,collateralTokenPriceListUpdated:u,updatedWalletDataAll:new n.ChannelEventSource({eventSourceStarter:()=>{var e,t;return i.poll(h,(null===(t=null===(e=this._perp.moduleConfigs)||void 0===e?void 0:e.wallet)||void 0===t?void 0:t.period)||l.DEFAULT_PERIOD).cancel},initEventEmitter:()=>h()})}}async _fetchUpdateData(e){try{return await e()}catch(e){this.emit("updateError",{error:e})}}async _fetch(e,{cache:t=!0}={}){if(this._cache.has(e)&&t)return this._cache.get(e);let a;switch(e){case"allowanceList":{const e=this._collateralTokenList,t=this._contractVault.address;a=await Promise.all(e.map((e=>e.allowance(this.account,t))));break}case"balanceList":{const e=this._collateralTokenList;a=await Promise.all(e.map((e=>e.balanceOf(this.account))));break}case"balanceEth":a=await this._contractReader.getNativeBalance(this.account);break;case"collateralTokenPriceList":{const e=this._collateralTokenList;a=await Promise.all(e.map((e=>e.price())));break}}return this._cache.set(e,a),a}_createFetchAndEmitAllowanceListUpdated(){return r.createMemoizedFetcher((()=>this._fetchUpdateData((()=>this._fetch("allowanceList",{cache:!1})))),(()=>this.emit("allowanceListUpdated",this)),((e,t)=>!e||!t||r.hasNumberArrChange(e,t)))}_createFetchAndEmitBalanceListUpdated(){return r.createMemoizedFetcher((()=>this._fetchUpdateData((()=>this._fetch("balanceList",{cache:!1})))),(()=>this.emit("balanceListUpdated",this)),((e,t)=>!e||!t||r.hasNumberArrChange(e,t)))}_createFetchAndEmitBalanceEthUpdated(){return r.createMemoizedFetcher((()=>this._fetchUpdateData((()=>this._fetch("balanceEth",{cache:!1})))),(()=>this.emit("balanceEthUpdated",this)),((e,t)=>!e||!t||r.hasNumberChange(e,t)))}_createFetchAndEmitCollateralTokenPriceListUpdated(){return r.createMemoizedFetcher((()=>this._fetchUpdateData((()=>this._fetch("collateralTokenPriceList",{cache:!1})))),(()=>this.emit("collateralTokenPriceListUpdated",this)),((e,t)=>!e||!t||e!==t))}async getWalletDataAll(){try{s.logger("getWalletDataAll");const e=this.account,t=this._perp.contracts,c=new u.MulticallReader({contract:t.multicall2}),n={};this._collateralTokenList.forEach((t=>{const c=t instanceof d.SettlementToken,r=t.address,l=t.contract,o=[c?{contract:l,contractName:a.ContractName.SETTLEMENT_TOKEN,funcName:"decimals",funcParams:[]}:{contract:l,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"decimals",funcParams:[]},c?{contract:t.contract,contractName:a.ContractName.SETTLEMENT_TOKEN,funcName:"allowance",funcParams:[e,this._contractVault.address]}:{contract:t.contract,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"allowance",funcParams:[e,this._contractVault.address]},c?{contract:l,contractName:a.ContractName.SETTLEMENT_TOKEN,funcName:"balanceOf",funcParams:[e]}:{contract:l,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"balanceOf",funcParams:[e]}],i=c?void 0:{contract:t.priceFeedContract,contractName:a.ContractName.CHAINLINK_PRICE_FEED,funcName:"decimals",funcParams:[]},s=c?void 0:{contract:t.priceFeedContract,contractName:a.ContractName.CHAINLINK_PRICE_FEED,funcName:"getPrice",funcParams:[0]};i&&o.push(i),s&&o.push(s),n[`${r}`]=o}));const r=await c.execute(Object.values(n).flat()),l={};Object.entries(n).forEach((([e,t])=>{const a=r.splice(0,t.length),c=a[0],n=o.bigNumber2BigAndScaleDown(a[1],c),i=o.bigNumber2BigAndScaleDown(a[2],c),s=a[3],u=a[4];l[`${e}`]={allowance:n,balance:i,price:s&&u?o.bigNumber2BigAndScaleDown(u,s).toNumber():1}})),this.emit("updatedWalletDataAll",l)}catch(e){this.emit("updateError",{error:e})}}async getWalletDataAllCollateralInfo(){const e=this._perp.contracts,c=this._collateralTokenList,n=new u.MulticallReader({contract:e.multicall2}),r={};c.forEach((t=>{const c=t instanceof d.SettlementToken,n=t.contract,l=t.address,o=c?{contract:n,contractName:a.ContractName.SETTLEMENT_TOKEN,funcName:"decimals",funcParams:[]}:{contract:n,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"decimals",funcParams:[]},i=c?{contract:n,contractName:a.ContractName.SETTLEMENT_TOKEN,funcName:"balanceOf",funcParams:[e.vault.address]}:{contract:n,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"balanceOf",funcParams:[e.vault.address]},s=c?void 0:{contract:n,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"symbol",funcParams:[]},u=c?void 0:{contract:n,contractName:a.ContractName.COLLATERAL_TOKENS,funcName:"name",funcParams:[]},h=c?void 0:{contract:e.collateralManager,contractName:a.ContractName.COLLATERAL_MANAGER,funcName:"getCollateralConfig",funcParams:[l]},m=[o,i];s&&m.push(s),u&&m.push(u),h&&m.push(h),r[`${l}`]=m}));const l=await n.execute(Object.values(r).flat()),i={};return Object.entries(r).forEach((([e,a])=>{const c=l.splice(0,a.length),n=c[0],r=o.bigNumber2BigAndScaleDown(c[1],n),s=c[2]||"USDC",u=c[3]||"USDC Coin",h=c[4],d=(null==h?void 0:h.collateralRatio)?o.scaleDownDecimals(E.default(h.collateralRatio),t.RATIO_DECIMAL).toNumber():1,m=(null==h?void 0:h.depositCap)?o.bigNumber2BigAndScaleDown(h.depositCap,n):void 0;i[`${e}`]={symbol:s,name:u,weight:d,depositCap:m,depositedAmount:r}})),i}}exports.Wallet=p;
//# sourceMappingURL=Wallet.js.map
