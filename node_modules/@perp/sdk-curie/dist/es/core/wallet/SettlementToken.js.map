{"version":3,"file":"SettlementToken.js","sources":["../../../../src/core/wallet/SettlementToken.ts"],"sourcesContent":["import { Big } from \"big.js\"\nimport { constants } from \"ethers\"\n\nimport { SETTLEMENT_TOKEN_DECIMAL } from \"../../constants\"\nimport { ContractName } from \"../../contracts\"\nimport { IERC20Metadata } from \"../../contracts/type\"\nimport { Channel, ChannelEventSource } from \"../../internal\"\nimport { getTransaction } from \"../../transactionSender\"\nimport { big2BigNumberAndScaleUp } from \"../../utils\"\nimport { ContractReader } from \"../contractReader\"\nimport { PerpetualProtocol } from \"../PerpetualProtocol\"\n\ntype CollateralEventName = \"Approval\" | \"Transfer\"\n\nexport class SettlementToken extends Channel<CollateralEventName> {\n    private _contract: IERC20Metadata\n    private _contractReader: ContractReader\n\n    constructor(private readonly _perp: PerpetualProtocol, contract: IERC20Metadata) {\n        super(_perp.channelRegistry)\n        this._contract = contract\n        this._contractReader = _perp.contractReader\n    }\n\n    get contract() {\n        return this._contract\n    }\n\n    get address() {\n        return this._contract.address\n    }\n\n    // NOTE: should be a static value\n    async symbol() {\n        return \"USDC\"\n    }\n\n    // NOTE: should be a static value\n    async name() {\n        return \"USD Coin\"\n    }\n\n    // NOTE: should be a static value\n    async decimals() {\n        return SETTLEMENT_TOKEN_DECIMAL\n    }\n\n    // NOTE: should be a static value\n    async weight() {\n        return 1\n    }\n\n    async price() {\n        return 1\n    }\n\n    // if there's no cap, return undefined\n    async cap() {\n        return undefined\n    }\n\n    async balanceOf(account: string) {\n        return this._contractReader.getBalanceOfSettlementToken(account)\n    }\n\n    async allowance(account: string, spender: string) {\n        return this._contractReader.getAllowanceOfSettlementToken(account, spender)\n    }\n\n    async approve(account: string, spender: string, amount?: Big) {\n        const decimals = await this.decimals()\n        return getTransaction<IERC20Metadata, \"approve\">({\n            account,\n            contract: this._contract,\n            contractName: ContractName.SETTLEMENT_TOKEN,\n            contractFunctionName: \"approve\",\n            args: [spender, amount ? big2BigNumberAndScaleUp(amount, decimals) : constants.MaxUint256],\n        })\n    }\n    protected _getEventSourceMap() {\n        const approvalEventSource = new ChannelEventSource<CollateralEventName>({\n            eventSourceStarter: () => {\n                const handler = (...args: any[]) => this.emit(\"Approval\", ...args)\n                this._contract.on(\"Approval\", handler)\n                return () => this._contract.off(\"Approval\", handler)\n            },\n        })\n        const transferEventSource = new ChannelEventSource<CollateralEventName>({\n            eventSourceStarter: () => {\n                const handler = (...args: any[]) => this.emit(\"Transfer\", ...args)\n                this._contract.on(\"Transfer\", handler)\n                return () => this._contract.off(\"Transfer\", handler)\n            },\n        })\n        return {\n            Approval: approvalEventSource,\n            Transfer: transferEventSource,\n        }\n    }\n}\n"],"names":["SettlementToken","Channel","constructor","_perp","contract","super","channelRegistry","this","_contract","_contractReader","contractReader","address","async","SETTLEMENT_TOKEN_DECIMAL","account","getBalanceOfSettlementToken","spender","getAllowanceOfSettlementToken","amount","decimals","getTransaction","contractName","ContractName","SETTLEMENT_TOKEN","contractFunctionName","args","big2BigNumberAndScaleUp","constants","MaxUint256","_getEventSourceMap","Approval","ChannelEventSource","eventSourceStarter","handler","emit","on","off","Transfer"],"mappings":"4fAcM,MAAOA,UAAwBC,EAIjCC,YAA6BC,EAA0BC,GACnDC,MAAMF,EAAMG,iBADaC,KAAKJ,MAALA,EAEzBI,KAAKC,UAAYJ,EACjBG,KAAKE,gBAAkBN,EAAMO,cAChC,CAEGN,eACA,OAAOG,KAAKC,SACf,CAEGG,cACA,OAAOJ,KAAKC,UAAUG,OACzB,CAGDC,eACI,MAAO,MACV,CAGDA,aACI,MAAO,UACV,CAGDA,iBACI,OAAOC,CACV,CAGDD,eACI,OAAO,CACV,CAEDA,cACI,OAAO,CACV,CAGDA,YAEC,CAEDA,gBAAgBE,GACZ,OAAOP,KAAKE,gBAAgBM,4BAA4BD,EAC3D,CAEDF,gBAAgBE,EAAiBE,GAC7B,OAAOT,KAAKE,gBAAgBQ,8BAA8BH,EAASE,EACtE,CAEDJ,cAAcE,EAAiBE,EAAiBE,GAC5C,MAAMC,QAAiBZ,KAAKY,WAC5B,OAAOC,EAA0C,CAC7CN,UACAV,SAAUG,KAAKC,UACfa,aAAcC,EAAaC,iBAC3BC,qBAAsB,UACtBC,KAAM,CAACT,EAASE,EAASQ,EAAwBR,EAAQC,GAAYQ,EAAUC,aAEtF,CACSC,qBAeN,MAAO,CACHC,SAfwB,IAAIC,EAAwC,CACpEC,mBAAoB,KAChB,MAAMC,EAAU,IAAIR,IAAgBlB,KAAK2B,KAAK,cAAeT,GAE7D,OADAlB,KAAKC,UAAU2B,GAAG,WAAYF,GACvB,IAAM1B,KAAKC,UAAU4B,IAAI,WAAYH,EAAQ,IAYxDI,SATwB,IAAIN,EAAwC,CACpEC,mBAAoB,KAChB,MAAMC,EAAU,IAAIR,IAAgBlB,KAAK2B,KAAK,cAAeT,GAE7D,OADAlB,KAAKC,UAAU2B,GAAG,WAAYF,GACvB,IAAM1B,KAAKC,UAAU4B,IAAI,WAAYH,EAAQ,IAO/D"}