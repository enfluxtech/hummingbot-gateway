import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CumulativeTwap, CumulativeTwapInterface } from "../CumulativeTwap";
export declare class CumulativeTwap__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<CumulativeTwap>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): CumulativeTwap;
    connect(signer: Signer): CumulativeTwap__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061010f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063252c09d7146037578063aed3aff714605c575b600080fd5b60466042366004609e565b606d565b60405160539392919060b5565b60405180910390f35b60626094565b6040516053919060cb565b6000816101008110607d57600080fd5b600302018054600182015460029092015490925083565b6103005460ff1681565b60006020828403121560ae578081fd5b5035919050565b9283526020830191909152604082015260600190565b60ff9190911681526020019056fea264697066735822122058b22610d4b6e9b7978ff11171cb3b1797d8db406be599f851cf56787d8cc07b64736f6c63430007060033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): CumulativeTwapInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): CumulativeTwap;
}
