"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatNonCanonicalIbcTokenName = exports.getIbcDestinationChain = exports.getChannelIdFromPath = exports.isIbcTokenCanonical = void 0;
const channels_1 = require("./channels");
const types_1 = require("../types");
const isIbcTokenCanonical = (token) => {
    const { denom } = token;
    if (!denom.startsWith('ibc/') || !token.ibc) {
        return false;
    }
    const pathParts = token.ibc.path.replace('transfer/', '').split('/');
    /** More than one channelId */
    if (pathParts.length > 1) {
        return false;
    }
    const [channelId] = pathParts;
    return channels_1.canonicalChannelIds.includes(channelId);
};
exports.isIbcTokenCanonical = isIbcTokenCanonical;
const getChannelIdFromPath = (path) => {
    const pathParts = path.replace('transfer/', '').split('/');
    const [channelId] = pathParts;
    return channelId;
};
exports.getChannelIdFromPath = getChannelIdFromPath;
const getIbcDestinationChain = ({ channelPaths, channel, index, token, }) => {
    if (token.tokenType !== types_1.TokenType.Ibc) {
        return '';
    }
    const canonicalChannel = channel;
    if (channels_1.canonicalChannelsToChainMapFromInjective[canonicalChannel]) {
        return channels_1.canonicalChannelsToChainMapFromInjective[canonicalChannel].chainB;
    }
    if (index === channelPaths.length - 1) {
        return token.name;
    }
    return '';
};
exports.getIbcDestinationChain = getIbcDestinationChain;
const formatNonCanonicalIbcTokenName = (token) => {
    const formattedDenomTrace = token.ibc.channelId.replaceAll('transfer/', '');
    const channelToLastChain = formattedDenomTrace.split('/').shift();
    const lastChain = channels_1.canonicalChannelsToChainMapFromInjective[channelToLastChain]
        ? channels_1.canonicalChannelsToChainMapFromInjective[channelToLastChain].chainB
        : 'Unknown';
    return `${token.ibc.baseDenom.toUpperCase()}-${lastChain.toLowerCase()}-${channelToLastChain}`;
};
exports.formatNonCanonicalIbcTokenName = formatNonCanonicalIbcTokenName;
//# sourceMappingURL=utils.js.map