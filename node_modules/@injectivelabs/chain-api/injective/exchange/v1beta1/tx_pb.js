// source: injective/exchange/v1beta1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var injective_oracle_v1beta1_oracle_pb = require('../../../injective/oracle/v1beta1/oracle_pb.js');
goog.object.extend(proto, injective_oracle_v1beta1_oracle_pb);
var injective_exchange_v1beta1_exchange_pb = require('../../../injective/exchange/v1beta1/exchange_pb.js');
goog.object.extend(proto, injective_exchange_v1beta1_exchange_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
var cosmos_distribution_v1beta1_distribution_pb = require('../../../cosmos/distribution/v1beta1/distribution_pb.js');
goog.object.extend(proto, cosmos_distribution_v1beta1_distribution_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
goog.exportSymbol('proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.BatchExchangeModificationProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.DenomDecimals', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.DerivativeMarketOrderResults', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.ExchangeEnableProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.ExchangeType', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.FeeDiscountProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.FundsDirection', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MarketForcedSettlementProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchUpdateOrders', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCancelSpotOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgDeposit', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgDepositResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgExternalTransfer', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgExternalTransferResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgIncreasePositionMargin', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgLiquidatePosition', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgMultiExecute', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgMultiExecuteResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgReclaimLockedFunds', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgRewardsOptOut', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgSignData', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgSignDoc', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgSubaccountTransfer', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgTransferAndExecute', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgWithdraw', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.MsgWithdrawResponse', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.OracleParams', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.OrderData', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.ProviderOracleParams', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.RewardPointUpdate', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.SpotMarketLaunchProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.SpotMarketOrderResults', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal', null, global);
goog.exportSymbol('proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgTransferAndExecute.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgTransferAndExecute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgTransferAndExecute.displayName = 'proto.injective.exchange.v1beta1.MsgTransferAndExecute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.displayName = 'proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgMultiExecute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgMultiExecute.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgMultiExecute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgMultiExecute.displayName = 'proto.injective.exchange.v1beta1.MsgMultiExecute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgMultiExecuteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.displayName = 'proto.injective.exchange.v1beta1.MsgMultiExecuteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgDeposit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgDeposit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgDeposit.displayName = 'proto.injective.exchange.v1beta1.MsgDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgDepositResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgDepositResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgDepositResponse.displayName = 'proto.injective.exchange.v1beta1.MsgDepositResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgWithdraw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgWithdraw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgWithdraw.displayName = 'proto.injective.exchange.v1beta1.MsgWithdraw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgWithdrawResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgWithdrawResponse.displayName = 'proto.injective.exchange.v1beta1.MsgWithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.displayName = 'proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.displayName = 'proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.displayName = 'proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.displayName = 'proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.displayName = 'proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.displayName = 'proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.displayName = 'proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.displayName = 'proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.SpotMarketOrderResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.SpotMarketOrderResults.displayName = 'proto.injective.exchange.v1beta1.SpotMarketOrderResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCancelSpotOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCancelSpotOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCancelSpotOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchUpdateOrders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.displayName = 'proto.injective.exchange.v1beta1.MsgBatchUpdateOrders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.displayName = 'proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.DerivativeMarketOrderResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.displayName = 'proto.injective.exchange.v1beta1.DerivativeMarketOrderResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.displayName = 'proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.displayName = 'proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.OrderData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.OrderData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.OrderData.displayName = 'proto.injective.exchange.v1beta1.OrderData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.displayName = 'proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgSubaccountTransfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgSubaccountTransfer.displayName = 'proto.injective.exchange.v1beta1.MsgSubaccountTransfer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.displayName = 'proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgExternalTransfer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgExternalTransfer.displayName = 'proto.injective.exchange.v1beta1.MsgExternalTransfer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgExternalTransferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgExternalTransferResponse.displayName = 'proto.injective.exchange.v1beta1.MsgExternalTransferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgLiquidatePosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgLiquidatePosition.displayName = 'proto.injective.exchange.v1beta1.MsgLiquidatePosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.displayName = 'proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgIncreasePositionMargin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.displayName = 'proto.injective.exchange.v1beta1.MsgIncreasePositionMargin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.displayName = 'proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.displayName = 'proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.displayName = 'proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.displayName = 'proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.ExchangeEnableProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.ExchangeEnableProposal.displayName = 'proto.injective.exchange.v1beta1.ExchangeEnableProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.BatchExchangeModificationProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.displayName = 'proto.injective.exchange.v1beta1.BatchExchangeModificationProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.SpotMarketLaunchProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.displayName = 'proto.injective.exchange.v1beta1.SpotMarketLaunchProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.displayName = 'proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.displayName = 'proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.displayName = 'proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.displayName = 'proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MarketForcedSettlementProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.displayName = 'proto.injective.exchange.v1beta1.MarketForcedSettlementProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.displayName = 'proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.DenomDecimals = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.DenomDecimals, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.DenomDecimals.displayName = 'proto.injective.exchange.v1beta1.DenomDecimals';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.displayName = 'proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.ProviderOracleParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.ProviderOracleParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.ProviderOracleParams.displayName = 'proto.injective.exchange.v1beta1.ProviderOracleParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.OracleParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.OracleParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.OracleParams.displayName = 'proto.injective.exchange.v1beta1.OracleParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.displayName = 'proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.displayName = 'proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.RewardPointUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.RewardPointUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.RewardPointUpdate.displayName = 'proto.injective.exchange.v1beta1.RewardPointUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.displayName = 'proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.FeeDiscountProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.FeeDiscountProposal.displayName = 'proto.injective.exchange.v1beta1.FeeDiscountProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.displayName = 'proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgRewardsOptOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgRewardsOptOut.displayName = 'proto.injective.exchange.v1beta1.MsgRewardsOptOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.displayName = 'proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgReclaimLockedFunds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.displayName = 'proto.injective.exchange.v1beta1.MsgReclaimLockedFunds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.displayName = 'proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgSignData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgSignData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgSignData.displayName = 'proto.injective.exchange.v1beta1.MsgSignData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgSignDoc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgSignDoc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgSignDoc.displayName = 'proto.injective.exchange.v1beta1.MsgSignDoc';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.displayName = 'proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.displayName = 'proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.repeatedFields_, null);
};
goog.inherits(proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.displayName = 'proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgTransferAndExecute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fundsList: jspb.Message.toObjectList(msg.getFundsList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),
    fundsDirection: jspb.Message.getFieldWithDefault(msg, 3, 0),
    msg: (f = msg.getMsg()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgTransferAndExecute;
  return proto.injective.exchange.v1beta1.MsgTransferAndExecute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addFunds(value);
      break;
    case 3:
      var value = /** @type {!proto.injective.exchange.v1beta1.FundsDirection} */ (reader.readEnum());
      msg.setFundsDirection(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgTransferAndExecute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFundsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getFundsDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} returns this
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin funds = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.getFundsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} returns this
*/
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.setFundsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.addFunds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} returns this
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.clearFundsList = function() {
  return this.setFundsList([]);
};


/**
 * optional FundsDirection funds_direction = 3;
 * @return {!proto.injective.exchange.v1beta1.FundsDirection}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.getFundsDirection = function() {
  return /** @type {!proto.injective.exchange.v1beta1.FundsDirection} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.injective.exchange.v1beta1.FundsDirection} value
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} returns this
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.setFundsDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Any msg = 4;
 * @return {?proto.google.protobuf.Any}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.getMsg = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} returns this
*/
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.setMsg = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecute} returns this
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecute.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse;
  return proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgTransferAndExecuteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgMultiExecute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgMultiExecute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    msgsList: jspb.Message.toObjectList(msg.getMsgsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecute}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgMultiExecute;
  return proto.injective.exchange.v1beta1.MsgMultiExecute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgMultiExecute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecute}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addMsgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgMultiExecute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgMultiExecute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMsgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecute} returns this
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated google.protobuf.Any msgs = 2;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.getMsgsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecute} returns this
*/
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.setMsgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.addMsgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecute} returns this
 */
proto.injective.exchange.v1beta1.MsgMultiExecute.prototype.clearMsgsList = function() {
  return this.setMsgsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgMultiExecuteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecuteResponse}
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgMultiExecuteResponse;
  return proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgMultiExecuteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgMultiExecuteResponse}
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgMultiExecuteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgMultiExecuteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgDeposit.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: (f = msg.getAmount()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgDeposit}
 */
proto.injective.exchange.v1beta1.MsgDeposit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgDeposit;
  return proto.injective.exchange.v1beta1.MsgDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgDeposit}
 */
proto.injective.exchange.v1beta1.MsgDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgDeposit} returns this
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgDeposit} returns this
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 3;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgDeposit} returns this
*/
proto.injective.exchange.v1beta1.MsgDeposit.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgDeposit} returns this
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgDeposit.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgDepositResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgDepositResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgDepositResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgDepositResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgDepositResponse}
 */
proto.injective.exchange.v1beta1.MsgDepositResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgDepositResponse;
  return proto.injective.exchange.v1beta1.MsgDepositResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgDepositResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgDepositResponse}
 */
proto.injective.exchange.v1beta1.MsgDepositResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgDepositResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgDepositResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgDepositResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgDepositResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgWithdraw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgWithdraw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgWithdraw.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: (f = msg.getAmount()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgWithdraw}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgWithdraw;
  return proto.injective.exchange.v1beta1.MsgWithdraw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgWithdraw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgWithdraw}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgWithdraw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgWithdraw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgWithdraw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgWithdraw} returns this
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgWithdraw} returns this
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 3;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgWithdraw} returns this
*/
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgWithdraw} returns this
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgWithdraw.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgWithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgWithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgWithdrawResponse}
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgWithdrawResponse;
  return proto.injective.exchange.v1beta1.MsgWithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgWithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgWithdrawResponse}
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgWithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgWithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgWithdrawResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.SpotOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder;
  return proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.SpotOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SpotOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.SpotOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SpotOrder order = 2;
 * @return {?proto.injective.exchange.v1beta1.SpotOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.SpotOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.SpotOrder, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.SpotOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrder.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHash: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string order_hash = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotLimitOrderResponse.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    injective_exchange_v1beta1_exchange_pb.SpotOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders;
  return proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.SpotOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SpotOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.SpotOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SpotOrder orders = 2;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotOrder>}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.SpotOrder, 2));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotOrder>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotOrder}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.exchange.v1beta1.SpotOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrders.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHashesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse;
  return proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrderHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string order_hashes = 1;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.prototype.getOrderHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.prototype.setOrderHashesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.prototype.addOrderHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateSpotLimitOrdersResponse.prototype.clearOrderHashesList = function() {
  return this.setOrderHashesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    baseDenom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 5, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch;
  return proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseDenom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBaseDenom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string base_denom = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.getBaseDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.setBaseDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quote_denom = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string min_price_tick_size = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string min_quantity_tick_size = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunch.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse;
  return proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantSpotMarketLaunchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oracleBase: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleQuote: jspb.Message.getFieldWithDefault(msg, 5, ""),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 6, 0),
    oracleType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    initialMarginRatio: jspb.Message.getFieldWithDefault(msg, 10, ""),
    maintenanceMarginRatio: jspb.Message.getFieldWithDefault(msg, 11, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 12, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch;
  return proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleBase(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleQuote(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 7:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialMarginRatio(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaintenanceMarginRatio(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOracleBase();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleQuote();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInitialMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMaintenanceMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string quote_denom = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string oracle_base = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getOracleBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setOracleBase = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string oracle_quote = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getOracleQuote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setOracleQuote = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 oracle_scale_factor = 6;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 7;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string maker_fee_rate = 8;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string taker_fee_rate = 9;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string initial_margin_ratio = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getInitialMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setInitialMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string maintenance_margin_ratio = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getMaintenanceMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setMaintenanceMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string min_price_tick_size = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string min_quantity_tick_size = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunch.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse;
  return proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantPerpetualMarketLaunchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    oracleSymbol: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oracleProvider: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 6, 0),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    settlementTimestamp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 11, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 12, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 13, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch;
  return proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleSymbol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleProvider(value);
      break;
    case 5:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationTimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSettlementTimestamp(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOracleSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOracleProvider();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExpirationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getSettlementTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string oracle_symbol = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getOracleSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setOracleSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string oracle_provider = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getOracleProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setOracleProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 5;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional uint32 oracle_scale_factor = 6;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string maker_fee_rate = 7;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string taker_fee_rate = 8;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 expiration_timestamp = 9;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getExpirationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setExpirationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 settlement_timestamp = 10;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getSettlementTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setSettlementTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string admin = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string quote_denom = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string min_price_tick_size = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string min_quantity_tick_size = 14;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunch.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse;
  return proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantBinaryOptionsMarketLaunchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oracleBase: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleQuote: jspb.Message.getFieldWithDefault(msg, 5, ""),
    oracleType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 7, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 8, 0),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    initialMarginRatio: jspb.Message.getFieldWithDefault(msg, 11, ""),
    maintenanceMarginRatio: jspb.Message.getFieldWithDefault(msg, 12, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 13, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch;
  return proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleBase(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleQuote(value);
      break;
    case 6:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiry(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialMarginRatio(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaintenanceMarginRatio(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOracleBase();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleQuote();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInitialMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMaintenanceMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticker = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string quote_denom = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string oracle_base = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getOracleBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setOracleBase = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string oracle_quote = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getOracleQuote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setOracleQuote = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 6;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional uint32 oracle_scale_factor = 7;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 expiry = 8;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string maker_fee_rate = 9;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string taker_fee_rate = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string initial_margin_ratio = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getInitialMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setInitialMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string maintenance_margin_ratio = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getMaintenanceMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setMaintenanceMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string min_price_tick_size = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string min_quantity_tick_size = 14;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch} returns this
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunch.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse;
  return proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgInstantExpiryFuturesMarketLaunchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.SpotOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder;
  return proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.SpotOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SpotOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.SpotOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SpotOrder order = 2;
 * @return {?proto.injective.exchange.v1beta1.SpotOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.SpotOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.SpotOrder, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.SpotOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrder.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    results: (f = msg.getResults()) && proto.injective.exchange.v1beta1.SpotMarketOrderResults.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.SpotMarketOrderResults;
      reader.readMessage(value,proto.injective.exchange.v1beta1.SpotMarketOrderResults.deserializeBinaryFromReader);
      msg.setResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResults();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.SpotMarketOrderResults.serializeBinaryToWriter
    );
  }
};


/**
 * optional string order_hash = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SpotMarketOrderResults results = 2;
 * @return {?proto.injective.exchange.v1beta1.SpotMarketOrderResults}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.getResults = function() {
  return /** @type{?proto.injective.exchange.v1beta1.SpotMarketOrderResults} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.SpotMarketOrderResults, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.SpotMarketOrderResults|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.setResults = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.clearResults = function() {
  return this.setResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateSpotMarketOrderResponse.prototype.hasResults = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.SpotMarketOrderResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.SpotMarketOrderResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    quantity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fee: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.SpotMarketOrderResults}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.SpotMarketOrderResults;
  return proto.injective.exchange.v1beta1.SpotMarketOrderResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.SpotMarketOrderResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.SpotMarketOrderResults}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.SpotMarketOrderResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.SpotMarketOrderResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuantity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string quantity = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.getQuantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string price = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fee = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketOrderResults.prototype.setFee = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder;
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DerivativeOrder order = 2;
 * @return {?proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrder.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHash: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string order_hash = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeLimitOrderResponse.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder;
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DerivativeOrder order = 2;
 * @return {?proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrder.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHash: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string order_hash = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsLimitOrderResponse.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders;
  return proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated DerivativeOrder orders = 2;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 2));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.exchange.v1beta1.DerivativeOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrders.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHashesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse;
  return proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrderHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string order_hashes = 1;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.prototype.getOrderHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.prototype.setOrderHashesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.prototype.addOrderHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCreateDerivativeLimitOrdersResponse.prototype.clearOrderHashesList = function() {
  return this.setOrderHashesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCancelSpotOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderHash: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCancelSpotOrder;
  return proto.injective.exchange.v1beta1.MsgCancelSpotOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCancelSpotOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subaccount_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string order_hash = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrder.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelSpotOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective.exchange.v1beta1.OrderData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders;
  return proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.OrderData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated OrderData data = 2;
 * @return {!Array<!proto.injective.exchange.v1beta1.OrderData>}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.OrderData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.OrderData, 2));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.OrderData>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.OrderData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.exchange.v1beta1.OrderData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrders.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse;
  return proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSuccess(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool success = 1;
 * @return {!Array<boolean>}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.prototype.getSuccessList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.prototype.setSuccessList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.prototype.addSuccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelSpotOrdersResponse.prototype.clearSuccessList = function() {
  return this.setSuccessList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective.exchange.v1beta1.OrderData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders;
  return proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.OrderData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated OrderData data = 2;
 * @return {!Array<!proto.injective.exchange.v1beta1.OrderData>}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.OrderData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.OrderData, 2));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.OrderData>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.OrderData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.exchange.v1beta1.OrderData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrders.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse;
  return proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSuccess(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool success = 1;
 * @return {!Array<boolean>}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.prototype.getSuccessList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.prototype.setSuccessList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.prototype.addSuccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelBinaryOptionsOrdersResponse.prototype.clearSuccessList = function() {
  return this.setSuccessList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.repeatedFields_ = [3,4,5,6,7,8,9,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spotMarketIdsToCancelAllList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    derivativeMarketIdsToCancelAllList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    spotOrdersToCancelList: jspb.Message.toObjectList(msg.getSpotOrdersToCancelList(),
    proto.injective.exchange.v1beta1.OrderData.toObject, includeInstance),
    derivativeOrdersToCancelList: jspb.Message.toObjectList(msg.getDerivativeOrdersToCancelList(),
    proto.injective.exchange.v1beta1.OrderData.toObject, includeInstance),
    spotOrdersToCreateList: jspb.Message.toObjectList(msg.getSpotOrdersToCreateList(),
    injective_exchange_v1beta1_exchange_pb.SpotOrder.toObject, includeInstance),
    derivativeOrdersToCreateList: jspb.Message.toObjectList(msg.getDerivativeOrdersToCreateList(),
    injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject, includeInstance),
    binaryOptionsOrdersToCancelList: jspb.Message.toObjectList(msg.getBinaryOptionsOrdersToCancelList(),
    proto.injective.exchange.v1beta1.OrderData.toObject, includeInstance),
    binaryOptionsMarketIdsToCancelAllList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    binaryOptionsOrdersToCreateList: jspb.Message.toObjectList(msg.getBinaryOptionsOrdersToCreateList(),
    injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchUpdateOrders;
  return proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSpotMarketIdsToCancelAll(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addDerivativeMarketIdsToCancelAll(value);
      break;
    case 5:
      var value = new proto.injective.exchange.v1beta1.OrderData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader);
      msg.addSpotOrdersToCancel(value);
      break;
    case 6:
      var value = new proto.injective.exchange.v1beta1.OrderData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader);
      msg.addDerivativeOrdersToCancel(value);
      break;
    case 7:
      var value = new injective_exchange_v1beta1_exchange_pb.SpotOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.SpotOrder.deserializeBinaryFromReader);
      msg.addSpotOrdersToCreate(value);
      break;
    case 8:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.addDerivativeOrdersToCreate(value);
      break;
    case 9:
      var value = new proto.injective.exchange.v1beta1.OrderData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader);
      msg.addBinaryOptionsOrdersToCancel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addBinaryOptionsMarketIdsToCancelAll(value);
      break;
    case 11:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.addBinaryOptionsOrdersToCreate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpotMarketIdsToCancelAllList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getDerivativeMarketIdsToCancelAllList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getSpotOrdersToCancelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter
    );
  }
  f = message.getDerivativeOrdersToCancelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter
    );
  }
  f = message.getSpotOrdersToCreateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      injective_exchange_v1beta1_exchange_pb.SpotOrder.serializeBinaryToWriter
    );
  }
  f = message.getDerivativeOrdersToCreateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
  f = message.getBinaryOptionsOrdersToCancelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter
    );
  }
  f = message.getBinaryOptionsMarketIdsToCancelAllList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getBinaryOptionsOrdersToCreateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string spot_market_ids_to_cancel_all = 3;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getSpotMarketIdsToCancelAllList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setSpotMarketIdsToCancelAllList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addSpotMarketIdsToCancelAll = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearSpotMarketIdsToCancelAllList = function() {
  return this.setSpotMarketIdsToCancelAllList([]);
};


/**
 * repeated string derivative_market_ids_to_cancel_all = 4;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getDerivativeMarketIdsToCancelAllList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setDerivativeMarketIdsToCancelAllList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addDerivativeMarketIdsToCancelAll = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearDerivativeMarketIdsToCancelAllList = function() {
  return this.setDerivativeMarketIdsToCancelAllList([]);
};


/**
 * repeated OrderData spot_orders_to_cancel = 5;
 * @return {!Array<!proto.injective.exchange.v1beta1.OrderData>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getSpotOrdersToCancelList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.OrderData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.OrderData, 5));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.OrderData>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setSpotOrdersToCancelList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.OrderData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addSpotOrdersToCancel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.injective.exchange.v1beta1.OrderData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearSpotOrdersToCancelList = function() {
  return this.setSpotOrdersToCancelList([]);
};


/**
 * repeated OrderData derivative_orders_to_cancel = 6;
 * @return {!Array<!proto.injective.exchange.v1beta1.OrderData>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getDerivativeOrdersToCancelList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.OrderData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.OrderData, 6));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.OrderData>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setDerivativeOrdersToCancelList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.OrderData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addDerivativeOrdersToCancel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.injective.exchange.v1beta1.OrderData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearDerivativeOrdersToCancelList = function() {
  return this.setDerivativeOrdersToCancelList([]);
};


/**
 * repeated SpotOrder spot_orders_to_create = 7;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotOrder>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getSpotOrdersToCreateList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.SpotOrder, 7));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotOrder>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setSpotOrdersToCreateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotOrder}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addSpotOrdersToCreate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.injective.exchange.v1beta1.SpotOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearSpotOrdersToCreateList = function() {
  return this.setSpotOrdersToCreateList([]);
};


/**
 * repeated DerivativeOrder derivative_orders_to_create = 8;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getDerivativeOrdersToCreateList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 8));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setDerivativeOrdersToCreateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addDerivativeOrdersToCreate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.injective.exchange.v1beta1.DerivativeOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearDerivativeOrdersToCreateList = function() {
  return this.setDerivativeOrdersToCreateList([]);
};


/**
 * repeated OrderData binary_options_orders_to_cancel = 9;
 * @return {!Array<!proto.injective.exchange.v1beta1.OrderData>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getBinaryOptionsOrdersToCancelList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.OrderData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.OrderData, 9));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.OrderData>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setBinaryOptionsOrdersToCancelList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.OrderData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addBinaryOptionsOrdersToCancel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.injective.exchange.v1beta1.OrderData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearBinaryOptionsOrdersToCancelList = function() {
  return this.setBinaryOptionsOrdersToCancelList([]);
};


/**
 * repeated string binary_options_market_ids_to_cancel_all = 10;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getBinaryOptionsMarketIdsToCancelAllList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setBinaryOptionsMarketIdsToCancelAllList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addBinaryOptionsMarketIdsToCancelAll = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearBinaryOptionsMarketIdsToCancelAllList = function() {
  return this.setBinaryOptionsMarketIdsToCancelAllList([]);
};


/**
 * repeated DerivativeOrder binary_options_orders_to_create = 11;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.getBinaryOptionsOrdersToCreateList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 11));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeOrder>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.setBinaryOptionsOrdersToCreateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.addBinaryOptionsOrdersToCreate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.injective.exchange.v1beta1.DerivativeOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrders.prototype.clearBinaryOptionsOrdersToCreateList = function() {
  return this.setBinaryOptionsOrdersToCreateList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.repeatedFields_ = [1,2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    spotCancelSuccessList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f,
    derivativeCancelSuccessList: (f = jspb.Message.getRepeatedBooleanField(msg, 2)) == null ? undefined : f,
    spotOrderHashesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    derivativeOrderHashesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    binaryOptionsCancelSuccessList: (f = jspb.Message.getRepeatedBooleanField(msg, 5)) == null ? undefined : f,
    binaryOptionsOrderHashesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse;
  return proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSpotCancelSuccess(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDerivativeCancelSuccess(values[i]);
      }
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSpotOrderHashes(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addDerivativeOrderHashes(value);
      break;
    case 5:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBinaryOptionsCancelSuccess(values[i]);
      }
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addBinaryOptionsOrderHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpotCancelSuccessList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
  f = message.getDerivativeCancelSuccessList();
  if (f.length > 0) {
    writer.writePackedBool(
      2,
      f
    );
  }
  f = message.getSpotOrderHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getDerivativeOrderHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getBinaryOptionsCancelSuccessList();
  if (f.length > 0) {
    writer.writePackedBool(
      5,
      f
    );
  }
  f = message.getBinaryOptionsOrderHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * repeated bool spot_cancel_success = 1;
 * @return {!Array<boolean>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.getSpotCancelSuccessList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.setSpotCancelSuccessList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.addSpotCancelSuccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.clearSpotCancelSuccessList = function() {
  return this.setSpotCancelSuccessList([]);
};


/**
 * repeated bool derivative_cancel_success = 2;
 * @return {!Array<boolean>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.getDerivativeCancelSuccessList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 2));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.setDerivativeCancelSuccessList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.addDerivativeCancelSuccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.clearDerivativeCancelSuccessList = function() {
  return this.setDerivativeCancelSuccessList([]);
};


/**
 * repeated string spot_order_hashes = 3;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.getSpotOrderHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.setSpotOrderHashesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.addSpotOrderHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.clearSpotOrderHashesList = function() {
  return this.setSpotOrderHashesList([]);
};


/**
 * repeated string derivative_order_hashes = 4;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.getDerivativeOrderHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.setDerivativeOrderHashesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.addDerivativeOrderHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.clearDerivativeOrderHashesList = function() {
  return this.setDerivativeOrderHashesList([]);
};


/**
 * repeated bool binary_options_cancel_success = 5;
 * @return {!Array<boolean>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.getBinaryOptionsCancelSuccessList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 5));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.setBinaryOptionsCancelSuccessList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.addBinaryOptionsCancelSuccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.clearBinaryOptionsCancelSuccessList = function() {
  return this.setBinaryOptionsCancelSuccessList([]);
};


/**
 * repeated string binary_options_order_hashes = 6;
 * @return {!Array<string>}
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.getBinaryOptionsOrderHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.setBinaryOptionsOrderHashesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.addBinaryOptionsOrderHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchUpdateOrdersResponse.prototype.clearBinaryOptionsOrderHashesList = function() {
  return this.setBinaryOptionsOrderHashesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder;
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DerivativeOrder order = 2;
 * @return {?proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrder.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    results: (f = msg.getResults()) && proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.DerivativeMarketOrderResults;
      reader.readMessage(value,proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.deserializeBinaryFromReader);
      msg.setResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResults();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.serializeBinaryToWriter
    );
  }
};


/**
 * optional string order_hash = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DerivativeMarketOrderResults results = 2;
 * @return {?proto.injective.exchange.v1beta1.DerivativeMarketOrderResults}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.getResults = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.DerivativeMarketOrderResults, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeMarketOrderResults|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.setResults = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.clearResults = function() {
  return this.setResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateDerivativeMarketOrderResponse.prototype.hasResults = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    quantity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fee: jspb.Message.getFieldWithDefault(msg, 3, ""),
    positionDelta: (f = msg.getPositionDelta()) && injective_exchange_v1beta1_exchange_pb.PositionDelta.toObject(includeInstance, f),
    payout: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.DerivativeMarketOrderResults;
  return proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    case 4:
      var value = new injective_exchange_v1beta1_exchange_pb.PositionDelta;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.PositionDelta.deserializeBinaryFromReader);
      msg.setPositionDelta(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuantity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPositionDelta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      injective_exchange_v1beta1_exchange_pb.PositionDelta.serializeBinaryToWriter
    );
  }
  f = message.getPayout();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string quantity = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.getQuantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string price = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fee = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.setFee = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PositionDelta position_delta = 4;
 * @return {?proto.injective.exchange.v1beta1.PositionDelta}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.getPositionDelta = function() {
  return /** @type{?proto.injective.exchange.v1beta1.PositionDelta} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.PositionDelta, 4));
};


/**
 * @param {?proto.injective.exchange.v1beta1.PositionDelta|undefined} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} returns this
*/
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.setPositionDelta = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.clearPositionDelta = function() {
  return this.setPositionDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.hasPositionDelta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string payout = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.getPayout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.prototype.setPayout = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder;
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DerivativeOrder order = 2;
 * @return {?proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrder.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderHash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    results: (f = msg.getResults()) && proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.DerivativeMarketOrderResults;
      reader.readMessage(value,proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.deserializeBinaryFromReader);
      msg.setResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResults();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.DerivativeMarketOrderResults.serializeBinaryToWriter
    );
  }
};


/**
 * optional string order_hash = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DerivativeMarketOrderResults results = 2;
 * @return {?proto.injective.exchange.v1beta1.DerivativeMarketOrderResults}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.getResults = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeMarketOrderResults} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.DerivativeMarketOrderResults, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeMarketOrderResults|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse} returns this
*/
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.setResults = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.clearResults = function() {
  return this.setResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgCreateBinaryOptionsMarketOrderResponse.prototype.hasResults = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderHash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    orderMask: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder;
  return proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrderMask();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subaccount_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string order_hash = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 order_mask = 5;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.getOrderMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrder.prototype.setOrderMask = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelDerivativeOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderHash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    orderMask: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder;
  return proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrderMask();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subaccount_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string order_hash = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 order_mask = 5;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.getOrderMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder} returns this
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrder.prototype.setOrderMask = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse;
  return proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgCancelBinaryOptionsOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.OrderData.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.OrderData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.OrderData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.OrderData.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderHash: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderMask: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.OrderData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.OrderData;
  return proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.OrderData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.OrderData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.OrderData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderHash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderMask();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.OrderData.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.OrderData} returns this
 */
proto.injective.exchange.v1beta1.OrderData.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.OrderData.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.OrderData} returns this
 */
proto.injective.exchange.v1beta1.OrderData.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string order_hash = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.OrderData.prototype.getOrderHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.OrderData} returns this
 */
proto.injective.exchange.v1beta1.OrderData.prototype.setOrderHash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 order_mask = 4;
 * @return {number}
 */
proto.injective.exchange.v1beta1.OrderData.prototype.getOrderMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.OrderData} returns this
 */
proto.injective.exchange.v1beta1.OrderData.prototype.setOrderMask = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective.exchange.v1beta1.OrderData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders;
  return proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.OrderData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OrderData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.OrderData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated OrderData data = 2;
 * @return {!Array<!proto.injective.exchange.v1beta1.OrderData>}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.OrderData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.OrderData, 2));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.OrderData>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders} returns this
*/
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.OrderData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.OrderData}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.exchange.v1beta1.OrderData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrders.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse;
  return proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSuccess(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool success = 1;
 * @return {!Array<boolean>}
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.prototype.getSuccessList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.prototype.setSuccessList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.prototype.addSuccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgBatchCancelDerivativeOrdersResponse.prototype.clearSuccessList = function() {
  return this.setSuccessList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgSubaccountTransfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceSubaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destinationSubaccountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: (f = msg.getAmount()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgSubaccountTransfer;
  return proto.injective.exchange.v1beta1.MsgSubaccountTransfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceSubaccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationSubaccountId(value);
      break;
    case 4:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgSubaccountTransfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestinationSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source_subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.getSourceSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.setSourceSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destination_subaccount_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.getDestinationSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.setDestinationSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 4;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 4));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} returns this
*/
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransfer.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse;
  return proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSubaccountTransferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgExternalTransfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgExternalTransfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceSubaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destinationSubaccountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: (f = msg.getAmount()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgExternalTransfer;
  return proto.injective.exchange.v1beta1.MsgExternalTransfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgExternalTransfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceSubaccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationSubaccountId(value);
      break;
    case 4:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgExternalTransfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgExternalTransfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestinationSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source_subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.getSourceSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.setSourceSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destination_subaccount_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.getDestinationSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.setDestinationSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional cosmos.base.v1beta1.Coin amount = 4;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 4));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer} returns this
*/
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransfer} returns this
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgExternalTransfer.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgExternalTransferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgExternalTransferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransferResponse}
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgExternalTransferResponse;
  return proto.injective.exchange.v1beta1.MsgExternalTransferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgExternalTransferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgExternalTransferResponse}
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgExternalTransferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgExternalTransferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgExternalTransferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgLiquidatePosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    order: (f = msg.getOrder()) && injective_exchange_v1beta1_exchange_pb.DerivativeOrder.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgLiquidatePosition;
  return proto.injective.exchange.v1beta1.MsgLiquidatePosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubaccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 4:
      var value = new injective_exchange_v1beta1_exchange_pb.DerivativeOrder;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.DerivativeOrder.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgLiquidatePosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      injective_exchange_v1beta1_exchange_pb.DerivativeOrder.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} returns this
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.getSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} returns this
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.setSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string market_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} returns this
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional DerivativeOrder order = 4;
 * @return {?proto.injective.exchange.v1beta1.DerivativeOrder}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.getOrder = function() {
  return /** @type{?proto.injective.exchange.v1beta1.DerivativeOrder} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.DerivativeOrder, 4));
};


/**
 * @param {?proto.injective.exchange.v1beta1.DerivativeOrder|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} returns this
*/
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePosition} returns this
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePosition.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse;
  return proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgLiquidatePositionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceSubaccountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destinationSubaccountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgIncreasePositionMargin;
  return proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceSubaccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationSubaccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestinationSubaccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} returns this
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source_subaccount_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.getSourceSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} returns this
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.setSourceSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destination_subaccount_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.getDestinationSubaccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} returns this
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.setDestinationSubaccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string market_id = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} returns this
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string amount = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMargin} returns this
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMargin.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse;
  return proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgIncreasePositionMarginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    funds: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contractAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    data: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract;
  return proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFunds();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContractAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} returns this
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string funds = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.getFunds = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} returns this
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.setFunds = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string contract_address = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.getContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} returns this
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.setContractAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string data = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract} returns this
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContract.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fundsDiffList: jspb.Message.toObjectList(msg.getFundsDiffList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse;
  return proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addFundsDiff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFundsDiffList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.Coin funds_diff = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.prototype.getFundsDiffList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse} returns this
*/
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.prototype.setFundsDiffList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.prototype.addFundsDiff = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse} returns this
 */
proto.injective.exchange.v1beta1.MsgPrivilegedExecuteContractResponse.prototype.clearFundsDiffList = function() {
  return this.setFundsDiffList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    relayerFeeShareRate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 7, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal;
  return proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayerFeeShareRate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    case 9:
      var value = /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRelayerFeeShareRate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string market_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string maker_fee_rate = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string taker_fee_rate = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string relayer_fee_share_rate = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getRelayerFeeShareRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setRelayerFeeShareRate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string min_price_tick_size = 7;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string min_quantity_tick_size = 8;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional MarketStatus status = 9;
 * @return {!proto.injective.exchange.v1beta1.MarketStatus}
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.getStatus = function() {
  return /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.injective.exchange.v1beta1.MarketStatus} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.ExchangeEnableProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.ExchangeEnableProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exchangetype: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.ExchangeEnableProposal}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.ExchangeEnableProposal;
  return proto.injective.exchange.v1beta1.ExchangeEnableProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.ExchangeEnableProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.ExchangeEnableProposal}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.injective.exchange.v1beta1.ExchangeType} */ (reader.readEnum());
      msg.setExchangetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.ExchangeEnableProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.ExchangeEnableProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExchangetype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExchangeEnableProposal} returns this
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExchangeEnableProposal} returns this
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ExchangeType exchangeType = 3;
 * @return {!proto.injective.exchange.v1beta1.ExchangeType}
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.getExchangetype = function() {
  return /** @type {!proto.injective.exchange.v1beta1.ExchangeType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.injective.exchange.v1beta1.ExchangeType} value
 * @return {!proto.injective.exchange.v1beta1.ExchangeEnableProposal} returns this
 */
proto.injective.exchange.v1beta1.ExchangeEnableProposal.prototype.setExchangetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.repeatedFields_ = [3,4,5,6,7,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spotMarketParamUpdateProposalsList: jspb.Message.toObjectList(msg.getSpotMarketParamUpdateProposalsList(),
    proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.toObject, includeInstance),
    derivativeMarketParamUpdateProposalsList: jspb.Message.toObjectList(msg.getDerivativeMarketParamUpdateProposalsList(),
    proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.toObject, includeInstance),
    spotMarketLaunchProposalsList: jspb.Message.toObjectList(msg.getSpotMarketLaunchProposalsList(),
    proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.toObject, includeInstance),
    perpetualMarketLaunchProposalsList: jspb.Message.toObjectList(msg.getPerpetualMarketLaunchProposalsList(),
    proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.toObject, includeInstance),
    expiryFuturesMarketLaunchProposalsList: jspb.Message.toObjectList(msg.getExpiryFuturesMarketLaunchProposalsList(),
    proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.toObject, includeInstance),
    tradingRewardCampaignUpdateProposal: (f = msg.getTradingRewardCampaignUpdateProposal()) && proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.toObject(includeInstance, f),
    binaryOptionsMarketLaunchProposalsList: jspb.Message.toObjectList(msg.getBinaryOptionsMarketLaunchProposalsList(),
    proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.toObject, includeInstance),
    binaryOptionsParamUpdateProposalsList: jspb.Message.toObjectList(msg.getBinaryOptionsParamUpdateProposalsList(),
    proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.toObject, includeInstance),
    denomDecimalsUpdateProposal: (f = msg.getDenomDecimalsUpdateProposal()) && proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.BatchExchangeModificationProposal;
  return proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.deserializeBinaryFromReader);
      msg.addSpotMarketParamUpdateProposals(value);
      break;
    case 4:
      var value = new proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.deserializeBinaryFromReader);
      msg.addDerivativeMarketParamUpdateProposals(value);
      break;
    case 5:
      var value = new proto.injective.exchange.v1beta1.SpotMarketLaunchProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.deserializeBinaryFromReader);
      msg.addSpotMarketLaunchProposals(value);
      break;
    case 6:
      var value = new proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.deserializeBinaryFromReader);
      msg.addPerpetualMarketLaunchProposals(value);
      break;
    case 7:
      var value = new proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.deserializeBinaryFromReader);
      msg.addExpiryFuturesMarketLaunchProposals(value);
      break;
    case 8:
      var value = new proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.deserializeBinaryFromReader);
      msg.setTradingRewardCampaignUpdateProposal(value);
      break;
    case 9:
      var value = new proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinaryFromReader);
      msg.addBinaryOptionsMarketLaunchProposals(value);
      break;
    case 10:
      var value = new proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.deserializeBinaryFromReader);
      msg.addBinaryOptionsParamUpdateProposals(value);
      break;
    case 11:
      var value = new proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal;
      reader.readMessage(value,proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.deserializeBinaryFromReader);
      msg.setDenomDecimalsUpdateProposal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpotMarketParamUpdateProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal.serializeBinaryToWriter
    );
  }
  f = message.getDerivativeMarketParamUpdateProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.serializeBinaryToWriter
    );
  }
  f = message.getSpotMarketLaunchProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.serializeBinaryToWriter
    );
  }
  f = message.getPerpetualMarketLaunchProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.serializeBinaryToWriter
    );
  }
  f = message.getExpiryFuturesMarketLaunchProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.serializeBinaryToWriter
    );
  }
  f = message.getTradingRewardCampaignUpdateProposal();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.serializeBinaryToWriter
    );
  }
  f = message.getBinaryOptionsMarketLaunchProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.serializeBinaryToWriter
    );
  }
  f = message.getBinaryOptionsParamUpdateProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.serializeBinaryToWriter
    );
  }
  f = message.getDenomDecimalsUpdateProposal();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SpotMarketParamUpdateProposal spot_market_param_update_proposals = 3;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getSpotMarketParamUpdateProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal, 3));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setSpotMarketParamUpdateProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addSpotMarketParamUpdateProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.exchange.v1beta1.SpotMarketParamUpdateProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearSpotMarketParamUpdateProposalsList = function() {
  return this.setSpotMarketParamUpdateProposalsList([]);
};


/**
 * repeated DerivativeMarketParamUpdateProposal derivative_market_param_update_proposals = 4;
 * @return {!Array<!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getDerivativeMarketParamUpdateProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal, 4));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setDerivativeMarketParamUpdateProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addDerivativeMarketParamUpdateProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearDerivativeMarketParamUpdateProposalsList = function() {
  return this.setDerivativeMarketParamUpdateProposalsList([]);
};


/**
 * repeated SpotMarketLaunchProposal spot_market_launch_proposals = 5;
 * @return {!Array<!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getSpotMarketLaunchProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.SpotMarketLaunchProposal, 5));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setSpotMarketLaunchProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addSpotMarketLaunchProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.injective.exchange.v1beta1.SpotMarketLaunchProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearSpotMarketLaunchProposalsList = function() {
  return this.setSpotMarketLaunchProposalsList([]);
};


/**
 * repeated PerpetualMarketLaunchProposal perpetual_market_launch_proposals = 6;
 * @return {!Array<!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getPerpetualMarketLaunchProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal, 6));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setPerpetualMarketLaunchProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addPerpetualMarketLaunchProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearPerpetualMarketLaunchProposalsList = function() {
  return this.setPerpetualMarketLaunchProposalsList([]);
};


/**
 * repeated ExpiryFuturesMarketLaunchProposal expiry_futures_market_launch_proposals = 7;
 * @return {!Array<!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getExpiryFuturesMarketLaunchProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal, 7));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setExpiryFuturesMarketLaunchProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addExpiryFuturesMarketLaunchProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearExpiryFuturesMarketLaunchProposalsList = function() {
  return this.setExpiryFuturesMarketLaunchProposalsList([]);
};


/**
 * optional TradingRewardCampaignUpdateProposal trading_reward_campaign_update_proposal = 8;
 * @return {?proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getTradingRewardCampaignUpdateProposal = function() {
  return /** @type{?proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal, 8));
};


/**
 * @param {?proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal|undefined} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setTradingRewardCampaignUpdateProposal = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearTradingRewardCampaignUpdateProposal = function() {
  return this.setTradingRewardCampaignUpdateProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.hasTradingRewardCampaignUpdateProposal = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated BinaryOptionsMarketLaunchProposal binary_options_market_launch_proposals = 9;
 * @return {!Array<!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getBinaryOptionsMarketLaunchProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal, 9));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setBinaryOptionsMarketLaunchProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addBinaryOptionsMarketLaunchProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearBinaryOptionsMarketLaunchProposalsList = function() {
  return this.setBinaryOptionsMarketLaunchProposalsList([]);
};


/**
 * repeated BinaryOptionsMarketParamUpdateProposal binary_options_param_update_proposals = 10;
 * @return {!Array<!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal>}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getBinaryOptionsParamUpdateProposalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal, 10));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setBinaryOptionsParamUpdateProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.addBinaryOptionsParamUpdateProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearBinaryOptionsParamUpdateProposalsList = function() {
  return this.setBinaryOptionsParamUpdateProposalsList([]);
};


/**
 * optional UpdateDenomDecimalsProposal denom_decimals_update_proposal = 11;
 * @return {?proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.getDenomDecimalsUpdateProposal = function() {
  return /** @type{?proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal, 11));
};


/**
 * @param {?proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal|undefined} value
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.setDenomDecimalsUpdateProposal = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.BatchExchangeModificationProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.clearDenomDecimalsUpdateProposal = function() {
  return this.setDenomDecimalsUpdateProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.BatchExchangeModificationProposal.prototype.hasDenomDecimalsUpdateProposal = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    baseDenom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 5, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 6, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 7, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.SpotMarketLaunchProposal;
  return proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseDenom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseDenom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ticker = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string base_denom = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getBaseDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setBaseDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string quote_denom = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string min_price_tick_size = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string min_quantity_tick_size = 7;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string maker_fee_rate = 8;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string taker_fee_rate = 9;
 * @return {string}
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.SpotMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.SpotMarketLaunchProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleBase: jspb.Message.getFieldWithDefault(msg, 5, ""),
    oracleQuote: jspb.Message.getFieldWithDefault(msg, 6, ""),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 7, 0),
    oracleType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    initialMarginRatio: jspb.Message.getFieldWithDefault(msg, 9, ""),
    maintenanceMarginRatio: jspb.Message.getFieldWithDefault(msg, 10, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 11, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 13, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal;
  return proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleBase(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleQuote(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 8:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialMarginRatio(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaintenanceMarginRatio(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleBase();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOracleQuote();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getInitialMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMaintenanceMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ticker = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quote_denom = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string oracle_base = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getOracleBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setOracleBase = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string oracle_quote = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getOracleQuote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setOracleQuote = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 oracle_scale_factor = 7;
 * @return {number}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 8;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string initial_margin_ratio = 9;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getInitialMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setInitialMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string maintenance_margin_ratio = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getMaintenanceMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setMaintenanceMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string maker_fee_rate = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string taker_fee_rate = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string min_price_tick_size = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string min_quantity_tick_size = 14;
 * @return {string}
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.PerpetualMarketLaunchProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    oracleSymbol: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleProvider: jspb.Message.getFieldWithDefault(msg, 5, ""),
    oracleType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 7, 0),
    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 8, 0),
    settlementTimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 10, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 11, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 14, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal;
  return proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleSymbol(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleProvider(value);
      break;
    case 6:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationTimestamp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSettlementTimestamp(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOracleSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleProvider();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getExpirationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSettlementTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ticker = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string oracle_symbol = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string oracle_provider = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 6;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional uint32 oracle_scale_factor = 7;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 expiration_timestamp = 8;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getExpirationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setExpirationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 settlement_timestamp = 9;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getSettlementTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setSettlementTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string admin = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string quote_denom = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string maker_fee_rate = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string taker_fee_rate = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string min_price_tick_size = 14;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string min_quantity_tick_size = 15;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketLaunchProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quoteDenom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    oracleBase: jspb.Message.getFieldWithDefault(msg, 5, ""),
    oracleQuote: jspb.Message.getFieldWithDefault(msg, 6, ""),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 7, 0),
    oracleType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 9, 0),
    initialMarginRatio: jspb.Message.getFieldWithDefault(msg, 10, ""),
    maintenanceMarginRatio: jspb.Message.getFieldWithDefault(msg, 11, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 14, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal;
  return proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteDenom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleBase(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleQuote(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 8:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiry(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialMarginRatio(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaintenanceMarginRatio(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuoteDenom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOracleBase();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOracleQuote();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getInitialMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMaintenanceMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ticker = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quote_denom = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getQuoteDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setQuoteDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string oracle_base = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getOracleBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setOracleBase = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string oracle_quote = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getOracleQuote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setOracleQuote = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 oracle_scale_factor = 7;
 * @return {number}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 8;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional int64 expiry = 9;
 * @return {number}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string initial_margin_ratio = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getInitialMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setInitialMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string maintenance_margin_ratio = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getMaintenanceMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setMaintenanceMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string maker_fee_rate = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string taker_fee_rate = 13;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string min_price_tick_size = 14;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string min_quantity_tick_size = 15;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.ExpiryFuturesMarketLaunchProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    initialMarginRatio: jspb.Message.getFieldWithDefault(msg, 4, ""),
    maintenanceMarginRatio: jspb.Message.getFieldWithDefault(msg, 5, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    relayerFeeShareRate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 9, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 10, ""),
    hourlyinterestrate: jspb.Message.getFieldWithDefault(msg, 11, ""),
    hourlyfundingratecap: jspb.Message.getFieldWithDefault(msg, 12, ""),
    status: jspb.Message.getFieldWithDefault(msg, 13, 0),
    oracleParams: (f = msg.getOracleParams()) && proto.injective.exchange.v1beta1.OracleParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal;
  return proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialMarginRatio(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaintenanceMarginRatio(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayerFeeShareRate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setHourlyinterestrate(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setHourlyfundingratecap(value);
      break;
    case 13:
      var value = /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 14:
      var value = new proto.injective.exchange.v1beta1.OracleParams;
      reader.readMessage(value,proto.injective.exchange.v1beta1.OracleParams.deserializeBinaryFromReader);
      msg.setOracleParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInitialMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMaintenanceMarginRatio();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRelayerFeeShareRate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getHourlyinterestrate();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getHourlyfundingratecap();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getOracleParams();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.injective.exchange.v1beta1.OracleParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string market_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string initial_margin_ratio = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getInitialMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setInitialMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string maintenance_margin_ratio = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getMaintenanceMarginRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setMaintenanceMarginRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string maker_fee_rate = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string taker_fee_rate = 7;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string relayer_fee_share_rate = 8;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getRelayerFeeShareRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setRelayerFeeShareRate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string min_price_tick_size = 9;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string min_quantity_tick_size = 10;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string HourlyInterestRate = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getHourlyinterestrate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setHourlyinterestrate = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string HourlyFundingRateCap = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getHourlyfundingratecap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setHourlyfundingratecap = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional MarketStatus status = 13;
 * @return {!proto.injective.exchange.v1beta1.MarketStatus}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getStatus = function() {
  return /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.injective.exchange.v1beta1.MarketStatus} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional OracleParams oracle_params = 14;
 * @return {?proto.injective.exchange.v1beta1.OracleParams}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.getOracleParams = function() {
  return /** @type{?proto.injective.exchange.v1beta1.OracleParams} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.OracleParams, 14));
};


/**
 * @param {?proto.injective.exchange.v1beta1.OracleParams|undefined} value
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
*/
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.setOracleParams = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.clearOracleParams = function() {
  return this.setOracleParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.DerivativeMarketParamUpdateProposal.prototype.hasOracleParams = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    settlementPrice: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MarketForcedSettlementProposal;
  return proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSettlementPrice();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} returns this
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} returns this
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string market_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} returns this
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string settlement_price = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.getSettlementPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MarketForcedSettlementProposal} returns this
 */
proto.injective.exchange.v1beta1.MarketForcedSettlementProposal.prototype.setSettlementPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    denomDecimalsList: jspb.Message.toObjectList(msg.getDenomDecimalsList(),
    proto.injective.exchange.v1beta1.DenomDecimals.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal;
  return proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.injective.exchange.v1beta1.DenomDecimals;
      reader.readMessage(value,proto.injective.exchange.v1beta1.DenomDecimals.deserializeBinaryFromReader);
      msg.addDenomDecimals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDenomDecimalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.injective.exchange.v1beta1.DenomDecimals.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} returns this
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} returns this
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated DenomDecimals denom_decimals = 3;
 * @return {!Array<!proto.injective.exchange.v1beta1.DenomDecimals>}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.getDenomDecimalsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.DenomDecimals>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.DenomDecimals, 3));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.DenomDecimals>} value
 * @return {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} returns this
*/
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.setDenomDecimalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.DenomDecimals=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.DenomDecimals}
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.addDenomDecimals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.exchange.v1beta1.DenomDecimals, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal} returns this
 */
proto.injective.exchange.v1beta1.UpdateDenomDecimalsProposal.prototype.clearDenomDecimalsList = function() {
  return this.setDenomDecimalsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.DenomDecimals.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.DenomDecimals.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.DenomDecimals} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DenomDecimals.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    decimals: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.DenomDecimals}
 */
proto.injective.exchange.v1beta1.DenomDecimals.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.DenomDecimals;
  return proto.injective.exchange.v1beta1.DenomDecimals.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.DenomDecimals} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.DenomDecimals}
 */
proto.injective.exchange.v1beta1.DenomDecimals.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDecimals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.DenomDecimals.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.DenomDecimals.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.DenomDecimals} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.DenomDecimals.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.DenomDecimals.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.DenomDecimals} returns this
 */
proto.injective.exchange.v1beta1.DenomDecimals.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 decimals = 2;
 * @return {number}
 */
proto.injective.exchange.v1beta1.DenomDecimals.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.DenomDecimals} returns this
 */
proto.injective.exchange.v1beta1.DenomDecimals.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    makerFeeRate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    takerFeeRate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    relayerFeeShareRate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    minPriceTickSize: jspb.Message.getFieldWithDefault(msg, 7, ""),
    minQuantityTickSize: jspb.Message.getFieldWithDefault(msg, 8, ""),
    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    settlementTimestamp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    settlementPrice: jspb.Message.getFieldWithDefault(msg, 11, ""),
    admin: jspb.Message.getFieldWithDefault(msg, 12, ""),
    status: jspb.Message.getFieldWithDefault(msg, 13, 0),
    oracleParams: (f = msg.getOracleParams()) && proto.injective.exchange.v1beta1.ProviderOracleParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal;
  return proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerFeeRate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerFeeRate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayerFeeShareRate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinPriceTickSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinQuantityTickSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationTimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSettlementTimestamp(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementPrice(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 13:
      var value = /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 14:
      var value = new proto.injective.exchange.v1beta1.ProviderOracleParams;
      reader.readMessage(value,proto.injective.exchange.v1beta1.ProviderOracleParams.deserializeBinaryFromReader);
      msg.setOracleParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTakerFeeRate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRelayerFeeShareRate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMinPriceTickSize();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMinQuantityTickSize();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExpirationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getSettlementTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getSettlementPrice();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getOracleParams();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.injective.exchange.v1beta1.ProviderOracleParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string market_id = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string maker_fee_rate = 4;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getMakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setMakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string taker_fee_rate = 5;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getTakerFeeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setTakerFeeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string relayer_fee_share_rate = 6;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getRelayerFeeShareRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setRelayerFeeShareRate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string min_price_tick_size = 7;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getMinPriceTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setMinPriceTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string min_quantity_tick_size = 8;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getMinQuantityTickSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setMinQuantityTickSize = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 expiration_timestamp = 9;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getExpirationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setExpirationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 settlement_timestamp = 10;
 * @return {number}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getSettlementTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setSettlementTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string settlement_price = 11;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getSettlementPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setSettlementPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string admin = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional MarketStatus status = 13;
 * @return {!proto.injective.exchange.v1beta1.MarketStatus}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getStatus = function() {
  return /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.injective.exchange.v1beta1.MarketStatus} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional ProviderOracleParams oracle_params = 14;
 * @return {?proto.injective.exchange.v1beta1.ProviderOracleParams}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.getOracleParams = function() {
  return /** @type{?proto.injective.exchange.v1beta1.ProviderOracleParams} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.ProviderOracleParams, 14));
};


/**
 * @param {?proto.injective.exchange.v1beta1.ProviderOracleParams|undefined} value
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
*/
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.setOracleParams = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.clearOracleParams = function() {
  return this.setOracleParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.BinaryOptionsMarketParamUpdateProposal.prototype.hasOracleParams = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.ProviderOracleParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.ProviderOracleParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 2, ""),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    oracleType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.ProviderOracleParams}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.ProviderOracleParams;
  return proto.injective.exchange.v1beta1.ProviderOracleParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.ProviderOracleParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.ProviderOracleParams}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 4:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.ProviderOracleParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.ProviderOracleParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ProviderOracleParams} returns this
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string provider = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.ProviderOracleParams} returns this
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 oracle_scale_factor = 3;
 * @return {number}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.ProviderOracleParams} returns this
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 4;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.ProviderOracleParams} returns this
 */
proto.injective.exchange.v1beta1.ProviderOracleParams.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.OracleParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.OracleParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.OracleParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleBase: jspb.Message.getFieldWithDefault(msg, 1, ""),
    oracleQuote: jspb.Message.getFieldWithDefault(msg, 2, ""),
    oracleScaleFactor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    oracleType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.OracleParams}
 */
proto.injective.exchange.v1beta1.OracleParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.OracleParams;
  return proto.injective.exchange.v1beta1.OracleParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.OracleParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.OracleParams}
 */
proto.injective.exchange.v1beta1.OracleParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleBase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleQuote(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOracleScaleFactor(value);
      break;
    case 4:
      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());
      msg.setOracleType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.OracleParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.OracleParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.OracleParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleBase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOracleQuote();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOracleScaleFactor();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getOracleType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string oracle_base = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.getOracleBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.OracleParams} returns this
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.setOracleBase = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string oracle_quote = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.getOracleQuote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.OracleParams} returns this
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.setOracleQuote = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 oracle_scale_factor = 3;
 * @return {number}
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.getOracleScaleFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.OracleParams} returns this
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.setOracleScaleFactor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional injective.oracle.v1beta1.OracleType oracle_type = 4;
 * @return {!proto.injective.oracle.v1beta1.OracleType}
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.getOracleType = function() {
  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.injective.oracle.v1beta1.OracleType} value
 * @return {!proto.injective.exchange.v1beta1.OracleParams} returns this
 */
proto.injective.exchange.v1beta1.OracleParams.prototype.setOracleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    campaignInfo: (f = msg.getCampaignInfo()) && injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo.toObject(includeInstance, f),
    campaignRewardPoolsList: jspb.Message.toObjectList(msg.getCampaignRewardPoolsList(),
    injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal;
  return proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo.deserializeBinaryFromReader);
      msg.setCampaignInfo(value);
      break;
    case 4:
      var value = new injective_exchange_v1beta1_exchange_pb.CampaignRewardPool;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.deserializeBinaryFromReader);
      msg.addCampaignRewardPools(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCampaignInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo.serializeBinaryToWriter
    );
  }
  f = message.getCampaignRewardPoolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TradingRewardCampaignInfo campaign_info = 3;
 * @return {?proto.injective.exchange.v1beta1.TradingRewardCampaignInfo}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.getCampaignInfo = function() {
  return /** @type{?proto.injective.exchange.v1beta1.TradingRewardCampaignInfo} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo, 3));
};


/**
 * @param {?proto.injective.exchange.v1beta1.TradingRewardCampaignInfo|undefined} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} returns this
*/
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.setCampaignInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.clearCampaignInfo = function() {
  return this.setCampaignInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.hasCampaignInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated CampaignRewardPool campaign_reward_pools = 4;
 * @return {!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.getCampaignRewardPoolsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.CampaignRewardPool, 4));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} returns this
*/
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.setCampaignRewardPoolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.CampaignRewardPool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.CampaignRewardPool}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.addCampaignRewardPools = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.injective.exchange.v1beta1.CampaignRewardPool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignLaunchProposal.prototype.clearCampaignRewardPoolsList = function() {
  return this.setCampaignRewardPoolsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    campaignInfo: (f = msg.getCampaignInfo()) && injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo.toObject(includeInstance, f),
    campaignRewardPoolsAdditionsList: jspb.Message.toObjectList(msg.getCampaignRewardPoolsAdditionsList(),
    injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.toObject, includeInstance),
    campaignRewardPoolsUpdatesList: jspb.Message.toObjectList(msg.getCampaignRewardPoolsUpdatesList(),
    injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal;
  return proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo.deserializeBinaryFromReader);
      msg.setCampaignInfo(value);
      break;
    case 4:
      var value = new injective_exchange_v1beta1_exchange_pb.CampaignRewardPool;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.deserializeBinaryFromReader);
      msg.addCampaignRewardPoolsAdditions(value);
      break;
    case 5:
      var value = new injective_exchange_v1beta1_exchange_pb.CampaignRewardPool;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.deserializeBinaryFromReader);
      msg.addCampaignRewardPoolsUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCampaignInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo.serializeBinaryToWriter
    );
  }
  f = message.getCampaignRewardPoolsAdditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.serializeBinaryToWriter
    );
  }
  f = message.getCampaignRewardPoolsUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      injective_exchange_v1beta1_exchange_pb.CampaignRewardPool.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TradingRewardCampaignInfo campaign_info = 3;
 * @return {?proto.injective.exchange.v1beta1.TradingRewardCampaignInfo}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.getCampaignInfo = function() {
  return /** @type{?proto.injective.exchange.v1beta1.TradingRewardCampaignInfo} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.TradingRewardCampaignInfo, 3));
};


/**
 * @param {?proto.injective.exchange.v1beta1.TradingRewardCampaignInfo|undefined} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
*/
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.setCampaignInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.clearCampaignInfo = function() {
  return this.setCampaignInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.hasCampaignInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated CampaignRewardPool campaign_reward_pools_additions = 4;
 * @return {!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.getCampaignRewardPoolsAdditionsList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.CampaignRewardPool, 4));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
*/
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.setCampaignRewardPoolsAdditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.CampaignRewardPool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.CampaignRewardPool}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.addCampaignRewardPoolsAdditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.injective.exchange.v1beta1.CampaignRewardPool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.clearCampaignRewardPoolsAdditionsList = function() {
  return this.setCampaignRewardPoolsAdditionsList([]);
};


/**
 * repeated CampaignRewardPool campaign_reward_pools_updates = 5;
 * @return {!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.getCampaignRewardPoolsUpdatesList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.CampaignRewardPool, 5));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.CampaignRewardPool>} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
*/
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.setCampaignRewardPoolsUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.CampaignRewardPool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.CampaignRewardPool}
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.addCampaignRewardPoolsUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.injective.exchange.v1beta1.CampaignRewardPool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardCampaignUpdateProposal.prototype.clearCampaignRewardPoolsUpdatesList = function() {
  return this.setCampaignRewardPoolsUpdatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.RewardPointUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.RewardPointUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    newPoints: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.RewardPointUpdate}
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.RewardPointUpdate;
  return proto.injective.exchange.v1beta1.RewardPointUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.RewardPointUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.RewardPointUpdate}
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountAddress(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.RewardPointUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.RewardPointUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNewPoints();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string account_address = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.prototype.getAccountAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.RewardPointUpdate} returns this
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.prototype.setAccountAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string new_points = 12;
 * @return {string}
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.prototype.getNewPoints = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.RewardPointUpdate} returns this
 */
proto.injective.exchange.v1beta1.RewardPointUpdate.prototype.setNewPoints = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pendingPoolTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rewardPointUpdatesList: jspb.Message.toObjectList(msg.getRewardPointUpdatesList(),
    proto.injective.exchange.v1beta1.RewardPointUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal;
  return proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPendingPoolTimestamp(value);
      break;
    case 4:
      var value = new proto.injective.exchange.v1beta1.RewardPointUpdate;
      reader.readMessage(value,proto.injective.exchange.v1beta1.RewardPointUpdate.deserializeBinaryFromReader);
      msg.addRewardPointUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPendingPoolTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRewardPointUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.injective.exchange.v1beta1.RewardPointUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 pending_pool_timestamp = 3;
 * @return {number}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.getPendingPoolTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.setPendingPoolTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated RewardPointUpdate reward_point_updates = 4;
 * @return {!Array<!proto.injective.exchange.v1beta1.RewardPointUpdate>}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.getRewardPointUpdatesList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.RewardPointUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective.exchange.v1beta1.RewardPointUpdate, 4));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.RewardPointUpdate>} value
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} returns this
*/
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.setRewardPointUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.RewardPointUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.RewardPointUpdate}
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.addRewardPointUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.injective.exchange.v1beta1.RewardPointUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal} returns this
 */
proto.injective.exchange.v1beta1.TradingRewardPendingPointsUpdateProposal.prototype.clearRewardPointUpdatesList = function() {
  return this.setRewardPointUpdatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.FeeDiscountProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.FeeDiscountProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schedule: (f = msg.getSchedule()) && injective_exchange_v1beta1_exchange_pb.FeeDiscountSchedule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.FeeDiscountProposal}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.FeeDiscountProposal;
  return proto.injective.exchange.v1beta1.FeeDiscountProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.FeeDiscountProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.FeeDiscountProposal}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.FeeDiscountSchedule;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.FeeDiscountSchedule.deserializeBinaryFromReader);
      msg.setSchedule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.FeeDiscountProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.FeeDiscountProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchedule();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.FeeDiscountSchedule.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.FeeDiscountProposal} returns this
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.FeeDiscountProposal} returns this
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional FeeDiscountSchedule schedule = 3;
 * @return {?proto.injective.exchange.v1beta1.FeeDiscountSchedule}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.getSchedule = function() {
  return /** @type{?proto.injective.exchange.v1beta1.FeeDiscountSchedule} */ (
    jspb.Message.getWrapperField(this, injective_exchange_v1beta1_exchange_pb.FeeDiscountSchedule, 3));
};


/**
 * @param {?proto.injective.exchange.v1beta1.FeeDiscountSchedule|undefined} value
 * @return {!proto.injective.exchange.v1beta1.FeeDiscountProposal} returns this
*/
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.setSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.FeeDiscountProposal} returns this
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.clearSchedule = function() {
  return this.setSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.FeeDiscountProposal.prototype.hasSchedule = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    proposalsList: jspb.Message.toObjectList(msg.getProposalsList(),
    cosmos_distribution_v1beta1_distribution_pb.CommunityPoolSpendProposal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal;
  return proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new cosmos_distribution_v1beta1_distribution_pb.CommunityPoolSpendProposal;
      reader.readMessage(value,cosmos_distribution_v1beta1_distribution_pb.CommunityPoolSpendProposal.deserializeBinaryFromReader);
      msg.addProposals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cosmos_distribution_v1beta1_distribution_pb.CommunityPoolSpendProposal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated cosmos.distribution.v1beta1.CommunityPoolSpendProposal proposals = 3;
 * @return {!Array<!proto.cosmos.distribution.v1beta1.CommunityPoolSpendProposal>}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.getProposalsList = function() {
  return /** @type{!Array<!proto.cosmos.distribution.v1beta1.CommunityPoolSpendProposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_distribution_v1beta1_distribution_pb.CommunityPoolSpendProposal, 3));
};


/**
 * @param {!Array<!proto.cosmos.distribution.v1beta1.CommunityPoolSpendProposal>} value
 * @return {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} returns this
*/
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.setProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.distribution.v1beta1.CommunityPoolSpendProposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.distribution.v1beta1.CommunityPoolSpendProposal}
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.addProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.distribution.v1beta1.CommunityPoolSpendProposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal} returns this
 */
proto.injective.exchange.v1beta1.BatchCommunityPoolSpendProposal.prototype.clearProposalsList = function() {
  return this.setProposalsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgRewardsOptOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgRewardsOptOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgRewardsOptOut}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgRewardsOptOut;
  return proto.injective.exchange.v1beta1.MsgRewardsOptOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgRewardsOptOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgRewardsOptOut}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgRewardsOptOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgRewardsOptOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgRewardsOptOut} returns this
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOut.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse;
  return proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgRewardsOptOutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lockedaccountpubkey: msg.getLockedaccountpubkey_asB64(),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgReclaimLockedFunds;
  return proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLockedaccountpubkey(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLockedaccountpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds} returns this
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes lockedAccountPubKey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getLockedaccountpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes lockedAccountPubKey = 2;
 * This is a type-conversion wrapper around `getLockedaccountpubkey()`
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getLockedaccountpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLockedaccountpubkey()));
};


/**
 * optional bytes lockedAccountPubKey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLockedaccountpubkey()`
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getLockedaccountpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLockedaccountpubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds} returns this
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.setLockedaccountpubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFunds} returns this
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFunds.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse;
  return proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgReclaimLockedFundsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgSignData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgSignData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSignData.toObject = function(includeInstance, msg) {
  var f, obj = {
    signer: msg.getSigner_asB64(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgSignData}
 */
proto.injective.exchange.v1beta1.MsgSignData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgSignData;
  return proto.injective.exchange.v1beta1.MsgSignData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgSignData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgSignData}
 */
proto.injective.exchange.v1beta1.MsgSignData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSigner(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgSignData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgSignData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSignData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSigner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes Signer = 1;
 * @return {!(string|Uint8Array)}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.getSigner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes Signer = 1;
 * This is a type-conversion wrapper around `getSigner()`
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.getSigner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSigner()));
};


/**
 * optional bytes Signer = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSigner()`
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.getSigner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSigner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective.exchange.v1beta1.MsgSignData} returns this
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.setSigner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes Data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective.exchange.v1beta1.MsgSignData} returns this
 */
proto.injective.exchange.v1beta1.MsgSignData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgSignDoc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgSignDoc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSignDoc.toObject = function(includeInstance, msg) {
  var f, obj = {
    signType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && proto.injective.exchange.v1beta1.MsgSignData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgSignDoc}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgSignDoc;
  return proto.injective.exchange.v1beta1.MsgSignDoc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgSignDoc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgSignDoc}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignType(value);
      break;
    case 2:
      var value = new proto.injective.exchange.v1beta1.MsgSignData;
      reader.readMessage(value,proto.injective.exchange.v1beta1.MsgSignData.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgSignDoc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgSignDoc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgSignDoc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.injective.exchange.v1beta1.MsgSignData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sign_type = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.getSignType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgSignDoc} returns this
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.setSignType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MsgSignData value = 2;
 * @return {?proto.injective.exchange.v1beta1.MsgSignData}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.getValue = function() {
  return /** @type{?proto.injective.exchange.v1beta1.MsgSignData} */ (
    jspb.Message.getWrapperField(this, proto.injective.exchange.v1beta1.MsgSignData, 2));
};


/**
 * @param {?proto.injective.exchange.v1beta1.MsgSignData|undefined} value
 * @return {!proto.injective.exchange.v1beta1.MsgSignDoc} returns this
*/
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective.exchange.v1beta1.MsgSignDoc} returns this
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective.exchange.v1beta1.MsgSignDoc.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    settlementPrice: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    settlementTimestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket;
  return proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSettlementTimestamp(value);
      break;
    case 6:
      var value = /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSettlementPrice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpirationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSettlementTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} returns this
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} returns this
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string settlement_price = 3;
 * @return {string}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.getSettlementPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} returns this
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.setSettlementPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 expiration_timestamp = 4;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.getExpirationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} returns this
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.setExpirationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 settlement_timestamp = 5;
 * @return {number}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.getSettlementTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} returns this
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.setSettlementTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional MarketStatus status = 6;
 * @return {!proto.injective.exchange.v1beta1.MarketStatus}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.getStatus = function() {
  return /** @type {!proto.injective.exchange.v1beta1.MarketStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.injective.exchange.v1beta1.MarketStatus} value
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket} returns this
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarket.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse;
  return proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.MsgAdminUpdateBinaryOptionsMarketResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    marketFeeMultipliersList: jspb.Message.toObjectList(msg.getMarketFeeMultipliersList(),
    injective_exchange_v1beta1_exchange_pb.MarketFeeMultiplier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal;
  return proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new injective_exchange_v1beta1_exchange_pb.MarketFeeMultiplier;
      reader.readMessage(value,injective_exchange_v1beta1_exchange_pb.MarketFeeMultiplier.deserializeBinaryFromReader);
      msg.addMarketFeeMultipliers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMarketFeeMultipliersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      injective_exchange_v1beta1_exchange_pb.MarketFeeMultiplier.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} returns this
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} returns this
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated MarketFeeMultiplier market_fee_multipliers = 3;
 * @return {!Array<!proto.injective.exchange.v1beta1.MarketFeeMultiplier>}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.getMarketFeeMultipliersList = function() {
  return /** @type{!Array<!proto.injective.exchange.v1beta1.MarketFeeMultiplier>} */ (
    jspb.Message.getRepeatedWrapperField(this, injective_exchange_v1beta1_exchange_pb.MarketFeeMultiplier, 3));
};


/**
 * @param {!Array<!proto.injective.exchange.v1beta1.MarketFeeMultiplier>} value
 * @return {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} returns this
*/
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.setMarketFeeMultipliersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective.exchange.v1beta1.MarketFeeMultiplier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective.exchange.v1beta1.MarketFeeMultiplier}
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.addMarketFeeMultipliers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.exchange.v1beta1.MarketFeeMultiplier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal} returns this
 */
proto.injective.exchange.v1beta1.AtomicMarketOrderFeeMultiplierScheduleProposal.prototype.clearMarketFeeMultipliersList = function() {
  return this.setMarketFeeMultipliersList([]);
};


/**
 * @enum {number}
 */
proto.injective.exchange.v1beta1.FundsDirection = {
  UNDEFINED: 0,
  BANK_TO_SUBACCOUNT: 1,
  SUBACCOUNT_TO_BANK: 2
};

/**
 * @enum {number}
 */
proto.injective.exchange.v1beta1.ExchangeType = {
  EXCHANGE_UNSPECIFIED: 0,
  SPOT: 1,
  DERIVATIVES: 2
};

goog.object.extend(exports, proto.injective.exchange.v1beta1);
