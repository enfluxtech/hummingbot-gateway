// package: injective.exchange.v1beta1
// file: injective/exchange/v1beta1/authz.proto

import * as jspb from "google-protobuf";
import * as cosmos_proto_cosmos_pb from "../../../cosmos_proto/cosmos_pb";

export class CreateSpotLimitOrderAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateSpotLimitOrderAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: CreateSpotLimitOrderAuthz): CreateSpotLimitOrderAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CreateSpotLimitOrderAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateSpotLimitOrderAuthz;
  static deserializeBinaryFromReader(message: CreateSpotLimitOrderAuthz, reader: jspb.BinaryReader): CreateSpotLimitOrderAuthz;
}

export namespace CreateSpotLimitOrderAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class CreateSpotMarketOrderAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateSpotMarketOrderAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: CreateSpotMarketOrderAuthz): CreateSpotMarketOrderAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CreateSpotMarketOrderAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateSpotMarketOrderAuthz;
  static deserializeBinaryFromReader(message: CreateSpotMarketOrderAuthz, reader: jspb.BinaryReader): CreateSpotMarketOrderAuthz;
}

export namespace CreateSpotMarketOrderAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class BatchCreateSpotLimitOrdersAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BatchCreateSpotLimitOrdersAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: BatchCreateSpotLimitOrdersAuthz): BatchCreateSpotLimitOrdersAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BatchCreateSpotLimitOrdersAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BatchCreateSpotLimitOrdersAuthz;
  static deserializeBinaryFromReader(message: BatchCreateSpotLimitOrdersAuthz, reader: jspb.BinaryReader): BatchCreateSpotLimitOrdersAuthz;
}

export namespace BatchCreateSpotLimitOrdersAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class CancelSpotOrderAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CancelSpotOrderAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: CancelSpotOrderAuthz): CancelSpotOrderAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CancelSpotOrderAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CancelSpotOrderAuthz;
  static deserializeBinaryFromReader(message: CancelSpotOrderAuthz, reader: jspb.BinaryReader): CancelSpotOrderAuthz;
}

export namespace CancelSpotOrderAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class BatchCancelSpotOrdersAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BatchCancelSpotOrdersAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: BatchCancelSpotOrdersAuthz): BatchCancelSpotOrdersAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BatchCancelSpotOrdersAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BatchCancelSpotOrdersAuthz;
  static deserializeBinaryFromReader(message: BatchCancelSpotOrdersAuthz, reader: jspb.BinaryReader): BatchCancelSpotOrdersAuthz;
}

export namespace BatchCancelSpotOrdersAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class CreateDerivativeLimitOrderAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateDerivativeLimitOrderAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: CreateDerivativeLimitOrderAuthz): CreateDerivativeLimitOrderAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CreateDerivativeLimitOrderAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateDerivativeLimitOrderAuthz;
  static deserializeBinaryFromReader(message: CreateDerivativeLimitOrderAuthz, reader: jspb.BinaryReader): CreateDerivativeLimitOrderAuthz;
}

export namespace CreateDerivativeLimitOrderAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class CreateDerivativeMarketOrderAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CreateDerivativeMarketOrderAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: CreateDerivativeMarketOrderAuthz): CreateDerivativeMarketOrderAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CreateDerivativeMarketOrderAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CreateDerivativeMarketOrderAuthz;
  static deserializeBinaryFromReader(message: CreateDerivativeMarketOrderAuthz, reader: jspb.BinaryReader): CreateDerivativeMarketOrderAuthz;
}

export namespace CreateDerivativeMarketOrderAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class BatchCreateDerivativeLimitOrdersAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BatchCreateDerivativeLimitOrdersAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: BatchCreateDerivativeLimitOrdersAuthz): BatchCreateDerivativeLimitOrdersAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BatchCreateDerivativeLimitOrdersAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BatchCreateDerivativeLimitOrdersAuthz;
  static deserializeBinaryFromReader(message: BatchCreateDerivativeLimitOrdersAuthz, reader: jspb.BinaryReader): BatchCreateDerivativeLimitOrdersAuthz;
}

export namespace BatchCreateDerivativeLimitOrdersAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class CancelDerivativeOrderAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): CancelDerivativeOrderAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: CancelDerivativeOrderAuthz): CancelDerivativeOrderAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: CancelDerivativeOrderAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): CancelDerivativeOrderAuthz;
  static deserializeBinaryFromReader(message: CancelDerivativeOrderAuthz, reader: jspb.BinaryReader): CancelDerivativeOrderAuthz;
}

export namespace CancelDerivativeOrderAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class BatchCancelDerivativeOrdersAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearMarketIdsList(): void;
  getMarketIdsList(): Array<string>;
  setMarketIdsList(value: Array<string>): void;
  addMarketIds(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BatchCancelDerivativeOrdersAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: BatchCancelDerivativeOrdersAuthz): BatchCancelDerivativeOrdersAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BatchCancelDerivativeOrdersAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BatchCancelDerivativeOrdersAuthz;
  static deserializeBinaryFromReader(message: BatchCancelDerivativeOrdersAuthz, reader: jspb.BinaryReader): BatchCancelDerivativeOrdersAuthz;
}

export namespace BatchCancelDerivativeOrdersAuthz {
  export type AsObject = {
    subaccountId: string,
    marketIdsList: Array<string>,
  }
}

export class BatchUpdateOrdersAuthz extends jspb.Message {
  getSubaccountId(): string;
  setSubaccountId(value: string): void;

  clearSpotMarketsList(): void;
  getSpotMarketsList(): Array<string>;
  setSpotMarketsList(value: Array<string>): void;
  addSpotMarkets(value: string, index?: number): string;

  clearDerivativeMarketsList(): void;
  getDerivativeMarketsList(): Array<string>;
  setDerivativeMarketsList(value: Array<string>): void;
  addDerivativeMarkets(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BatchUpdateOrdersAuthz.AsObject;
  static toObject(includeInstance: boolean, msg: BatchUpdateOrdersAuthz): BatchUpdateOrdersAuthz.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BatchUpdateOrdersAuthz, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BatchUpdateOrdersAuthz;
  static deserializeBinaryFromReader(message: BatchUpdateOrdersAuthz, reader: jspb.BinaryReader): BatchUpdateOrdersAuthz;
}

export namespace BatchUpdateOrdersAuthz {
  export type AsObject = {
    subaccountId: string,
    spotMarketsList: Array<string>,
    derivativeMarketsList: Array<string>,
  }
}

