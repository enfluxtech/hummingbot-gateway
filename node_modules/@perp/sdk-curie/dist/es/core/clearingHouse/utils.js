import"../../constants/envVariables.js";import{BIG_ZERO as e}from"../../constants/numbers.js";import{FailedPreconditionError as t}from"../../errors/errors.js";import{PositionSide as a}from"../position/types.js";import"big.js";import{invariant as i}from"../../utils/errorChecker.js";import"ethers";import"../../utils/tick.js";function n({isBaseToQuote:e,exchangedPositionNotional:t,deltaAvailableQuote:a,feeRatio:i}){return e?t.mul(i):a.mul(i)}function o({isLong:e,openNotionalAbs:t,deltaAvailableQuote:a}){return e?a.sub(t):t.sub(a)}function r({amountBase:e,amountQuote:t}){return t.div(e).abs()}function l({price:e,markPrice:t}){return e.div(t).sub(1)}function s({imRatio:n,freeCollateral:o,existingPositionValue:r=e,side:l,nextFreeCollateral:s}){i(!n.eq(0),(()=>new t({functionName:"getBuyingPower",stateName:"imRatio",stateValue:"zero"})));const u=!r.eq(0);let d,c;if(u){d=(r.gt(0)?a.LONG:a.SHORT)===l}return c=!u||d?o.div(n):r.abs().add(s.div(n)),c}function u({indexTwapPrice:e,accountValue:t,signedDeltaAvailableBase:a,signedDeltaAvailableQuote:i}){const n=a.mul(e).add(i);return t.add(n)}function d({sumOfOtherBaseDebtValue:t,sumOfQuoteDebtValue:a,thisBaseBalance:i,signedDeltaAvailableBase:n,signedDeltaAvailableQuote:o,indexTwapPrice:r,imRatio:l}){const s=i.add(n),u=s.lt(0)?s.abs():e,d=a.add(o),c=d.lt(0)?d.abs():e;return t.add(u.mul(r)).add(c).mul(l)}function c({nextAccountValue:e,signedDeltaAvailableBase:t,signedDeltaAvailableQuote:a,indexTwapPrice:i,totalUnrealizedPNLFromAllMarkets:n}){const o=n.add(t.mul(i).add(a));return e.sub(o)}function m({nextTotalCollateralValue:e,nextAccountValue:t,nextOpenOrderMarginReq:a}){return(e.gt(t)?t:e).sub(a)}export{s as getBuyingPower,u as getNextAccountValue,m as getNextFreeCollateral,d as getNextOpenOrderMarginReq,c as getNextTotalCollateralValue,l as getPriceImpact,r as getSwapRate,n as getTransactionFee,o as getUnrealizedPnl};
//# sourceMappingURL=utils.js.map
