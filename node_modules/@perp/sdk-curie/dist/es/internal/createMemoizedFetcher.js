import{getLeastSignificantDigit as t}from"../utils/formatters.js";function e(e,n){return e.toFixed(t(e))!==n.toFixed(t(n))}function n(t,n){const r=Object.keys(t||{}),i=Object.keys(n||{});return r.length!==i.length||r.some((r=>e(t[r],n[r])))}function r(t,e){if(t.length!==e.length)return!0;for(let n=0;n<t.length;n++)if(!t[n].eq(e[n]))return!0;return!1}function i(t,e,n){let r,i=!1;return async function(o=!1,u=!1){if(u&&r)return void e(r);if(u&&i)for(let t=0;t<10;t++)if(await new Promise((t=>setTimeout(t,1e3))),r)return void e(r);i=!0;const f=await t();if(!f)return void(i=!1);if(o)return e(f),r=f,void(i=!1);if(n(r,f))return e(f),r=f,void(i=!1);i=!1}}export{i as createMemoizedFetcher,r as hasNumberArrChange,e as hasNumberChange,n as hasNumbersChange};
//# sourceMappingURL=createMemoizedFetcher.js.map
