// package: injective.wasmx.v1
// file: injective/wasmx/v1/query.proto

import * as jspb from "google-protobuf";
import * as google_api_annotations_pb from "../../../google/api/annotations_pb";
import * as injective_wasmx_v1_wasmx_pb from "../../../injective/wasmx/v1/wasmx_pb";
import * as injective_wasmx_v1_genesis_pb from "../../../injective/wasmx/v1/genesis_pb";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";

export class QueryWasmxParamsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryWasmxParamsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryWasmxParamsRequest): QueryWasmxParamsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryWasmxParamsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryWasmxParamsRequest;
  static deserializeBinaryFromReader(message: QueryWasmxParamsRequest, reader: jspb.BinaryReader): QueryWasmxParamsRequest;
}

export namespace QueryWasmxParamsRequest {
  export type AsObject = {
  }
}

export class QueryWasmxParamsResponse extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): injective_wasmx_v1_wasmx_pb.Params | undefined;
  setParams(value?: injective_wasmx_v1_wasmx_pb.Params): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryWasmxParamsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryWasmxParamsResponse): QueryWasmxParamsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryWasmxParamsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryWasmxParamsResponse;
  static deserializeBinaryFromReader(message: QueryWasmxParamsResponse, reader: jspb.BinaryReader): QueryWasmxParamsResponse;
}

export namespace QueryWasmxParamsResponse {
  export type AsObject = {
    params?: injective_wasmx_v1_wasmx_pb.Params.AsObject,
  }
}

export class QueryModuleStateRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryModuleStateRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryModuleStateRequest): QueryModuleStateRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryModuleStateRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryModuleStateRequest;
  static deserializeBinaryFromReader(message: QueryModuleStateRequest, reader: jspb.BinaryReader): QueryModuleStateRequest;
}

export namespace QueryModuleStateRequest {
  export type AsObject = {
  }
}

export class QueryModuleStateResponse extends jspb.Message {
  hasState(): boolean;
  clearState(): void;
  getState(): injective_wasmx_v1_genesis_pb.GenesisState | undefined;
  setState(value?: injective_wasmx_v1_genesis_pb.GenesisState): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryModuleStateResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryModuleStateResponse): QueryModuleStateResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryModuleStateResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryModuleStateResponse;
  static deserializeBinaryFromReader(message: QueryModuleStateResponse, reader: jspb.BinaryReader): QueryModuleStateResponse;
}

export namespace QueryModuleStateResponse {
  export type AsObject = {
    state?: injective_wasmx_v1_genesis_pb.GenesisState.AsObject,
  }
}

export class QueryContractRegistrationInfoRequest extends jspb.Message {
  getContractAddress(): string;
  setContractAddress(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryContractRegistrationInfoRequest.AsObject;
  static toObject(includeInstance: boolean, msg: QueryContractRegistrationInfoRequest): QueryContractRegistrationInfoRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryContractRegistrationInfoRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryContractRegistrationInfoRequest;
  static deserializeBinaryFromReader(message: QueryContractRegistrationInfoRequest, reader: jspb.BinaryReader): QueryContractRegistrationInfoRequest;
}

export namespace QueryContractRegistrationInfoRequest {
  export type AsObject = {
    contractAddress: string,
  }
}

export class QueryContractRegistrationInfoResponse extends jspb.Message {
  hasContract(): boolean;
  clearContract(): void;
  getContract(): injective_wasmx_v1_wasmx_pb.RegisteredContract | undefined;
  setContract(value?: injective_wasmx_v1_wasmx_pb.RegisteredContract): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryContractRegistrationInfoResponse.AsObject;
  static toObject(includeInstance: boolean, msg: QueryContractRegistrationInfoResponse): QueryContractRegistrationInfoResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: QueryContractRegistrationInfoResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): QueryContractRegistrationInfoResponse;
  static deserializeBinaryFromReader(message: QueryContractRegistrationInfoResponse, reader: jspb.BinaryReader): QueryContractRegistrationInfoResponse;
}

export namespace QueryContractRegistrationInfoResponse {
  export type AsObject = {
    contract?: injective_wasmx_v1_wasmx_pb.RegisteredContract.AsObject,
  }
}

