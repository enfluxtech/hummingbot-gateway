// package: injective.tokenfactory.v1beta1
// file: injective/tokenfactory/v1beta1/params.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";
import * as injective_tokenfactory_v1beta1_authorityMetadata_pb from "../../../injective/tokenfactory/v1beta1/authorityMetadata_pb";
import * as cosmos_proto_cosmos_pb from "../../../cosmos_proto/cosmos_pb";
import * as cosmos_base_v1beta1_coin_pb from "../../../cosmos/base/v1beta1/coin_pb";

export class Params extends jspb.Message {
  clearDenomCreationFeeList(): void;
  getDenomCreationFeeList(): Array<cosmos_base_v1beta1_coin_pb.Coin>;
  setDenomCreationFeeList(value: Array<cosmos_base_v1beta1_coin_pb.Coin>): void;
  addDenomCreationFee(value?: cosmos_base_v1beta1_coin_pb.Coin, index?: number): cosmos_base_v1beta1_coin_pb.Coin;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Params.AsObject;
  static toObject(includeInstance: boolean, msg: Params): Params.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Params, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Params;
  static deserializeBinaryFromReader(message: Params, reader: jspb.BinaryReader): Params;
}

export namespace Params {
  export type AsObject = {
    denomCreationFeeList: Array<cosmos_base_v1beta1_coin_pb.Coin.AsObject>,
  }
}

