import { Hex } from 'viem';
import { PairV2 } from './pair';
import { Token } from '@traderjoe-xyz/sdk';
/** Class representing a trade route. */
export declare class RouteV2 {
    readonly pairs: PairV2[];
    readonly path: Token[];
    readonly input: Token;
    readonly output: Token;
    constructor(pairs: PairV2[], input: Token, output?: Token);
    /**
     * Returns the list of token addresses for this route
     *
     * @returns {Hex[]}
     */
    pathToStrArr(): Hex[];
    /**
     * @static
     * Returns all possible trade routes
     *
     * @param {PairV2[]} pairs - The pairs to consider
     * @param {Token} inputToken - The input token
     * @param {Token} outputToken - The output token
     * @param {number} maxHops - maximum # of hops to allow in the trade route
     * @param {PairV2[]} currentPairs - The current list of pairs forming a route (used in recursion)
     * @param {Token} originalInputToken - The original value of the inputToken param (used in recursion)
     * @param {RouteV2[]} outcome - The current list of routes (used in recursion)
     * @returns {RouteV2[]} An array of constructured routes
     */
    static createAllRoutes(pairs: PairV2[], inputToken: Token, outputToken: Token, maxHops?: number, currentPairs?: PairV2[], originalInputToken?: Token, outcome?: RouteV2[]): RouteV2[];
}
