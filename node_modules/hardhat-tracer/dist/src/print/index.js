"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printDebugTraceOrLogs = exports.printLogs = exports.printDebugTrace = void 0;
const utils_1 = require("../utils");
const debug_trace_1 = require("./debug-trace");
Object.defineProperty(exports, "printDebugTrace", { enumerable: true, get: function () { return debug_trace_1.printDebugTrace; } });
const logs_1 = require("./logs");
Object.defineProperty(exports, "printLogs", { enumerable: true, get: function () { return logs_1.printLogs; } });
async function printDebugTraceOrLogs(txHash, dependencies) {
    if ((0, utils_1.isOnlyLogs)(dependencies.tracerEnv)) {
        // if user requested logs, print only logs
        await (0, logs_1.printLogs)(txHash, dependencies);
    }
    else {
        // otherwise, print debug trace which includes logs
        try {
            await (0, debug_trace_1.printDebugTrace)(txHash, dependencies);
        }
        catch (error) {
            // if error is about debug_tt not supported, print a more readable error
            if (error.message.includes("debug_traceTransaction")) {
                console.warn(`Warning! Debug Transaction not supported on this network, falling back to --logs`);
            }
            else {
                // else print what the error is
                console.error("Error in printDebugTraceElseLogs:", error);
                console.warn(`If you think the above error is a bug, please report it to https://github.com/zemse/hardhat-tracer/issues/new, meanwhile falling back to --logs:`);
            }
            // fallback to logs
            await (0, logs_1.printLogs)(txHash, dependencies);
        }
    }
    return true;
}
exports.printDebugTraceOrLogs = printDebugTraceOrLogs;
//# sourceMappingURL=index.js.map