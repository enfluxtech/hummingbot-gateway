"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("cross-fetch/polyfill");var e=require("../errors/errors.js");require("ethers"),require("../network/RetryProvider.js");var r=require("../network/constants.js"),t=require("../network/utils.js");require("big.js");var a=require("../utils/errorChecker.js");require("../constants/envVariables.js"),require("../constants/numbers.js"),require("../utils/tick.js");class s{constructor(e,r,t,a){this.contracts=e,this.externalContracts=r,this.rawPools=t,this.pools=this._normalizePools(this.rawPools),this.collaterals=a}static async create(e){const{contracts:r,externalContracts:t,pools:a,collaterals:o}=await s._fetch(e);return new s(r,t,a,o)}static async _fetch(s){a.invariant(t.isSupportedChainId(s),(()=>new e.UnsupportedChainError));const o=r.MetadataUrlCoreByChainId[s];a.invariant(!!o,(r=>new e.FailedPreconditionError({functionName:"_fetchMarketMetaData",stateName:"metadataUrl",stateValue:o,rawError:r})));const n=r.MetadataUrlPeripheryByChainId[s];a.invariant(!!n,(r=>new e.FailedPreconditionError({functionName:"_fetchMarketMetaData",stateName:"metadataUrlPeriphery",stateValue:n,rawError:r})));const[i,c]=await Promise.all([fetch(o).then((e=>e.json())).then((e=>e)),fetch(n).then((e=>e.json())).then((e=>e))]);return{...i,contracts:{...i.contracts,...c.contracts}}}findCollateralByAddress(e){return this.collaterals.find((r=>r.address===e))}_normalizePools(e){const r=/^v(\w+)/;return e.map((e=>({...e,address:e.address.toLowerCase(),baseAddress:e.baseAddress.toLowerCase(),quoteAddress:e.quoteAddress.toLowerCase(),baseSymbol:e.baseSymbol.replace(r,"$1"),quoteSymbol:e.quoteSymbol.replace(r,"$1")})))}}exports.Metadata=s;
//# sourceMappingURL=Metadata.js.map
