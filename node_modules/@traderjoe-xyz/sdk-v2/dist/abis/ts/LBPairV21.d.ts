export declare const LBPairV21ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "contract ILBFactory";
        readonly name: "factory_";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [];
    readonly name: "AddressHelper__CallFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "AddressHelper__NonContract";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "BinHelper__CompositionFactorFlawed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "BinHelper__LiquidityOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "FeeHelper__FeeOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__AddressZero";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__AlreadyInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__EmptyMarketConfigs";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__FlashLoanCallbackFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__FlashLoanInsufficientAmount";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__InsufficientAmountIn";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__InsufficientAmountOut";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__InvalidInput";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__InvalidStaticFeeParameters";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__MaxTotalFeeExceeded";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__OnlyFactory";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__OnlyProtocolFeeRecipient";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__OutOfLiquidity";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__TokenNotSupported";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "LBPair__ZeroAmount";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "LBPair__ZeroAmountsOut";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__ZeroBorrowAmount";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "LBPair__ZeroShares";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__AddressThisOrZero";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "LBToken__BurnExceedsBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__InvalidLength";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }];
    readonly name: "LBToken__SelfApproval";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }];
    readonly name: "LBToken__SpenderNotApproved";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "LBToken__TransferExceedsBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LiquidityConfigurations__InvalidConfig";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OracleHelper__InvalidOracleId";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OracleHelper__LookUpTimestampTooOld";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OracleHelper__NewLengthTooSmall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PackedUint128Math__AddOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PackedUint128Math__MultiplierTooLarge";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PackedUint128Math__SubUnderflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "PairParametersHelper__InvalidParameter";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "ReentrancyGuard__ReentrantCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SafeCast__Exceeds128Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SafeCast__Exceeds24Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SafeCast__Exceeds40Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "TokenHelper__TransferFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Uint128x128Math__LogUnderflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }, {
        readonly internalType: "int256";
        readonly name: "y";
        readonly type: "int256";
    }];
    readonly name: "Uint128x128Math__PowUnderflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Uint256x256Math__MulDivOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Uint256x256Math__MulShiftOverflow";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "approved";
        readonly type: "bool";
    }];
    readonly name: "ApprovalForAll";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "feeRecipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "protocolFees";
        readonly type: "bytes32";
    }];
    readonly name: "CollectedProtocolFees";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "totalFees";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "protocolFees";
        readonly type: "bytes32";
    }];
    readonly name: "CompositionFees";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32[]";
        readonly name: "amounts";
        readonly type: "bytes32[]";
    }];
    readonly name: "DepositedToBins";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "contract ILBFlashLoanCallback";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "activeId";
        readonly type: "uint24";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "amounts";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "totalFees";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "protocolFees";
        readonly type: "bytes32";
    }];
    readonly name: "FlashLoan";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "idReference";
        readonly type: "uint24";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "volatilityReference";
        readonly type: "uint24";
    }];
    readonly name: "ForcedDecay";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint16";
        readonly name: "oracleLength";
        readonly type: "uint16";
    }];
    readonly name: "OracleLengthIncreased";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint16";
        readonly name: "baseFactor";
        readonly type: "uint16";
    }, {
        readonly indexed: false;
        readonly internalType: "uint16";
        readonly name: "filterPeriod";
        readonly type: "uint16";
    }, {
        readonly indexed: false;
        readonly internalType: "uint16";
        readonly name: "decayPeriod";
        readonly type: "uint16";
    }, {
        readonly indexed: false;
        readonly internalType: "uint16";
        readonly name: "reductionFactor";
        readonly type: "uint16";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "variableFeeControl";
        readonly type: "uint24";
    }, {
        readonly indexed: false;
        readonly internalType: "uint16";
        readonly name: "protocolShare";
        readonly type: "uint16";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "maxVolatilityAccumulator";
        readonly type: "uint24";
    }];
    readonly name: "StaticFeeParametersSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "amountsIn";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "amountsOut";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint24";
        readonly name: "volatilityAccumulator";
        readonly type: "uint24";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "totalFees";
        readonly type: "bytes32";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32";
        readonly name: "protocolFees";
        readonly type: "bytes32";
    }];
    readonly name: "Swap";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "amounts";
        readonly type: "uint256[]";
    }];
    readonly name: "TransferBatch";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes32[]";
        readonly name: "amounts";
        readonly type: "bytes32[]";
    }];
    readonly name: "WithdrawnFromBins";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "approved";
        readonly type: "bool";
    }];
    readonly name: "approveForAll";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "accounts";
        readonly type: "address[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }];
    readonly name: "balanceOfBatch";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "batchBalances";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "amounts";
        readonly type: "uint256[]";
    }];
    readonly name: "batchTransferFrom";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "amountsToBurn";
        readonly type: "uint256[]";
    }];
    readonly name: "burn";
    readonly outputs: readonly [{
        readonly internalType: "bytes32[]";
        readonly name: "amounts";
        readonly type: "bytes32[]";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "collectProtocolFees";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "collectedProtocolFees";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract ILBFlashLoanCallback";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "amounts";
        readonly type: "bytes32";
    }, {
        readonly internalType: "bytes";
        readonly name: "data";
        readonly type: "bytes";
    }];
    readonly name: "flashLoan";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "forceDecay";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getActiveId";
    readonly outputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "activeId";
        readonly type: "uint24";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "getBin";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "binReserveX";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "binReserveY";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getBinStep";
    readonly outputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "";
        readonly type: "uint16";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getFactory";
    readonly outputs: readonly [{
        readonly internalType: "contract ILBFactory";
        readonly name: "factory";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "price";
        readonly type: "uint256";
    }];
    readonly name: "getIdFromPrice";
    readonly outputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bool";
        readonly name: "swapForY";
        readonly type: "bool";
    }, {
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "getNextNonEmptyBin";
    readonly outputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "nextId";
        readonly type: "uint24";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getOracleParameters";
    readonly outputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "sampleLifetime";
        readonly type: "uint8";
    }, {
        readonly internalType: "uint16";
        readonly name: "size";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "activeSize";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint40";
        readonly name: "lastUpdated";
        readonly type: "uint40";
    }, {
        readonly internalType: "uint40";
        readonly name: "firstTimestamp";
        readonly type: "uint40";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint40";
        readonly name: "lookupTimestamp";
        readonly type: "uint40";
    }];
    readonly name: "getOracleSampleAt";
    readonly outputs: readonly [{
        readonly internalType: "uint64";
        readonly name: "cumulativeId";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "cumulativeVolatility";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "cumulativeBinCrossed";
        readonly type: "uint64";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "id";
        readonly type: "uint24";
    }];
    readonly name: "getPriceFromId";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "price";
        readonly type: "uint256";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getProtocolFees";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "protocolFeeX";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "protocolFeeY";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getReserves";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "reserveX";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "reserveY";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getStaticFeeParameters";
    readonly outputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "baseFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "filterPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "decayPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "reductionFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "variableFeeControl";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "protocolShare";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "maxVolatilityAccumulator";
        readonly type: "uint24";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "amountOut";
        readonly type: "uint128";
    }, {
        readonly internalType: "bool";
        readonly name: "swapForY";
        readonly type: "bool";
    }];
    readonly name: "getSwapIn";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "amountIn";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "amountOutLeft";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "fee";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "amountIn";
        readonly type: "uint128";
    }, {
        readonly internalType: "bool";
        readonly name: "swapForY";
        readonly type: "bool";
    }];
    readonly name: "getSwapOut";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "amountInLeft";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "amountOut";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "fee";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getTokenX";
    readonly outputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "tokenX";
        readonly type: "address";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getTokenY";
    readonly outputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "tokenY";
        readonly type: "address";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getVariableFeeParameters";
    readonly outputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "volatilityAccumulator";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint24";
        readonly name: "volatilityReference";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint24";
        readonly name: "idReference";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint40";
        readonly name: "timeOfLastUpdate";
        readonly type: "uint40";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "newLength";
        readonly type: "uint16";
    }];
    readonly name: "increaseOracleLength";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "baseFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "filterPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "decayPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "reductionFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "variableFeeControl";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "protocolShare";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "maxVolatilityAccumulator";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint24";
        readonly name: "activeId";
        readonly type: "uint24";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }];
    readonly name: "isApprovedForAll";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32[]";
        readonly name: "liquidityConfigs";
        readonly type: "bytes32[]";
    }, {
        readonly internalType: "address";
        readonly name: "refundTo";
        readonly type: "address";
    }];
    readonly name: "mint";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "amountsReceived";
        readonly type: "bytes32";
    }, {
        readonly internalType: "bytes32";
        readonly name: "amountsLeft";
        readonly type: "bytes32";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "liquidityMinted";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "baseFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "filterPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "decayPeriod";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint16";
        readonly name: "reductionFactor";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "variableFeeControl";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "protocolShare";
        readonly type: "uint16";
    }, {
        readonly internalType: "uint24";
        readonly name: "maxVolatilityAccumulator";
        readonly type: "uint24";
    }];
    readonly name: "setStaticFeeParameters";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bool";
        readonly name: "swapForY";
        readonly type: "bool";
    }, {
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }];
    readonly name: "swap";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "amountsOut";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
