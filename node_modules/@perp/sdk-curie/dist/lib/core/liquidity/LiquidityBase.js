"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../../internal/Channel.js"),t=require("../../internal/ChannelEventSource.js");require("../../constants/envVariables.js");var r=require("../../constants/numbers.js");require("big.js"),require("ethers");var i,u=require("../../utils/tick.js");exports.RangeType=void 0,(i=exports.RangeType||(exports.RangeType={})).RANGE_UNINITIALIZED="RANGE_UNINITIALIZED",i.RANGE_INVALID="RANGE_INVALID",i.RANGE_INSIDE="RANGE_INSIDE",i.RANGE_AT_LEFT="RANGE_AT_LEFT",i.RANGE_AT_RIGHT="RANGE_AT_RIGHT";class n extends e.Channel{constructor({market:e},t){super(t),this._lowerTick=u.TICK_MIN,this._upperTick=u.TICK_MAX,this.market=e}get lowerTick(){return this._lowerTick}get upperTick(){return this._upperTick}get lowerTickPrice(){return u.tickToPrice(this._lowerTick)}get upperTickPrice(){return u.tickToPrice(this._upperTick)}async getRangeType({cache:e=!0}={}){const{markPrice:t}=await this.market.getPrices({cache:e});return n.getRangeTypeByMarkPrice(t,this.lowerTickPrice,this.upperTickPrice)}_getEventSourceMap(){const e=new t.ChannelEventSource({eventSourceStarter:()=>this.market.on("updated",(()=>this.emit("updated",this)))});return{updated:e,updateError:e}}static getRangeTypeByMarkPrice(e,t,r){return r.lte(t)?exports.RangeType.RANGE_INVALID:e.gte(r)?exports.RangeType.RANGE_AT_LEFT:e.lte(t)?exports.RangeType.RANGE_AT_RIGHT:exports.RangeType.RANGE_INSIDE}static getLiquidityFromBaseToken(e,t,i){const u=i.mul(e).mul(t),n=r.Q96.mul(t.sub(e));return u.div(n)}static getLiquidityFromQuoteToken(e,t,i){const u=i.mul(r.Q96),n=e.sub(t);return u.div(n)}static getBaseTokenAmountFromLiquidity(e,t,i){const[u,n]=e.lt(t)?[e,t]:[t,e],s=i.mul(r.Q96),o=n.sub(u),a=s.mul(o),c=n.mul(u);return a.div(c)}static getQuoteTokenAmountFromLiquidity(e,t,i){const[u,n]=e.lt(t)?[e,t]:[t,e],s=i.mul(n.sub(u)),o=r.Q96;return s.div(o)}static maxLiquidityForAmounts(e,t,r,i,u){if(t.gt(r)&&([t,r]=[r,t]),e.lte(t))return n.getLiquidityFromBaseToken(t,r,i);if(e.lt(r)){const s=n.getLiquidityFromBaseToken(e,r,i),o=n.getLiquidityFromQuoteToken(e,t,u);return s.lt(o)?s:o}return n.getLiquidityFromQuoteToken(r,t,u)}}exports.LiquidityBase=n;
//# sourceMappingURL=LiquidityBase.js.map
