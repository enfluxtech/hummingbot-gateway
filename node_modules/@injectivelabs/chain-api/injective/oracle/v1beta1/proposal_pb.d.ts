// package: injective.oracle.v1beta1
// file: injective/oracle/v1beta1/proposal.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";
import * as cosmos_base_v1beta1_coin_pb from "../../../cosmos/base/v1beta1/coin_pb";
import * as injective_oracle_v1beta1_oracle_pb from "../../../injective/oracle/v1beta1/oracle_pb";

export class GrantBandOraclePrivilegeProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  clearRelayersList(): void;
  getRelayersList(): Array<string>;
  setRelayersList(value: Array<string>): void;
  addRelayers(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GrantBandOraclePrivilegeProposal.AsObject;
  static toObject(includeInstance: boolean, msg: GrantBandOraclePrivilegeProposal): GrantBandOraclePrivilegeProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GrantBandOraclePrivilegeProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GrantBandOraclePrivilegeProposal;
  static deserializeBinaryFromReader(message: GrantBandOraclePrivilegeProposal, reader: jspb.BinaryReader): GrantBandOraclePrivilegeProposal;
}

export namespace GrantBandOraclePrivilegeProposal {
  export type AsObject = {
    title: string,
    description: string,
    relayersList: Array<string>,
  }
}

export class RevokeBandOraclePrivilegeProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  clearRelayersList(): void;
  getRelayersList(): Array<string>;
  setRelayersList(value: Array<string>): void;
  addRelayers(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): RevokeBandOraclePrivilegeProposal.AsObject;
  static toObject(includeInstance: boolean, msg: RevokeBandOraclePrivilegeProposal): RevokeBandOraclePrivilegeProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: RevokeBandOraclePrivilegeProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): RevokeBandOraclePrivilegeProposal;
  static deserializeBinaryFromReader(message: RevokeBandOraclePrivilegeProposal, reader: jspb.BinaryReader): RevokeBandOraclePrivilegeProposal;
}

export namespace RevokeBandOraclePrivilegeProposal {
  export type AsObject = {
    title: string,
    description: string,
    relayersList: Array<string>,
  }
}

export class GrantPriceFeederPrivilegeProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  getBase(): string;
  setBase(value: string): void;

  getQuote(): string;
  setQuote(value: string): void;

  clearRelayersList(): void;
  getRelayersList(): Array<string>;
  setRelayersList(value: Array<string>): void;
  addRelayers(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GrantPriceFeederPrivilegeProposal.AsObject;
  static toObject(includeInstance: boolean, msg: GrantPriceFeederPrivilegeProposal): GrantPriceFeederPrivilegeProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GrantPriceFeederPrivilegeProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GrantPriceFeederPrivilegeProposal;
  static deserializeBinaryFromReader(message: GrantPriceFeederPrivilegeProposal, reader: jspb.BinaryReader): GrantPriceFeederPrivilegeProposal;
}

export namespace GrantPriceFeederPrivilegeProposal {
  export type AsObject = {
    title: string,
    description: string,
    base: string,
    quote: string,
    relayersList: Array<string>,
  }
}

export class GrantProviderPrivilegeProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  getProvider(): string;
  setProvider(value: string): void;

  clearRelayersList(): void;
  getRelayersList(): Array<string>;
  setRelayersList(value: Array<string>): void;
  addRelayers(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GrantProviderPrivilegeProposal.AsObject;
  static toObject(includeInstance: boolean, msg: GrantProviderPrivilegeProposal): GrantProviderPrivilegeProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GrantProviderPrivilegeProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GrantProviderPrivilegeProposal;
  static deserializeBinaryFromReader(message: GrantProviderPrivilegeProposal, reader: jspb.BinaryReader): GrantProviderPrivilegeProposal;
}

export namespace GrantProviderPrivilegeProposal {
  export type AsObject = {
    title: string,
    description: string,
    provider: string,
    relayersList: Array<string>,
  }
}

export class RevokeProviderPrivilegeProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  getProvider(): string;
  setProvider(value: string): void;

  clearRelayersList(): void;
  getRelayersList(): Array<string>;
  setRelayersList(value: Array<string>): void;
  addRelayers(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): RevokeProviderPrivilegeProposal.AsObject;
  static toObject(includeInstance: boolean, msg: RevokeProviderPrivilegeProposal): RevokeProviderPrivilegeProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: RevokeProviderPrivilegeProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): RevokeProviderPrivilegeProposal;
  static deserializeBinaryFromReader(message: RevokeProviderPrivilegeProposal, reader: jspb.BinaryReader): RevokeProviderPrivilegeProposal;
}

export namespace RevokeProviderPrivilegeProposal {
  export type AsObject = {
    title: string,
    description: string,
    provider: string,
    relayersList: Array<string>,
  }
}

export class RevokePriceFeederPrivilegeProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  getBase(): string;
  setBase(value: string): void;

  getQuote(): string;
  setQuote(value: string): void;

  clearRelayersList(): void;
  getRelayersList(): Array<string>;
  setRelayersList(value: Array<string>): void;
  addRelayers(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): RevokePriceFeederPrivilegeProposal.AsObject;
  static toObject(includeInstance: boolean, msg: RevokePriceFeederPrivilegeProposal): RevokePriceFeederPrivilegeProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: RevokePriceFeederPrivilegeProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): RevokePriceFeederPrivilegeProposal;
  static deserializeBinaryFromReader(message: RevokePriceFeederPrivilegeProposal, reader: jspb.BinaryReader): RevokePriceFeederPrivilegeProposal;
}

export namespace RevokePriceFeederPrivilegeProposal {
  export type AsObject = {
    title: string,
    description: string,
    base: string,
    quote: string,
    relayersList: Array<string>,
  }
}

export class AuthorizeBandOracleRequestProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  hasRequest(): boolean;
  clearRequest(): void;
  getRequest(): injective_oracle_v1beta1_oracle_pb.BandOracleRequest | undefined;
  setRequest(value?: injective_oracle_v1beta1_oracle_pb.BandOracleRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): AuthorizeBandOracleRequestProposal.AsObject;
  static toObject(includeInstance: boolean, msg: AuthorizeBandOracleRequestProposal): AuthorizeBandOracleRequestProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: AuthorizeBandOracleRequestProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): AuthorizeBandOracleRequestProposal;
  static deserializeBinaryFromReader(message: AuthorizeBandOracleRequestProposal, reader: jspb.BinaryReader): AuthorizeBandOracleRequestProposal;
}

export namespace AuthorizeBandOracleRequestProposal {
  export type AsObject = {
    title: string,
    description: string,
    request?: injective_oracle_v1beta1_oracle_pb.BandOracleRequest.AsObject,
  }
}

export class UpdateBandOracleRequestProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  getDeleteRequestId(): number;
  setDeleteRequestId(value: number): void;

  hasUpdateOracleRequest(): boolean;
  clearUpdateOracleRequest(): void;
  getUpdateOracleRequest(): injective_oracle_v1beta1_oracle_pb.BandOracleRequest | undefined;
  setUpdateOracleRequest(value?: injective_oracle_v1beta1_oracle_pb.BandOracleRequest): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): UpdateBandOracleRequestProposal.AsObject;
  static toObject(includeInstance: boolean, msg: UpdateBandOracleRequestProposal): UpdateBandOracleRequestProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: UpdateBandOracleRequestProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): UpdateBandOracleRequestProposal;
  static deserializeBinaryFromReader(message: UpdateBandOracleRequestProposal, reader: jspb.BinaryReader): UpdateBandOracleRequestProposal;
}

export namespace UpdateBandOracleRequestProposal {
  export type AsObject = {
    title: string,
    description: string,
    deleteRequestId: number,
    updateOracleRequest?: injective_oracle_v1beta1_oracle_pb.BandOracleRequest.AsObject,
  }
}

export class EnableBandIBCProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  hasBandIbcParams(): boolean;
  clearBandIbcParams(): void;
  getBandIbcParams(): injective_oracle_v1beta1_oracle_pb.BandIBCParams | undefined;
  setBandIbcParams(value?: injective_oracle_v1beta1_oracle_pb.BandIBCParams): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): EnableBandIBCProposal.AsObject;
  static toObject(includeInstance: boolean, msg: EnableBandIBCProposal): EnableBandIBCProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: EnableBandIBCProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): EnableBandIBCProposal;
  static deserializeBinaryFromReader(message: EnableBandIBCProposal, reader: jspb.BinaryReader): EnableBandIBCProposal;
}

export namespace EnableBandIBCProposal {
  export type AsObject = {
    title: string,
    description: string,
    bandIbcParams?: injective_oracle_v1beta1_oracle_pb.BandIBCParams.AsObject,
  }
}

