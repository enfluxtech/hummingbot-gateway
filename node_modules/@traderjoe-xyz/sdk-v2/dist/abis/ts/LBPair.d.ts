export declare const LBPairABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "contract ILBFactory";
        readonly name: "_factory";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "bp";
        readonly type: "uint256";
    }];
    readonly name: "BinHelper__BinStepOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "BinHelper__IdOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__AddressZero";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__AddressZeroOrThis";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__AlreadyInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "LBPair__CompositionFactorFlawed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__DistributionsOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__FlashLoanCallbackFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__FlashLoanTokenNotSupported";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__FlashLoanWrongFee";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__InsufficientAmounts";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "LBPair__InsufficientLiquidityBurned";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }];
    readonly name: "LBPair__InsufficientLiquidityMinted";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "newSize";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "oracleSize";
        readonly type: "uint256";
    }];
    readonly name: "LBPair__NewSizeTooSmall";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__OnlyFactory";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "feeRecipient";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }];
    readonly name: "LBPair__OnlyFeeRecipient";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__OnlyStrictlyIncreasingId";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBPair__WrongLengths";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "LBToken__BurnExceedsBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__BurnFromAddress0";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "accountsLength";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "idsLength";
        readonly type: "uint256";
    }];
    readonly name: "LBToken__LengthMismatch";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__MintToAddress0";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__NotSupported";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }];
    readonly name: "LBToken__SelfApproval";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "spender";
        readonly type: "address";
    }];
    readonly name: "LBToken__SpenderNotApproved";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "LBToken__TransferExceedsBalance";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__TransferFromOrToAddress0";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "LBToken__TransferToSelf";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }, {
        readonly internalType: "int256";
        readonly name: "y";
        readonly type: "int256";
    }];
    readonly name: "Math128x128__PowerUnderflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "prod1";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "denominator";
        readonly type: "uint256";
    }];
    readonly name: "Math512Bits__MulDivOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "prod1";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "offset";
        readonly type: "uint256";
    }];
    readonly name: "Math512Bits__MulShiftOverflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "offset";
        readonly type: "uint256";
    }];
    readonly name: "Math512Bits__OffsetOverflows";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_minTimestamp";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_lookUpTimestamp";
        readonly type: "uint256";
    }];
    readonly name: "Oracle__LookUpTimestampTooOld";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Oracle__NotInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "ReentrancyGuardUpgradeable__AlreadyInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "ReentrancyGuardUpgradeable__ReentrantCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }];
    readonly name: "SafeCast__Exceeds112Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }];
    readonly name: "SafeCast__Exceeds128Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }];
    readonly name: "SafeCast__Exceeds24Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }];
    readonly name: "SafeCast__Exceeds40Bits";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "TokenHelper__CallFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "TokenHelper__NonContract";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "TokenHelper__TransferFailed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "TreeMath__ErrorDepthSearch";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "approved";
        readonly type: "bool";
    }];
    readonly name: "ApprovalForAll";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly name: "Burn";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "feesX";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "feesY";
        readonly type: "uint256";
    }];
    readonly name: "CompositionFee";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly name: "DepositedToBin";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly name: "FeesCollected";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "contract ILBFlashLoanCallback";
        readonly name: "receiver";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "contract IERC20";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "fee";
        readonly type: "uint256";
    }];
    readonly name: "FlashLoan";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "previousSize";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "newSize";
        readonly type: "uint256";
    }];
    readonly name: "OracleSizeIncreased";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly name: "ProtocolFeesCollected";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "bool";
        readonly name: "swapForY";
        readonly type: "bool";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountIn";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountOut";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "volatilityAccumulated";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "fees";
        readonly type: "uint256";
    }];
    readonly name: "Swap";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "ids";
        readonly type: "uint256[]";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256[]";
        readonly name: "amounts";
        readonly type: "uint256[]";
    }];
    readonly name: "TransferBatch";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "from";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "to";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "TransferSingle";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "id";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly name: "WithdrawnFromBin";
    readonly type: "event";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_id";
        readonly type: "uint256";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "_accounts";
        readonly type: "address[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_ids";
        readonly type: "uint256[]";
    }];
    readonly name: "balanceOfBatch";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "batchBalances";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "_ids";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_amounts";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }];
    readonly name: "burn";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_ids";
        readonly type: "uint256[]";
    }];
    readonly name: "collectFees";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "collectProtocolFees";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "amountX";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "amountY";
        readonly type: "uint128";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "factory";
    readonly outputs: readonly [{
        readonly internalType: "contract ILBFactory";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "feeParameters";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint16";
            readonly name: "binStep";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "baseFactor";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "filterPeriod";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "decayPeriod";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "reductionFactor";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint24";
            readonly name: "variableFeeControl";
            readonly type: "uint24";
        }, {
            readonly internalType: "uint16";
            readonly name: "protocolShare";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint24";
            readonly name: "maxVolatilityAccumulated";
            readonly type: "uint24";
        }, {
            readonly internalType: "uint24";
            readonly name: "volatilityAccumulated";
            readonly type: "uint24";
        }, {
            readonly internalType: "uint24";
            readonly name: "volatilityReference";
            readonly type: "uint24";
        }, {
            readonly internalType: "uint24";
            readonly name: "indexRef";
            readonly type: "uint24";
        }, {
            readonly internalType: "uint40";
            readonly name: "time";
            readonly type: "uint40";
        }];
        readonly internalType: "struct FeeHelper.FeeParameters";
        readonly name: "";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "_id";
        readonly type: "uint24";
    }, {
        readonly internalType: "bool";
        readonly name: "_swapForY";
        readonly type: "bool";
    }];
    readonly name: "findFirstNonEmptyBinId";
    readonly outputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "";
        readonly type: "uint24";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract ILBFlashLoanCallback";
        readonly name: "_receiver";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_token";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "bytes";
        readonly name: "_data";
        readonly type: "bytes";
    }];
    readonly name: "flashLoan";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "forceDecay";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint24";
        readonly name: "_id";
        readonly type: "uint24";
    }];
    readonly name: "getBin";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "reserveX";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "reserveY";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getGlobalFees";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "feesXTotal";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "feesYTotal";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "feesXProtocol";
        readonly type: "uint128";
    }, {
        readonly internalType: "uint128";
        readonly name: "feesYProtocol";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getOracleParameters";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "oracleSampleLifetime";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "oracleSize";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "oracleActiveSize";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "oracleLastTimestamp";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "oracleId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "min";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "max";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_timeDelta";
        readonly type: "uint256";
    }];
    readonly name: "getOracleSampleFrom";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "cumulativeId";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "cumulativeVolatilityAccumulated";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "cumulativeBinCrossed";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getReservesAndId";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "reserveX";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "reserveY";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "activeId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint16";
        readonly name: "_newSize";
        readonly type: "uint16";
    }];
    readonly name: "increaseOracleLength";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "_tokenX";
        readonly type: "address";
    }, {
        readonly internalType: "contract IERC20";
        readonly name: "_tokenY";
        readonly type: "address";
    }, {
        readonly internalType: "uint24";
        readonly name: "_activeId";
        readonly type: "uint24";
    }, {
        readonly internalType: "uint16";
        readonly name: "_sampleLifetime";
        readonly type: "uint16";
    }, {
        readonly internalType: "bytes32";
        readonly name: "_packedFeeParameters";
        readonly type: "bytes32";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_owner";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_spender";
        readonly type: "address";
    }];
    readonly name: "isApprovedForAll";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "_ids";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_distributionX";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_distributionY";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }];
    readonly name: "mint";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "liquidityMinted";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_ids";
        readonly type: "uint256[]";
    }];
    readonly name: "pendingFees";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amountX";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amountY";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_ids";
        readonly type: "uint256[]";
    }, {
        readonly internalType: "uint256[]";
        readonly name: "_amounts";
        readonly type: "uint256[]";
    }];
    readonly name: "safeBatchTransferFrom";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_from";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_id";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "_amount";
        readonly type: "uint256";
    }];
    readonly name: "safeTransferFrom";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_spender";
        readonly type: "address";
    }, {
        readonly internalType: "bool";
        readonly name: "_approved";
        readonly type: "bool";
    }];
    readonly name: "setApprovalForAll";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "_packedFeeParameters";
        readonly type: "bytes32";
    }];
    readonly name: "setFeesParameters";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes4";
        readonly name: "_interfaceId";
        readonly type: "bytes4";
    }];
    readonly name: "supportsInterface";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bool";
        readonly name: "_swapForY";
        readonly type: "bool";
    }, {
        readonly internalType: "address";
        readonly name: "_to";
        readonly type: "address";
    }];
    readonly name: "swap";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amountXOut";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "amountYOut";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "";
        readonly type: "string";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "tokenX";
    readonly outputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "tokenY";
    readonly outputs: readonly [{
        readonly internalType: "contract IERC20";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_id";
        readonly type: "uint256";
    }];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
