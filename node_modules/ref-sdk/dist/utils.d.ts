import { Pool, PoolRPCView, StablePool, SmartRoutingInputPool } from './types';
import BN from 'bn.js';
export declare const parsePool: (pool: PoolRPCView, id?: number | undefined) => Pool;
export declare const poolFormatter: (pool: Pool) => SmartRoutingInputPool;
export declare const isStablePoolToken: (stablePools: StablePool[], tokenId: string | Number) => boolean;
export declare const isStablePool: (stablePools: StablePool[], poolId: string | number) => boolean;
export declare const getStablePoolDecimal: (stablePool: StablePool) => 18 | 24;
export declare const round: (decimals: number, minAmountOut: string) => string;
export declare const convertToPercentDecimal: (percent: number) => number;
export declare const percentOf: (percent: number, num: number | string) => any;
export declare const percentLess: (percent: number, num: number | string) => string;
export declare const getGas: (gas: string) => BN;
export declare const getAmount: (amount: string) => BN;
export declare const ONLY_ZEROS: RegExp;
export declare const toReadableNumber: (decimals: number, number?: string) => string;
export declare const toNonDivisibleNumber: (decimals: number, number: string) => string;
export declare const scientificNotationToString: (strParam: string) => string;
export declare const formatWithCommas: (value: string) => string;
export declare const toPrecision: (number: string, precision: number, withCommas?: boolean, atLeastOne?: boolean) => string;
