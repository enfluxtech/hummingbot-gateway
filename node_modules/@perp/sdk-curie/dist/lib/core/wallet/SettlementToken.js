"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("ethers");require("../../constants/envVariables.js");var t=require("../../constants/numbers.js"),r=require("../../contracts/Contracts.js"),n=require("../../internal/Channel.js"),a=require("../../internal/ChannelEventSource.js"),c=require("../../utils/formatters.js"),s=require("../../transactionSender/index.js");require("big.js"),require("../../utils/tick.js");class o extends n.Channel{constructor(e,t){super(e.channelRegistry),this._perp=e,this._contract=t,this._contractReader=e.contractReader}get contract(){return this._contract}get address(){return this._contract.address}async symbol(){return"USDC"}async name(){return"USD Coin"}async decimals(){return t.SETTLEMENT_TOKEN_DECIMAL}async weight(){return 1}async price(){return 1}async cap(){}async balanceOf(e){return this._contractReader.getBalanceOfSettlementToken(e)}async allowance(e,t){return this._contractReader.getAllowanceOfSettlementToken(e,t)}async approve(t,n,a){const o=await this.decimals();return s.getTransaction({account:t,contract:this._contract,contractName:r.ContractName.SETTLEMENT_TOKEN,contractFunctionName:"approve",args:[n,a?c.big2BigNumberAndScaleUp(a,o):e.constants.MaxUint256]})}_getEventSourceMap(){return{Approval:new a.ChannelEventSource({eventSourceStarter:()=>{const e=(...e)=>this.emit("Approval",...e);return this._contract.on("Approval",e),()=>this._contract.off("Approval",e)}}),Transfer:new a.ChannelEventSource({eventSourceStarter:()=>{const e=(...e)=>this.emit("Transfer",...e);return this._contract.on("Transfer",e),()=>this._contract.off("Transfer",e)}})}}}exports.SettlementToken=o;
//# sourceMappingURL=SettlementToken.js.map
