// package: injective.wasmx.v1
// file: injective/wasmx/v1/genesis.proto

import * as jspb from "google-protobuf";
import * as injective_wasmx_v1_wasmx_pb from "../../../injective/wasmx/v1/wasmx_pb";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";

export class RegisteredContractWithAddress extends jspb.Message {
  getAddress(): string;
  setAddress(value: string): void;

  hasRegisteredContract(): boolean;
  clearRegisteredContract(): void;
  getRegisteredContract(): injective_wasmx_v1_wasmx_pb.RegisteredContract | undefined;
  setRegisteredContract(value?: injective_wasmx_v1_wasmx_pb.RegisteredContract): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): RegisteredContractWithAddress.AsObject;
  static toObject(includeInstance: boolean, msg: RegisteredContractWithAddress): RegisteredContractWithAddress.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: RegisteredContractWithAddress, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): RegisteredContractWithAddress;
  static deserializeBinaryFromReader(message: RegisteredContractWithAddress, reader: jspb.BinaryReader): RegisteredContractWithAddress;
}

export namespace RegisteredContractWithAddress {
  export type AsObject = {
    address: string,
    registeredContract?: injective_wasmx_v1_wasmx_pb.RegisteredContract.AsObject,
  }
}

export class GenesisState extends jspb.Message {
  hasParams(): boolean;
  clearParams(): void;
  getParams(): injective_wasmx_v1_wasmx_pb.Params | undefined;
  setParams(value?: injective_wasmx_v1_wasmx_pb.Params): void;

  clearRegisteredContractsList(): void;
  getRegisteredContractsList(): Array<RegisteredContractWithAddress>;
  setRegisteredContractsList(value: Array<RegisteredContractWithAddress>): void;
  addRegisteredContracts(value?: RegisteredContractWithAddress, index?: number): RegisteredContractWithAddress;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): GenesisState.AsObject;
  static toObject(includeInstance: boolean, msg: GenesisState): GenesisState.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: GenesisState, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): GenesisState;
  static deserializeBinaryFromReader(message: GenesisState, reader: jspb.BinaryReader): GenesisState;
}

export namespace GenesisState {
  export type AsObject = {
    params?: injective_wasmx_v1_wasmx_pb.Params.AsObject,
    registeredContractsList: Array<RegisteredContractWithAddress.AsObject>,
  }
}

