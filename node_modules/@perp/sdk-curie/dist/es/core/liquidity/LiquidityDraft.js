import{constants as t}from"ethers";import"../../constants/envVariables.js";import{BIG_ZERO as e}from"../../constants/numbers.js";import"big.js";import{bigNumber2BigAndScaleDown as i,toSqrtX96 as r}from"../../utils/formatters.js";import{tickToPrice as s}from"../../utils/tick.js";import{LiquidityBase as a,RangeType as o}from"./LiquidityBase.js";const c=i(t.MaxUint256,1);class u extends a{constructor({perp:t,market:e,lowerTick:i,upperTick:r,rawBaseAmount:s,rawQuoteAmount:a}){super({market:e},t.channelRegistry),this._perp=t,this._lowerTick=i,this._upperTick=r,this.rawBaseAmount=s,this.rawQuoteAmount=a}async getLiquidity({cache:t=!0}={}){const[{markPrice:i},a]=await Promise.all([this.market.getPrices({cache:t}),this.getRangeType({cache:t})]),n=r(i),m=s(this._lowerTick),h=s(this._upperTick),A=r(m),T=r(h);switch(a){case o.RANGE_AT_LEFT:return this.rawQuoteAmount?u.maxLiquidityForAmounts(n,A,T,c,this.rawQuoteAmount):e;case o.RANGE_AT_RIGHT:return this.rawBaseAmount?u.maxLiquidityForAmounts(n,A,T,this.rawBaseAmount,c):e;case o.RANGE_INSIDE:return this.rawBaseAmount||this.rawQuoteAmount?u.maxLiquidityForAmounts(n,A,T,this.rawBaseAmount||c,this.rawQuoteAmount||c):e;default:return e}}async getBaseAmount({cache:t=!0}={}){const i=await this.getRangeType({cache:t}),a=await this.getLiquidity(),{markPrice:c}=await this.market.getPrices(),n=r(c),m=s(this._lowerTick),h=r(m),A=s(this._upperTick),T=r(A);let k=e;switch(i){case o.RANGE_AT_RIGHT:k=u.getBaseTokenAmountFromLiquidity(h,T,a);break;case o.RANGE_INSIDE:k=u.getBaseTokenAmountFromLiquidity(n,T,a);break;case o.RANGE_AT_LEFT:k=e}return k}async getQuoteAmount({cache:t=!0}={}){const i=await this.getRangeType({cache:t}),a=await this.getLiquidity(),{markPrice:c}=await this.market.getPrices(),n=r(c),m=s(this._lowerTick),h=r(m),A=s(this._upperTick),T=r(A);let k=e;switch(i){case o.RANGE_AT_LEFT:k=u.getQuoteTokenAmountFromLiquidity(h,T,a);break;case o.RANGE_INSIDE:k=u.getQuoteTokenAmountFromLiquidity(n,h,a);break;case o.RANGE_AT_RIGHT:k=e}return k}getTickPrices(){return{lowerTickPrice:s(this._lowerTick),upperTickPrice:s(this._upperTick)}}}export{u as LiquidityDraft};
//# sourceMappingURL=LiquidityDraft.js.map
