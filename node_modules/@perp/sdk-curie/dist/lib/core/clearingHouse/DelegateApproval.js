"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("big.js");var e=require("../../utils/errorChecker.js");require("../../constants/envVariables.js"),require("../../constants/numbers.js"),require("ethers"),require("../../utils/tick.js");var t=require("../../utils/poll.js"),r=require("../../contracts/Contracts.js"),a=require("../../errors/errors.js"),n=require("../../transactionSender/index.js"),o=require("../../internal/Channel.js"),i=require("../../internal/ChannelEventSource.js"),c=require("../../internal/createMemoizedFetcher.js"),s=require("../../internal/config.js");class p extends o.Channel{constructor(e,t){super(e.channelRegistry),this._perp=e,this._cache=new Map,this._contractReader=e.contractReader,this._account=e.wallet.account,this.delegate=t?t.delegate:e.metadata.contracts.LimitOrderBook.address}async approveOpenPosition(){const e=await this._perp.contractReader.getClearingHouseOpenPositionAction();return this.approve(e)}async revokeOpenPosition(){const e=await this._perp.contractReader.getClearingHouseOpenPositionAction();return this.revoke(e)}async approve(t){return e.invariant(this._perp.hasConnected(),(()=>new a.UnauthorizedError({functionName:"approve"}))),n.getTransaction({account:this._perp.wallet.account,contract:this._perp.contracts.delegateApproval,contractName:r.ContractName.DelegateApproval,contractFunctionName:"approve",args:[this.delegate,t]})}async revoke(t){return e.invariant(this._perp.hasConnected(),(()=>new a.UnauthorizedError({functionName:"revoke"}))),n.getTransaction({account:this._perp.wallet.account,contract:this._perp.contracts.delegateApproval,contractName:r.ContractName.DelegateApproval,contractFunctionName:"revoke",args:[this.delegate,t]})}async delegateApprovalForOpenPosition({cache:e=!0}={}){return await this._fetch("openPosition",{cache:e})}_getEventSourceMap(){const e=this._createFetchAndEmitDelegateApprovalUpdated();return{delegateApprovalUpdated:new i.ChannelEventSource({eventSourceStarter:()=>{var r,a;return t.poll(e,(null===(a=null===(r=this._perp.moduleConfigs)||void 0===r?void 0:r.delegateApproval)||void 0===a?void 0:a.period)||s.DEFAULT_PERIOD).cancel},initEventEmitter:()=>e(!0,!0)})}}async _fetchUpdateData(e){try{return await e()}catch(e){this.emit("updateError",{error:e})}}async _fetch(e,{cache:t=!0}={}){if(this._cache.has(e)&&t)return this._cache.get(e);let r;if("openPosition"===e)r=await this._contractReader.canOpenPositionFor(this._account,this.delegate);return this._cache.set(e,r),r}_createFetchAndEmitDelegateApprovalUpdated(){return c.createMemoizedFetcher((()=>this._fetchUpdateData((()=>this._fetch("openPosition",{cache:!1})))),(()=>this.emit("delegateApprovalUpdated",this)),((e,t)=>e!==t))}}exports.DelegateApproval=p;
//# sourceMappingURL=DelegateApproval.js.map
