import{constants as t}from"ethers";import"../../constants/envVariables.js";import{SETTLEMENT_TOKEN_DECIMAL as r}from"../../constants/numbers.js";import{ContractName as n}from"../../contracts/Contracts.js";import{Channel as e}from"../../internal/Channel.js";import{ChannelEventSource as a}from"../../internal/ChannelEventSource.js";import{big2BigNumberAndScaleUp as c}from"../../utils/formatters.js";import{getTransaction as o}from"../../transactionSender/index.js";import"big.js";import"../../utils/tick.js";class s extends e{constructor(t,r){super(t.channelRegistry),this._perp=t,this._contract=r,this._contractReader=t.contractReader}get contract(){return this._contract}get address(){return this._contract.address}async symbol(){return"USDC"}async name(){return"USD Coin"}async decimals(){return r}async weight(){return 1}async price(){return 1}async cap(){}async balanceOf(t){return this._contractReader.getBalanceOfSettlementToken(t)}async allowance(t,r){return this._contractReader.getAllowanceOfSettlementToken(t,r)}async approve(r,e,a){const s=await this.decimals();return o({account:r,contract:this._contract,contractName:n.SETTLEMENT_TOKEN,contractFunctionName:"approve",args:[e,a?c(a,s):t.MaxUint256]})}_getEventSourceMap(){return{Approval:new a({eventSourceStarter:()=>{const t=(...t)=>this.emit("Approval",...t);return this._contract.on("Approval",t),()=>this._contract.off("Approval",t)}}),Transfer:new a({eventSourceStarter:()=>{const t=(...t)=>this.emit("Transfer",...t);return this._contract.on("Transfer",t),()=>this._contract.off("Transfer",t)}})}}}export{s as SettlementToken};
//# sourceMappingURL=SettlementToken.js.map
