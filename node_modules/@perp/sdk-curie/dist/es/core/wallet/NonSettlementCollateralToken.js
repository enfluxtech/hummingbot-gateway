import{constants as t}from"ethers";import{ContractName as e}from"../../contracts/Contracts.js";import{Channel as a}from"../../internal/Channel.js";import{ChannelEventSource as c}from"../../internal/ChannelEventSource.js";import{big2BigNumberAndScaleUp as r,bigNumber2BigAndScaleDown as s}from"../../utils/formatters.js";import{getTransaction as n}from"../../transactionSender/index.js";import"big.js";import"../../utils/tick.js";import"../../constants/envVariables.js";import"../../constants/numbers.js";class i extends a{constructor(t,e,a){super(t.channelRegistry),this._perp=t,this._cache=new Map,this._contract=e,this._priceFeedContract=a,this._contractReader=t.contractReader,this._metadataInfo=t.metadata.findCollateralByAddress(e.address)}get contract(){return this._contract}get priceFeedContract(){return this._priceFeedContract}get address(){return this._contract.address}async symbol({cache:t=!0}={}){return this._fetch("symbol",{cache:t})}async name({cache:t=!0}={}){return this._fetch("name",{cache:t})}async decimals({cache:t=!0}={}){return this._fetch("decimals",{cache:t})}async weight({cache:t=!0}={}){return this._fetch("weight",{cache:t})}async cap({cache:t=!0}={}){return this._fetch("cap",{cache:t})}async price({cache:t=!0}={}){return this._fetch("price",{cache:t})}async balanceOf(t){const e=await this.decimals();return this._contractReader.getBalanceByToken(t,this.address,e)}async allowance(t,e){return this._contractReader.getAllowanceByToken(t,e,this.address)}async approve(a,c,s){const i=await this.decimals();return n({account:a,contract:this._contract,contractName:e.COLLATERAL_TOKENS,contractFunctionName:"approve",args:[c,s?r(s,i):t.MaxUint256]})}_getEventSourceMap(){return{Approval:new c({eventSourceStarter:t=>{const e=(...t)=>this.emit("Approval",...t);return this._contract.on("Approval",e),()=>this._contract.off("Approval",e)}}),Transfer:new c({eventSourceStarter:t=>{const e=(...t)=>this.emit("Transfer",...t);return this._contract.on("Transfer",e),()=>this._contract.off("Transfer",e)}})}}async _fetch(t,{cache:e=!0}={}){var a,c,r;if(this._cache.has(t)&&e)return this._cache.get(t);let n;switch(t){case"symbol":{const t=null===(a=this._metadataInfo)||void 0===a?void 0:a.symbol;n=t||await this._contract.symbol();break}case"name":{const t=null===(c=this._metadataInfo)||void 0===c?void 0:c.name;n=t||await this._contract.name();break}case"decimals":{const t=null===(r=this._metadataInfo)||void 0===r?void 0:r.decimals;n=t||await this._contract.decimals();break}case"weight":n=(await this._contractReader.getCollateralConfig(this.address)).collateralRatio;break;case"cap":n=(await this._contractReader.getCollateralConfig(this.address)).depositCap;break;case"price":{const[t,e]=await Promise.all([this._priceFeedContract.getPrice(0),this._priceFeedContract.decimals()]);n=s(t,e).toNumber();break}}return this._cache.set(t,n),n}}export{i as NonSettlementCollateralToken};
//# sourceMappingURL=NonSettlementCollateralToken.js.map
