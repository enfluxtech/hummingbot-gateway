{"version":3,"file":"makeCancelablePromise.js","sources":["../../../src/utils/makeCancelablePromise.ts"],"sourcesContent":["// from https://github.com/facebook/react/issues/5465#issuecomment-157888325\nexport interface CancelablePromise<T = any> {\n    promise: Promise<T>\n    cancel: () => void\n}\n\nexport function makeCancelable<T>(promise: Promise<T>): CancelablePromise<T> {\n    let hasCanceled_ = false\n\n    const wrappedPromise = new Promise<T>((resolve, reject) => {\n        promise\n            .then(val => (hasCanceled_ ? reject(new CanceledPromiseError()) : resolve(val)))\n            .catch(error => (hasCanceled_ ? reject(new CanceledPromiseError()) : reject(error)))\n    })\n\n    return {\n        promise: wrappedPromise,\n        cancel() {\n            hasCanceled_ = true\n        },\n    }\n}\n\nexport class CanceledPromiseError extends Error {}\n"],"names":["makeCancelable","promise","hasCanceled_","Promise","resolve","reject","then","val","CanceledPromiseError","catch","error","cancel","Error"],"mappings":"AAMM,SAAUA,EAAkBC,GAC9B,IAAIC,GAAe,EAQnB,MAAO,CACHD,QAPmB,IAAIE,SAAW,CAACC,EAASC,KAC5CJ,EACKK,MAAKC,GAAQL,EAAeG,EAAO,IAAIG,GAA0BJ,EAAQG,KACzEE,OAAMC,GAAyBL,EAAfH,EAAsB,IAAIM,EAAiCE,IAAQ,IAKxFC,SACIT,GAAe,CAClB,EAET,CAEM,MAAOM,UAA6BI"}