// package: injective.types.v1beta1
// file: injective/types/v1beta1/tx_response.proto

import * as jspb from "google-protobuf";

export class TxResponseGenericMessage extends jspb.Message {
  getHeader(): string;
  setHeader(value: string): void;

  getData(): Uint8Array | string;
  getData_asU8(): Uint8Array;
  getData_asB64(): string;
  setData(value: Uint8Array | string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TxResponseGenericMessage.AsObject;
  static toObject(includeInstance: boolean, msg: TxResponseGenericMessage): TxResponseGenericMessage.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: TxResponseGenericMessage, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): TxResponseGenericMessage;
  static deserializeBinaryFromReader(message: TxResponseGenericMessage, reader: jspb.BinaryReader): TxResponseGenericMessage;
}

export namespace TxResponseGenericMessage {
  export type AsObject = {
    header: string,
    data: Uint8Array | string,
  }
}

export class TxResponseData extends jspb.Message {
  clearMessagesList(): void;
  getMessagesList(): Array<TxResponseGenericMessage>;
  setMessagesList(value: Array<TxResponseGenericMessage>): void;
  addMessages(value?: TxResponseGenericMessage, index?: number): TxResponseGenericMessage;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TxResponseData.AsObject;
  static toObject(includeInstance: boolean, msg: TxResponseData): TxResponseData.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: TxResponseData, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): TxResponseData;
  static deserializeBinaryFromReader(message: TxResponseData, reader: jspb.BinaryReader): TxResponseData;
}

export namespace TxResponseData {
  export type AsObject = {
    messagesList: Array<TxResponseGenericMessage.AsObject>,
  }
}

