export declare const DexLensABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "contract ILBFactory";
        readonly name: "lbFactory";
        readonly type: "address";
    }, {
        readonly internalType: "contract ILBLegacyFactory";
        readonly name: "lbLegacyFactory";
        readonly type: "address";
    }, {
        readonly internalType: "contract IJoeFactory";
        readonly name: "joeFactory";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "wnative";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "constructor";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__AlreadyInitialized";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "pair";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "collateral";
        readonly type: "address";
    }];
    readonly name: "JoeDexLens__CollateralNotInPair";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "dataFeed";
        readonly type: "address";
    }];
    readonly name: "JoeDexLens__DataFeedAlreadyAdded";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "dataFeed";
        readonly type: "address";
    }];
    readonly name: "JoeDexLens__DataFeedNotInSet";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__InvalidChainLinkPrice";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__InvalidDataFeed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__LengthsMismatch";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__NativeToken";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__NullWeight";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__SameDataFeed";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__SameTokens";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "pair";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "JoeDexLens__TokenNotInPair";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__UnknownDataFeedType";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__V1ContractNotSet";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__V2ContractNotSet";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__V2_1ContractNotSet";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "JoeDexLens__ZeroAddress";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "SafeAccessControlEnumerable__AccountAlreadyHasRole";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "SafeAccessControlEnumerable__AccountDoesNotHaveRole";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "SafeAccessControlEnumerable__OnlyOwnerOrRole";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "SafeAccessControlEnumerable__OnlyRole";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "SafeAccessControlEnumerable__RoleAlreadyGranted";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SafeOwnable__OnlyOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "SafeOwnable__OnlyPendingOwner";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "x";
        readonly type: "uint256";
    }, {
        readonly internalType: "int256";
        readonly name: "y";
        readonly type: "int256";
    }];
    readonly name: "Uint128x128Math__PowUnderflow";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Uint256x256Math__MulShiftOverflow";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "collateralAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "dfAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint88";
            readonly name: "dfWeight";
            readonly type: "uint88";
        }, {
            readonly internalType: "enum IJoeDexLens.DataFeedType";
            readonly name: "dfType";
            readonly type: "uint8";
        }];
        readonly indexed: false;
        readonly internalType: "struct IJoeDexLens.DataFeed";
        readonly name: "dataFeed";
        readonly type: "tuple";
    }];
    readonly name: "DataFeedAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dfAddress";
        readonly type: "address";
    }];
    readonly name: "DataFeedRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dfAddress";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "weight";
        readonly type: "uint256";
    }];
    readonly name: "DataFeedsWeightSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dfAddress";
        readonly type: "address";
    }];
    readonly name: "NativeDataFeedSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "previousOwner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "OwnershipTransferred";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "pendingOwner";
        readonly type: "address";
    }];
    readonly name: "PendingOwnerSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "adminRole";
        readonly type: "bytes32";
    }];
    readonly name: "RoleAdminSet";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "RoleGranted";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "RoleRevoked";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "DATA_FEED_MANAGER_ROLE";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "DEFAULT_ADMIN_ROLE";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "collateralAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "dfAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint88";
            readonly name: "dfWeight";
            readonly type: "uint88";
        }, {
            readonly internalType: "enum IJoeDexLens.DataFeedType";
            readonly name: "dfType";
            readonly type: "uint8";
        }];
        readonly internalType: "struct IJoeDexLens.DataFeed";
        readonly name: "dataFeed";
        readonly type: "tuple";
    }];
    readonly name: "addDataFeed";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "tokens";
        readonly type: "address[]";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "collateralAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "dfAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint88";
            readonly name: "dfWeight";
            readonly type: "uint88";
        }, {
            readonly internalType: "enum IJoeDexLens.DataFeedType";
            readonly name: "dfType";
            readonly type: "uint8";
        }];
        readonly internalType: "struct IJoeDexLens.DataFeed[]";
        readonly name: "dataFeeds";
        readonly type: "tuple[]";
    }];
    readonly name: "addDataFeeds";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "becomeOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "getDataFeeds";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "collateralAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "dfAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint88";
            readonly name: "dfWeight";
            readonly type: "uint88";
        }, {
            readonly internalType: "enum IJoeDexLens.DataFeedType";
            readonly name: "dfType";
            readonly type: "uint8";
        }];
        readonly internalType: "struct IJoeDexLens.DataFeed[]";
        readonly name: "dataFeeds";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getFactoryV1";
    readonly outputs: readonly [{
        readonly internalType: "contract IJoeFactory";
        readonly name: "factoryV1";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getFactoryV2_1";
    readonly outputs: readonly [{
        readonly internalType: "contract ILBFactory";
        readonly name: "factoryV2";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getLegacyFactoryV2";
    readonly outputs: readonly [{
        readonly internalType: "contract ILBLegacyFactory";
        readonly name: "legacyFactoryV2";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "getRoleAdmin";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly internalType: "uint256";
        readonly name: "index";
        readonly type: "uint256";
    }];
    readonly name: "getRoleMemberAt";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "getRoleMemberCount";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "getTokenPriceNative";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "price";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }];
    readonly name: "getTokenPriceUSD";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "price";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "tokens";
        readonly type: "address[]";
    }];
    readonly name: "getTokensPricesNative";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "prices";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "tokens";
        readonly type: "address[]";
    }];
    readonly name: "getTokensPricesUSD";
    readonly outputs: readonly [{
        readonly internalType: "uint256[]";
        readonly name: "prices";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "getWNative";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "wNative";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "grantRole";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "hasRole";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "aggregator";
        readonly type: "address";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "pendingOwner";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "dfAddress";
        readonly type: "address";
    }];
    readonly name: "removeDataFeed";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "tokens";
        readonly type: "address[]";
    }, {
        readonly internalType: "address[]";
        readonly name: "dfAddresses";
        readonly type: "address[]";
    }];
    readonly name: "removeDataFeeds";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }];
    readonly name: "renounceRole";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "role";
        readonly type: "bytes32";
    }, {
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "revokeRole";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "token";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "dfAddress";
        readonly type: "address";
    }, {
        readonly internalType: "uint88";
        readonly name: "newWeight";
        readonly type: "uint88";
    }];
    readonly name: "setDataFeedWeight";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address[]";
        readonly name: "tokens";
        readonly type: "address[]";
    }, {
        readonly internalType: "address[]";
        readonly name: "dfAddresses";
        readonly type: "address[]";
    }, {
        readonly internalType: "uint88[]";
        readonly name: "newWeights";
        readonly type: "uint88[]";
    }];
    readonly name: "setDataFeedsWeights";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "aggregator";
        readonly type: "address";
    }];
    readonly name: "setNativeDataFeed";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newOwner";
        readonly type: "address";
    }];
    readonly name: "setPendingOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];
