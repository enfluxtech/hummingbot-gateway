// package: injective.peggy.v1
// file: injective/peggy/v1/proposal.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";

export class BlacklistEthereumAddressesProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  clearBlacklistAddressesList(): void;
  getBlacklistAddressesList(): Array<string>;
  setBlacklistAddressesList(value: Array<string>): void;
  addBlacklistAddresses(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BlacklistEthereumAddressesProposal.AsObject;
  static toObject(includeInstance: boolean, msg: BlacklistEthereumAddressesProposal): BlacklistEthereumAddressesProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BlacklistEthereumAddressesProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BlacklistEthereumAddressesProposal;
  static deserializeBinaryFromReader(message: BlacklistEthereumAddressesProposal, reader: jspb.BinaryReader): BlacklistEthereumAddressesProposal;
}

export namespace BlacklistEthereumAddressesProposal {
  export type AsObject = {
    title: string,
    description: string,
    blacklistAddressesList: Array<string>,
  }
}

export class RevokeEthereumBlacklistProposal extends jspb.Message {
  getTitle(): string;
  setTitle(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  clearBlacklistAddressesList(): void;
  getBlacklistAddressesList(): Array<string>;
  setBlacklistAddressesList(value: Array<string>): void;
  addBlacklistAddresses(value: string, index?: number): string;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): RevokeEthereumBlacklistProposal.AsObject;
  static toObject(includeInstance: boolean, msg: RevokeEthereumBlacklistProposal): RevokeEthereumBlacklistProposal.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: RevokeEthereumBlacklistProposal, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): RevokeEthereumBlacklistProposal;
  static deserializeBinaryFromReader(message: RevokeEthereumBlacklistProposal, reader: jspb.BinaryReader): RevokeEthereumBlacklistProposal;
}

export namespace RevokeEthereumBlacklistProposal {
  export type AsObject = {
    title: string,
    description: string,
    blacklistAddressesList: Array<string>,
  }
}

